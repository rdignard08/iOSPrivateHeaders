
@interface AppleSpell : NSObject {

    ^v _proofReaderConnection;
    ^{__CFDictionary=} _databaseConnections;
    ^{__CFDictionary=} _languageModelDicts;
    double _lastWriteLanguageModels;
    double _lastDecayLanguageModels;
    double _lastReleaseLanguageModels;
    double _lastMaintainLanguageModels;
    unsigned long long _languageModelWordCount;
    NSMutableDictionary* _bindicts;
    NSMutableArray* _globalBindictDataArray;
    NSMutableArray* _globalNameBindictDataArray;
    NSMutableArray* _globalNegBindictDataArray;
    NSMutableDictionary* _autocorrections;
    NSString* _lastLanguage;
    NSArray* _userPreferredLanguages;
    NSArray* _userTopLanguages;
    NSMutableDictionary* _learnedResponses;
    NSMutableArray* _diagnosticInfo;
    NSMutableSet* _foundNames;
    double _lastFindNames;
    NSMutableSet* _foundShortcuts;
    NSMutableDictionary* _lastSampleCollected;
    unsigned long long _numberOfSamplesCollected;
    double _lastSampleCollection;
    NSMutableArray* _retainedSamples;
    NSMutableDictionary* _lastSampleRecorded;
    double _lastSampleRecording;
    NSMutableArray* _altBundleURLs;
    NSURL* _updateBundleURL;
    NSMutableDictionary* _languageCounts;
    double _lastLanguageCounts;
    NSMutableDictionary* _userAdaptationDictionary;
    NSData* _lastKeyEventData;
    ^Q _keyboardHistogram;
    double _lastKeyboardHistogramRecording;
    BOOL _userPrefersUncheckedLatinLanguage;
}

 - ({_NSRange=QQ}) spellServer:(id)a checkGrammarInString:(id)b language:(id)c details:(^@)d ;
 - ({_NSRange=QQ}) spellServer:(id)a findMisspelledWordInString:(id)b language:(id)c wordCount:(^q)d countOnly:(BOOL)e correction:(^@)f ;
 - (void) setUpdateBundleURL:(id)a ;
 - (id) spellServer:(id)a suggestGuessesForWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d ;
 - (id) spellServer:(id)a suggestCompletionsForPartialWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d ;
 - (id) spellServer:(id)a suggestWordWithLengthInRange:({_NSRange=QQ})b language:(id)c ;
 - (BOOL) spellServer:(id)a canChangeCaseOfFirstLetterInString:(id)b toUpperCase:(BOOL)c language:(id)d ;
 - (id) spellServer:(id)a stringForInputString:(id)b language:(id)c ;
 - (id) spellServer:(id)a alternativesForPinyinInputString:(id)b language:(id)c ;
 - (id) init;
 - (void) addAlternateDataBundleURL:(id)a ;
 - (void) resetTimer;
 - (void) _findAlternateDataBundleURLs;
 - (id) bundle;
 - (id) localizationsForLanguage:(id)a ;
 - (id) localizationForLanguage:(id)a ;
 - (id) fallbackLocalizationForLanguage:(id)a ;
 - (id) bindictDataArrayForLanguage:(id)a index:(unsigned long long)b ;
 - (void) clearCaches;
 - (^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}}) databaseConnectionForLanguage:(id)a ;
 - (id) globalBindictDataArray;
 - (id) globalNameBindictDataArray;
 - (BOOL) validateAbbreviationOrNumberWordBuffer:(char*)a length:(unsigned long long)b language:(id)c encoding:(unsigned int)d connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})e sender:(id)f ;
 - (BOOL) checkNameWordBuffer:(char*)a length:(unsigned long long)b language:(id)c encoding:(unsigned int)d globalOnly:(BOOL)e ;
 - (BOOL) checkWordBuffer:(char*)a length:(unsigned long long)b language:(id)c encoding:(unsigned int)d index:(unsigned long long)e ;
 - (BOOL) checkNoPredictWordBuffer:(char*)a length:(unsigned long long)b language:(id)c encoding:(unsigned int)d depth:(unsigned long long)e ;
 - (id) globalNegativeBindictDataArray;
 - (BOOL) checkNegativeWordBuffer:(char*)a length:(unsigned long long)b language:(id)c encoding:(unsigned int)d depth:(unsigned long long)e ;
 - (unsigned int) encodingForLanguage:(id)a ;
 - (BOOL) validateWordBuffer:(char*)a length:(unsigned long long)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c ;
 - (BOOL) checkSpecialPrefixesForWordBuffer:(char*)a length:(unsigned long long)b ;
 - (BOOL) validateWordBuffer:(char*)a length:(unsigned long long)b language:(id)c connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})d sender:(id)e checkBase:(BOOL)f checkDict:(BOOL)g checkTemp:(BOOL)h checkUser:(BOOL)i checkNames:(BOOL)j checkHyphens:(BOOL)k checkIntercaps:(BOOL)l checkOptions:(BOOL)m depth:(unsigned long long)n ;
 - (unsigned long long) numberOfTurkishSuffixPointsInBuffer:(char*)a length:(unsigned long long)b maxSuffixPoints:(unsigned long long)c suffixPoints:(^{?=Qi})d ;
 - (BOOL) _checkEnglishGrammarInString:(id)a range:({_NSRange=QQ})b indexIntoBuffer:(unsigned long long)c bufferLength:(unsigned long long)d language:(id)e connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})f sender:(id)g bufIO:(^{_PR_BUF_IO=*CCSSSS^{_PR_LIMITS}^{_PR_PARA_INFO}^{_PR_ERROR}^^{_PR_PARSE_INFO}Cscc{_PR_STATUS=IiS}})h retval:(^i)i errorRange:(^{_NSRange=QQ})j details:(^@)k ;
 - (BOOL) _checkGrammarInString:(id)a range:({_NSRange=QQ})b language:(id)c connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})d sender:(id)e bufIO:(^{_PR_BUF_IO=*CCSSSS^{_PR_LIMITS}^{_PR_PARA_INFO}^{_PR_ERROR}^^{_PR_PARSE_INFO}Cscc{_PR_STATUS=IiS}})f errorRange:(^{_NSRange=QQ})g details:(^@)h ;
 - ({_NSRange=QQ}) spellServer:(id)a checkGrammarInString:(id)b range:({_NSRange=QQ})c language:(id)d orthography:(id)e mutableResults:(id)f offset:(unsigned long long)g details:(^@)h ;
 - (id) bindictDataForLanguage:(id)a index:(unsigned long long)b ;
 - (id) _orthographyByModifyingOrthography:(id)a withLatinLanguage:(id)b ;
 - (BOOL) validateWordBuffer:(char*)a length:(unsigned long long)b language:(id)c connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})d sender:(id)e checkBase:(BOOL)f checkDict:(BOOL)g checkTemp:(BOOL)h checkNames:(BOOL)i checkHyphens:(BOOL)j checkIntercaps:(BOOL)k checkOptions:(BOOL)l depth:(unsigned long long)m ;
 - (id) autocorrectionDictionaryForLanguage:(id)a ;
 - (id) _correctionForString:(id)a range:({_NSRange=QQ})b inString:(id)c tagger:(id)d taggerIndex:(unsigned long long)e appIdentifier:(id)f dictionary:(id)g language:(id)h connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})i keyEventData:(id)j alternativeCorrection:(^@)k isApostropheInsertion:(^B)l ;
 - ({_NSRange=QQ}) spellServer:(id)a findMisspelledWordInString:(id)b range:({_NSRange=QQ})c languages:(id)d topLanguages:(id)e orthography:(id)f checkOrthography:(BOOL)g mutableResults:(id)h offset:(unsigned long long)i autocorrect:(BOOL)j keyEventData:(id)k appIdentifier:(id)l wordCount:(^q)m countOnly:(BOOL)n correction:(^@)o ;
 - (id) spellServer:(id)a suggestGuessesForKoreanWordRange:({_NSRange=QQ})b inString:(id)c options:(id)d ;
 - (id) spellServer:(id)a suggestGuessesForWordRange:({_NSRange=QQ})b inString:(id)c inLanguage:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestCompletionsForPartialWordRange:({_NSRange=QQ})b inString:(id)c inLanguage:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})b inString:(id)c inLanguage:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})b inString:(id)c inLanguage:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestWordWithMinimumLength:(unsigned long long)b maximumLength:(unsigned long long)c language:(id)d ;
 - (id) spellServer:(id)a alternativesForPinyinInputString:(id)b ;
 - (id) spellServer:(id)a extendedAlternativesForPinyinInputString:(id)b ;
 - (id) spellServer:(id)a prefixesForPinyinInputString:(id)b ;
 - (id) spellServer:(id)a correctionsForPinyinInputString:(id)b ;
 - (void) timeout:(id)a ;
 - (id) linguisticTaggerForLanguage:(id)a string:(id)b range:({_NSRange=QQ})c taggerIndex:(^Q)d ;
 - (BOOL) checkNoPredictWordBuffer:(char*)a length:(unsigned long long)b language:(id)c encoding:(unsigned int)d ;
 - (BOOL) checkNegativeWordBuffer:(char*)a length:(unsigned long long)b language:(id)c encoding:(unsigned int)d ;
 - (BOOL) validateWordPrefixBuffer:(char*)a length:(unsigned long long)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c ;
 - (BOOL) validateWordBuffer:(char*)a length:(unsigned long long)b language:(id)c connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})d sender:(id)e checkBase:(BOOL)f checkDict:(BOOL)g checkNames:(BOOL)h checkHyphens:(BOOL)i checkIntercaps:(BOOL)j checkOptions:(BOOL)k depth:(unsigned long long)l ;
 - ({_NSRange=QQ}) spellServer:(id)a findMisspelledWordInString:(id)b language:(id)c wordCount:(^q)d countOnly:(BOOL)e ;
 - (id) spellServer:(id)a checkString:(id)b offset:(unsigned long long)c types:(unsigned long long)d options:(id)e orthography:(id)f wordCount:(^q)g ;
 - (id) spellServer:(id)a suggestGuessesForWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestGuessesForWord:(id)b inLanguage:(id)c ;
 - (id) spellServer:(id)a suggestCompletionsForPartialWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d ;
 - (id) spellServer:(id)a suggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d options:(id)e ;
 - (id) spellServer:(id)a suggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})b inString:(id)c language:(id)d ;
 - (id) spellServer:(id)a extendedAlternativesForPinyinInputString:(id)b language:(id)c ;
 - (id) spellServer:(id)a prefixesForPinyinInputString:(id)b language:(id)c ;
 - (id) spellServer:(id)a correctionsForPinyinInputString:(id)b language:(id)c ;
 - (id) _crudePreviousWordInString:(id)a inRange:({_NSRange=QQ})b precededBy:(^@)c ;
 - (id) _modifiedGrammarDescriptionForDescription:(id)a ;
 - (id) _detailWithRange:({_NSRange=QQ})a description:(id)b corrections:(id)c ;
 - (id) _correctionForSuggestedPhrase:(r*)a originalBuffer:(r*)b length:(unsigned long long)c ;
 - (BOOL) looksLikeParticiple:(id)a language:(id)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c sender:(id)d ;
 - (id) _crudeNextWordInString:(id)a inRange:({_NSRange=QQ})b ;
 - (BOOL) looksLikeAdverb:(id)a language:(id)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c sender:(id)d ;
 - (BOOL) onContractionList:(id)a language:(id)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c sender:(id)d ;
 - (BOOL) onNoContractionList:(id)a language:(id)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c sender:(id)d ;
 - (BOOL) looksLikeArticledNoun:(id)a language:(id)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c ;
 - (id) _crudePreviousWordInString:(id)a inRange:({_NSRange=QQ})b ;
 - (id) _correctionForKoreanString:(id)a range:({_NSRange=QQ})b inString:(id)c tagger:(id)d taggerIndex:(unsigned long long)e appIdentifier:(id)f dictionary:(id)g keyEventData:(id)h alternativeCorrection:(^@)i ;
 - (id) _japaneseCorrectionForString:(id)a connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})b ;
 - (void) _addBasicGuessesForWordBuffer:(char*)a length:(unsigned long long)b language:(id)c connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})d sender:(id)e minAutocorrectionLength:(unsigned long long)f toGuesses:(id)g ;
 - (id) spellServer:(id)a modificationsForPinyinInputString:(id)b ;
 - (id) spellServer:(id)a finalModificationsForPinyinInputString:(id)b ;
 - (id) englishStringsFromWordBuffer:(char*)a length:(unsigned long long)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c ;
 - (id) englishStringFromWordBuffer:(char*)a length:(unsigned long long)b connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c ;
 - (void) addSpecialModifiedPinyinToArray:(id)a inBuffer:(char*)b length:(unsigned long long)c atEnd:(BOOL)d ;
 - (void) addModifiedPinyinToArray:(id)a connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})b fromIndex:(unsigned long long)c prevIndex:(unsigned long long)d prevPrevIndex:(unsigned long long)e startingModificationsAt:(unsigned long long)f inBuffer:(char*)g length:(unsigned long long)h initialSyllableCount:(unsigned long long)i initialScore:(unsigned long long)j prevScore:(unsigned long long)k prevPrevScore:(unsigned long long)l lastSyllableScore:(unsigned long long)m couldBeAbbreviatedPinyin:(BOOL)n ;
 - (void) addModifiedPartialPinyinToArray:(id)a connection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})b fromIndex:(unsigned long long)c prevIndex:(unsigned long long)d prevPrevIndex:(unsigned long long)e prePrevPrevIndex:(unsigned long long)f startingModificationsAt:(unsigned long long)g inBuffer:(char*)h length:(unsigned long long)i initialSyllableCount:(unsigned long long)j initialScore:(unsigned long long)k prevScore:(unsigned long long)l prevPrevScore:(unsigned long long)m lastSyllableScore:(unsigned long long)n ;
 - (id) _pinyinStringByCombiningPinyinString:(id)a withPinyinString:(id)b ;
 - (id) _primitiveRetainedAlternativesForPinyinInputString:(id)a ;
 - (unsigned long long) _getSplitIndexes:(^Q)a maxCount:(unsigned long long)b forPinyinInputString:(id)c ;
 - (id) _recursiveRetainedAlternativesForPinyinInputString:(id)a depth:(unsigned long long)b ;
 - (id) _retainedAlternativesByCombiningAlternatives:(id)a withAlternatives:(id)b andAddingAlternatives:(id)c ;
 - (id) spellServer:(id)a _retainedAlternativesForPinyinInputString:(id)b extended:(BOOL)c ;
 - (id) spellServer:(id)a _retainedPrefixesForPinyinInputString:(id)b ;
 - (id) spellServer:(id)a _retainedCorrectionsForPinyinInputString:(id)b ;
 - (id) spellServer:(id)a _retainedModificationsForPinyinInputString:(id)b geometryModelData:(id)c ;
 - (id) spellServer:(id)a _retainedFinalModificationsForPinyinInputString:(id)b geometryModelData:(id)c ;
 - (id) spellServer:(id)a modificationsForPinyinInputString:(id)b geometryModelData:(id)c ;
 - (void) addGuessesForKoreanWord:(id)a toMutableArray:(id)b includeAdditionalGuesses:(BOOL)c ;


@end
