
@interface AppleSpell : NSObject {

    ^v _proofReaderConnection;
    ^{__CFDictionary=} _databaseConnections;
    ^{__CFDictionary=} _languageModelDicts;
    d _lastWriteLanguageModels;
    d _lastDecayLanguageModels;
    d _lastReleaseLanguageModels;
    d _lastMaintainLanguageModels;
    Q _languageModelWordCount;
    @"NSMutableDictionary" _bindicts;
    @"NSMutableArray" _globalBindictDataArray;
    @"NSMutableArray" _globalNameBindictDataArray;
    @"NSMutableArray" _globalNegBindictDataArray;
    @"NSMutableDictionary" _autocorrections;
    @"NSString" _lastLanguage;
    @"NSArray" _userPreferredLanguages;
    @"NSArray" _userTopLanguages;
    @"NSMutableDictionary" _learnedResponses;
    @"NSMutableArray" _diagnosticInfo;
    @"NSMutableSet" _foundNames;
    d _lastFindNames;
    @"NSMutableSet" _foundShortcuts;
    @"NSMutableDictionary" _lastSampleCollected;
    Q _numberOfSamplesCollected;
    d _lastSampleCollection;
    @"NSMutableArray" _retainedSamples;
    @"NSMutableDictionary" _lastSampleRecorded;
    d _lastSampleRecording;
    @"NSMutableArray" _altBundleURLs;
    @"NSURL" _updateBundleURL;
    @"NSMutableDictionary" _languageCounts;
    d _lastLanguageCounts;
    @"NSMutableDictionary" _userAdaptationDictionary;
    @"NSData" _lastKeyEventData;
    ^Q _keyboardHistogram;
    d _lastKeyboardHistogramRecording;
    BOOL _userPrefersUncheckedLatinLanguage;
}

 - ({_NSRange=QQ}) spellServer:(id)acheckGrammarInString:(id)blanguage:(id)cdetails:(^@)d;
 - ({_NSRange=QQ}) spellServer:(id)afindMisspelledWordInString:(id)blanguage:(id)cwordCount:(^q)dcountOnly:(BOOL)ecorrection:(^@)f;
 - (void) setUpdateBundleURL:(id)a;
 - (id) spellServer:(id)asuggestGuessesForWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)asuggestCompletionsForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)asuggestWordWithLengthInRange:({_NSRange=QQ})blanguage:(id)c;
 - (BOOL) spellServer:(id)acanChangeCaseOfFirstLetterInString:(id)btoUpperCase:(BOOL)clanguage:(id)d;
 - (id) spellServer:(id)astringForInputString:(id)blanguage:(id)c;
 - (id) spellServer:(id)aalternativesForPinyinInputString:(id)blanguage:(id)c;
 - (id) init;
 - (void) addAlternateDataBundleURL:(id)a;
 - (void) resetTimer;
 - (void) _findAlternateDataBundleURLs;
 - (id) bundle;
 - (id) localizationsForLanguage:(id)a;
 - (id) localizationForLanguage:(id)a;
 - (id) fallbackLocalizationForLanguage:(id)a;
 - (id) bindictDataArrayForLanguage:(id)aindex:(Q)b;
 - (void) clearCaches;
 - (^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}}) databaseConnectionForLanguage:(id)a;
 - (id) globalBindictDataArray;
 - (id) globalNameBindictDataArray;
 - (BOOL) validateAbbreviationOrNumberWordBuffer:(*)alength:(Q)blanguage:(id)cencoding:(I)dconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})esender:(id)f;
 - (BOOL) checkNameWordBuffer:(*)alength:(Q)blanguage:(id)cencoding:(I)dglobalOnly:(BOOL)e;
 - (BOOL) checkWordBuffer:(*)alength:(Q)blanguage:(id)cencoding:(I)dindex:(Q)e;
 - (BOOL) checkNoPredictWordBuffer:(*)alength:(Q)blanguage:(id)cencoding:(I)ddepth:(Q)e;
 - (id) globalNegativeBindictDataArray;
 - (BOOL) checkNegativeWordBuffer:(*)alength:(Q)blanguage:(id)cencoding:(I)ddepth:(Q)e;
 - (I) encodingForLanguage:(id)a;
 - (BOOL) validateWordBuffer:(*)alength:(Q)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (BOOL) checkSpecialPrefixesForWordBuffer:(*)alength:(Q)b;
 - (BOOL) validateWordBuffer:(*)alength:(Q)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)echeckBase:(BOOL)fcheckDict:(BOOL)gcheckTemp:(BOOL)hcheckUser:(BOOL)icheckNames:(BOOL)jcheckHyphens:(BOOL)kcheckIntercaps:(BOOL)lcheckOptions:(BOOL)mdepth:(Q)n;
 - (Q) numberOfTurkishSuffixPointsInBuffer:(*)alength:(Q)bmaxSuffixPoints:(Q)csuffixPoints:(^{?=Qi})d;
 - (BOOL) _checkEnglishGrammarInString:(id)arange:({_NSRange=QQ})bindexIntoBuffer:(Q)cbufferLength:(Q)dlanguage:(id)econnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})fsender:(id)gbufIO:(^{_PR_BUF_IO=*CCSSSS^{_PR_LIMITS}^{_PR_PARA_INFO}^{_PR_ERROR}^^{_PR_PARSE_INFO}Cscc{_PR_STATUS=IiS}})hretval:(^i)ierrorRange:(^{_NSRange=QQ})jdetails:(^@)k;
 - (BOOL) _checkGrammarInString:(id)arange:({_NSRange=QQ})blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)ebufIO:(^{_PR_BUF_IO=*CCSSSS^{_PR_LIMITS}^{_PR_PARA_INFO}^{_PR_ERROR}^^{_PR_PARSE_INFO}Cscc{_PR_STATUS=IiS}})ferrorRange:(^{_NSRange=QQ})gdetails:(^@)h;
 - ({_NSRange=QQ}) spellServer:(id)acheckGrammarInString:(id)brange:({_NSRange=QQ})clanguage:(id)dorthography:(id)emutableResults:(id)foffset:(Q)gdetails:(^@)h;
 - (id) bindictDataForLanguage:(id)aindex:(Q)b;
 - (id) _orthographyByModifyingOrthography:(id)awithLatinLanguage:(id)b;
 - (BOOL) validateWordBuffer:(*)alength:(Q)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)echeckBase:(BOOL)fcheckDict:(BOOL)gcheckTemp:(BOOL)hcheckNames:(BOOL)icheckHyphens:(BOOL)jcheckIntercaps:(BOOL)kcheckOptions:(BOOL)ldepth:(Q)m;
 - (id) autocorrectionDictionaryForLanguage:(id)a;
 - (id) _correctionForString:(id)arange:({_NSRange=QQ})binString:(id)ctagger:(id)dtaggerIndex:(Q)eappIdentifier:(id)fdictionary:(id)glanguage:(id)hconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})ikeyEventData:(id)jalternativeCorrection:(^@)kisApostropheInsertion:(^B)l;
 - ({_NSRange=QQ}) spellServer:(id)afindMisspelledWordInString:(id)brange:({_NSRange=QQ})clanguages:(id)dtopLanguages:(id)eorthography:(id)fcheckOrthography:(BOOL)gmutableResults:(id)hoffset:(Q)iautocorrect:(BOOL)jkeyEventData:(id)kappIdentifier:(id)lwordCount:(^q)mcountOnly:(BOOL)ncorrection:(^@)o;
 - (id) spellServer:(id)asuggestGuessesForKoreanWordRange:({_NSRange=QQ})binString:(id)coptions:(id)d;
 - (id) spellServer:(id)asuggestGuessesForWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionsForPartialWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestWordWithMinimumLength:(Q)bmaximumLength:(Q)clanguage:(id)d;
 - (id) spellServer:(id)aalternativesForPinyinInputString:(id)b;
 - (id) spellServer:(id)aextendedAlternativesForPinyinInputString:(id)b;
 - (id) spellServer:(id)aprefixesForPinyinInputString:(id)b;
 - (id) spellServer:(id)acorrectionsForPinyinInputString:(id)b;
 - (void) timeout:(id)a;
 - (id) linguisticTaggerForLanguage:(id)astring:(id)brange:({_NSRange=QQ})ctaggerIndex:(^Q)d;
 - (BOOL) checkNoPredictWordBuffer:(*)alength:(Q)blanguage:(id)cencoding:(I)d;
 - (BOOL) checkNegativeWordBuffer:(*)alength:(Q)blanguage:(id)cencoding:(I)d;
 - (BOOL) validateWordPrefixBuffer:(*)alength:(Q)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (BOOL) validateWordBuffer:(*)alength:(Q)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)echeckBase:(BOOL)fcheckDict:(BOOL)gcheckNames:(BOOL)hcheckHyphens:(BOOL)icheckIntercaps:(BOOL)jcheckOptions:(BOOL)kdepth:(Q)l;
 - ({_NSRange=QQ}) spellServer:(id)afindMisspelledWordInString:(id)blanguage:(id)cwordCount:(^q)dcountOnly:(BOOL)e;
 - (id) spellServer:(id)acheckString:(id)boffset:(Q)ctypes:(Q)doptions:(id)eorthography:(id)fwordCount:(^q)g;
 - (id) spellServer:(id)asuggestGuessesForWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestGuessesForWord:(id)binLanguage:(id)c;
 - (id) spellServer:(id)asuggestCompletionsForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)asuggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)aextendedAlternativesForPinyinInputString:(id)blanguage:(id)c;
 - (id) spellServer:(id)aprefixesForPinyinInputString:(id)blanguage:(id)c;
 - (id) spellServer:(id)acorrectionsForPinyinInputString:(id)blanguage:(id)c;
 - (id) _crudePreviousWordInString:(id)ainRange:({_NSRange=QQ})bprecededBy:(^@)c;
 - (id) _modifiedGrammarDescriptionForDescription:(id)a;
 - (id) _detailWithRange:({_NSRange=QQ})adescription:(id)bcorrections:(id)c;
 - (id) _correctionForSuggestedPhrase:(r*)aoriginalBuffer:(r*)blength:(Q)c;
 - (BOOL) looksLikeParticiple:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (id) _crudeNextWordInString:(id)ainRange:({_NSRange=QQ})b;
 - (BOOL) looksLikeAdverb:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (BOOL) onContractionList:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (BOOL) onNoContractionList:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (BOOL) looksLikeArticledNoun:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (id) _crudePreviousWordInString:(id)ainRange:({_NSRange=QQ})b;
 - (id) _correctionForKoreanString:(id)arange:({_NSRange=QQ})binString:(id)ctagger:(id)dtaggerIndex:(Q)eappIdentifier:(id)fdictionary:(id)gkeyEventData:(id)halternativeCorrection:(^@)i;
 - (id) _japaneseCorrectionForString:(id)aconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})b;
 - (void) _addBasicGuessesForWordBuffer:(*)alength:(Q)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)eminAutocorrectionLength:(Q)ftoGuesses:(id)g;
 - (id) spellServer:(id)amodificationsForPinyinInputString:(id)b;
 - (id) spellServer:(id)afinalModificationsForPinyinInputString:(id)b;
 - (id) englishStringsFromWordBuffer:(*)alength:(Q)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (id) englishStringFromWordBuffer:(*)alength:(Q)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (void) addSpecialModifiedPinyinToArray:(id)ainBuffer:(*)blength:(Q)catEnd:(BOOL)d;
 - (void) addModifiedPinyinToArray:(id)aconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})bfromIndex:(Q)cprevIndex:(Q)dprevPrevIndex:(Q)estartingModificationsAt:(Q)finBuffer:(*)glength:(Q)hinitialSyllableCount:(Q)iinitialScore:(Q)jprevScore:(Q)kprevPrevScore:(Q)llastSyllableScore:(Q)mcouldBeAbbreviatedPinyin:(BOOL)n;
 - (void) addModifiedPartialPinyinToArray:(id)aconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})bfromIndex:(Q)cprevIndex:(Q)dprevPrevIndex:(Q)eprePrevPrevIndex:(Q)fstartingModificationsAt:(Q)ginBuffer:(*)hlength:(Q)iinitialSyllableCount:(Q)jinitialScore:(Q)kprevScore:(Q)lprevPrevScore:(Q)mlastSyllableScore:(Q)n;
 - (id) _pinyinStringByCombiningPinyinString:(id)awithPinyinString:(id)b;
 - (id) _primitiveRetainedAlternativesForPinyinInputString:(id)a;
 - (Q) _getSplitIndexes:(^Q)amaxCount:(Q)bforPinyinInputString:(id)c;
 - (id) _recursiveRetainedAlternativesForPinyinInputString:(id)adepth:(Q)b;
 - (id) _retainedAlternativesByCombiningAlternatives:(id)awithAlternatives:(id)bandAddingAlternatives:(id)c;
 - (id) spellServer:(id)a_retainedAlternativesForPinyinInputString:(id)bextended:(BOOL)c;
 - (id) spellServer:(id)a_retainedPrefixesForPinyinInputString:(id)b;
 - (id) spellServer:(id)a_retainedCorrectionsForPinyinInputString:(id)b;
 - (id) spellServer:(id)a_retainedModificationsForPinyinInputString:(id)bgeometryModelData:(id)c;
 - (id) spellServer:(id)a_retainedFinalModificationsForPinyinInputString:(id)bgeometryModelData:(id)c;
 - (id) spellServer:(id)amodificationsForPinyinInputString:(id)bgeometryModelData:(id)c;
 - (void) addGuessesForKoreanWord:(id)atoMutableArray:(id)bincludeAdditionalGuesses:(BOOL)c;


@end
