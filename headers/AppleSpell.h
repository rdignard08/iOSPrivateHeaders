
@interface AppleSpell : NSObject {

    ^v _proofReaderConnection;
    ^{__CFDictionary=} _databaseConnections;
    ^{__CFDictionary=} _languageModelDicts;
    double _lastWriteLanguageModels;
    double _lastDecayLanguageModels;
    double _lastReleaseLanguageModels;
    double _lastMaintainLanguageModels;
    unsigned long long _languageModelWordCount;
    NSMutableDictionary* _bindicts;
    NSMutableArray* _globalBindictDataArray;
    NSMutableArray* _globalNameBindictDataArray;
    NSMutableArray* _globalNegBindictDataArray;
    NSMutableDictionary* _autocorrections;
    NSString* _lastLanguage;
    NSArray* _userPreferredLanguages;
    NSArray* _userTopLanguages;
    NSMutableDictionary* _learnedResponses;
    NSMutableArray* _diagnosticInfo;
    NSMutableSet* _foundNames;
    double _lastFindNames;
    NSMutableSet* _foundShortcuts;
    NSMutableDictionary* _lastSampleCollected;
    unsigned long long _numberOfSamplesCollected;
    double _lastSampleCollection;
    NSMutableArray* _retainedSamples;
    NSMutableDictionary* _lastSampleRecorded;
    double _lastSampleRecording;
    NSMutableArray* _altBundleURLs;
    NSURL* _updateBundleURL;
    NSMutableDictionary* _languageCounts;
    double _lastLanguageCounts;
    NSMutableDictionary* _userAdaptationDictionary;
    NSData* _lastKeyEventData;
    ^Q _keyboardHistogram;
    double _lastKeyboardHistogramRecording;
    BOOL _userPrefersUncheckedLatinLanguage;
}

 - ({_NSRange=QQ}) spellServer:(id)acheckGrammarInString:(id)blanguage:(id)cdetails:(^@)d;
 - ({_NSRange=QQ}) spellServer:(id)afindMisspelledWordInString:(id)blanguage:(id)cwordCount:(^q)dcountOnly:(BOOL)ecorrection:(^@)f;
 - (void) setUpdateBundleURL:(id)a;
 - (id) spellServer:(id)asuggestGuessesForWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)asuggestCompletionsForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)asuggestWordWithLengthInRange:({_NSRange=QQ})blanguage:(id)c;
 - (BOOL) spellServer:(id)acanChangeCaseOfFirstLetterInString:(id)btoUpperCase:(BOOL)clanguage:(id)d;
 - (id) spellServer:(id)astringForInputString:(id)blanguage:(id)c;
 - (id) spellServer:(id)aalternativesForPinyinInputString:(id)blanguage:(id)c;
 - (id) init;
 - (void) addAlternateDataBundleURL:(id)a;
 - (void) resetTimer;
 - (void) _findAlternateDataBundleURLs;
 - (id) bundle;
 - (id) localizationsForLanguage:(id)a;
 - (id) localizationForLanguage:(id)a;
 - (id) fallbackLocalizationForLanguage:(id)a;
 - (id) bindictDataArrayForLanguage:(id)aindex:(unsigned long long)b;
 - (void) clearCaches;
 - (^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}}) databaseConnectionForLanguage:(id)a;
 - (id) globalBindictDataArray;
 - (id) globalNameBindictDataArray;
 - (BOOL) validateAbbreviationOrNumberWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cencoding:(unsigned int)dconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})esender:(id)f;
 - (BOOL) checkNameWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cencoding:(unsigned int)dglobalOnly:(BOOL)e;
 - (BOOL) checkWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cencoding:(unsigned int)dindex:(unsigned long long)e;
 - (BOOL) checkNoPredictWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cencoding:(unsigned int)ddepth:(unsigned long long)e;
 - (id) globalNegativeBindictDataArray;
 - (BOOL) checkNegativeWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cencoding:(unsigned int)ddepth:(unsigned long long)e;
 - (unsigned int) encodingForLanguage:(id)a;
 - (BOOL) validateWordBuffer:(char*)alength:(unsigned long long)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (BOOL) checkSpecialPrefixesForWordBuffer:(char*)alength:(unsigned long long)b;
 - (BOOL) validateWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)echeckBase:(BOOL)fcheckDict:(BOOL)gcheckTemp:(BOOL)hcheckUser:(BOOL)icheckNames:(BOOL)jcheckHyphens:(BOOL)kcheckIntercaps:(BOOL)lcheckOptions:(BOOL)mdepth:(unsigned long long)n;
 - (unsigned long long) numberOfTurkishSuffixPointsInBuffer:(char*)alength:(unsigned long long)bmaxSuffixPoints:(unsigned long long)csuffixPoints:(^{?=Qi})d;
 - (BOOL) _checkEnglishGrammarInString:(id)arange:({_NSRange=QQ})bindexIntoBuffer:(unsigned long long)cbufferLength:(unsigned long long)dlanguage:(id)econnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})fsender:(id)gbufIO:(^{_PR_BUF_IO=*CCSSSS^{_PR_LIMITS}^{_PR_PARA_INFO}^{_PR_ERROR}^^{_PR_PARSE_INFO}Cscc{_PR_STATUS=IiS}})hretval:(^i)ierrorRange:(^{_NSRange=QQ})jdetails:(^@)k;
 - (BOOL) _checkGrammarInString:(id)arange:({_NSRange=QQ})blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)ebufIO:(^{_PR_BUF_IO=*CCSSSS^{_PR_LIMITS}^{_PR_PARA_INFO}^{_PR_ERROR}^^{_PR_PARSE_INFO}Cscc{_PR_STATUS=IiS}})ferrorRange:(^{_NSRange=QQ})gdetails:(^@)h;
 - ({_NSRange=QQ}) spellServer:(id)acheckGrammarInString:(id)brange:({_NSRange=QQ})clanguage:(id)dorthography:(id)emutableResults:(id)foffset:(unsigned long long)gdetails:(^@)h;
 - (id) bindictDataForLanguage:(id)aindex:(unsigned long long)b;
 - (id) _orthographyByModifyingOrthography:(id)awithLatinLanguage:(id)b;
 - (BOOL) validateWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)echeckBase:(BOOL)fcheckDict:(BOOL)gcheckTemp:(BOOL)hcheckNames:(BOOL)icheckHyphens:(BOOL)jcheckIntercaps:(BOOL)kcheckOptions:(BOOL)ldepth:(unsigned long long)m;
 - (id) autocorrectionDictionaryForLanguage:(id)a;
 - (id) _correctionForString:(id)arange:({_NSRange=QQ})binString:(id)ctagger:(id)dtaggerIndex:(unsigned long long)eappIdentifier:(id)fdictionary:(id)glanguage:(id)hconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})ikeyEventData:(id)jalternativeCorrection:(^@)kisApostropheInsertion:(^B)l;
 - ({_NSRange=QQ}) spellServer:(id)afindMisspelledWordInString:(id)brange:({_NSRange=QQ})clanguages:(id)dtopLanguages:(id)eorthography:(id)fcheckOrthography:(BOOL)gmutableResults:(id)hoffset:(unsigned long long)iautocorrect:(BOOL)jkeyEventData:(id)kappIdentifier:(id)lwordCount:(^q)mcountOnly:(BOOL)ncorrection:(^@)o;
 - (id) spellServer:(id)asuggestGuessesForKoreanWordRange:({_NSRange=QQ})binString:(id)coptions:(id)d;
 - (id) spellServer:(id)asuggestGuessesForWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionsForPartialWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)cinLanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestWordWithMinimumLength:(unsigned long long)bmaximumLength:(unsigned long long)clanguage:(id)d;
 - (id) spellServer:(id)aalternativesForPinyinInputString:(id)b;
 - (id) spellServer:(id)aextendedAlternativesForPinyinInputString:(id)b;
 - (id) spellServer:(id)aprefixesForPinyinInputString:(id)b;
 - (id) spellServer:(id)acorrectionsForPinyinInputString:(id)b;
 - (void) timeout:(id)a;
 - (id) linguisticTaggerForLanguage:(id)astring:(id)brange:({_NSRange=QQ})ctaggerIndex:(^Q)d;
 - (BOOL) checkNoPredictWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cencoding:(unsigned int)d;
 - (BOOL) checkNegativeWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cencoding:(unsigned int)d;
 - (BOOL) validateWordPrefixBuffer:(char*)alength:(unsigned long long)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (BOOL) validateWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)echeckBase:(BOOL)fcheckDict:(BOOL)gcheckNames:(BOOL)hcheckHyphens:(BOOL)icheckIntercaps:(BOOL)jcheckOptions:(BOOL)kdepth:(unsigned long long)l;
 - ({_NSRange=QQ}) spellServer:(id)afindMisspelledWordInString:(id)blanguage:(id)cwordCount:(^q)dcountOnly:(BOOL)e;
 - (id) spellServer:(id)acheckString:(id)boffset:(unsigned long long)ctypes:(unsigned long long)doptions:(id)eorthography:(id)fwordCount:(^q)g;
 - (id) spellServer:(id)asuggestGuessesForWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestGuessesForWord:(id)binLanguage:(id)c;
 - (id) spellServer:(id)asuggestCompletionsForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestCompletionDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)asuggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)doptions:(id)e;
 - (id) spellServer:(id)asuggestNextLetterDictionariesForPartialWordRange:({_NSRange=QQ})binString:(id)clanguage:(id)d;
 - (id) spellServer:(id)aextendedAlternativesForPinyinInputString:(id)blanguage:(id)c;
 - (id) spellServer:(id)aprefixesForPinyinInputString:(id)blanguage:(id)c;
 - (id) spellServer:(id)acorrectionsForPinyinInputString:(id)blanguage:(id)c;
 - (id) _crudePreviousWordInString:(id)ainRange:({_NSRange=QQ})bprecededBy:(^@)c;
 - (id) _modifiedGrammarDescriptionForDescription:(id)a;
 - (id) _detailWithRange:({_NSRange=QQ})adescription:(id)bcorrections:(id)c;
 - (id) _correctionForSuggestedPhrase:(r*)aoriginalBuffer:(r*)blength:(unsigned long long)c;
 - (BOOL) looksLikeParticiple:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (id) _crudeNextWordInString:(id)ainRange:({_NSRange=QQ})b;
 - (BOOL) looksLikeAdverb:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (BOOL) onContractionList:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (BOOL) onNoContractionList:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})csender:(id)d;
 - (BOOL) looksLikeArticledNoun:(id)alanguage:(id)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (id) _crudePreviousWordInString:(id)ainRange:({_NSRange=QQ})b;
 - (id) _correctionForKoreanString:(id)arange:({_NSRange=QQ})binString:(id)ctagger:(id)dtaggerIndex:(unsigned long long)eappIdentifier:(id)fdictionary:(id)gkeyEventData:(id)halternativeCorrection:(^@)i;
 - (id) _japaneseCorrectionForString:(id)aconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})b;
 - (void) _addBasicGuessesForWordBuffer:(char*)alength:(unsigned long long)blanguage:(id)cconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})dsender:(id)eminAutocorrectionLength:(unsigned long long)ftoGuesses:(id)g;
 - (id) spellServer:(id)amodificationsForPinyinInputString:(id)b;
 - (id) spellServer:(id)afinalModificationsForPinyinInputString:(id)b;
 - (id) englishStringsFromWordBuffer:(char*)alength:(unsigned long long)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (id) englishStringFromWordBuffer:(char*)alength:(unsigned long long)bconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})c;
 - (void) addSpecialModifiedPinyinToArray:(id)ainBuffer:(char*)blength:(unsigned long long)catEnd:(BOOL)d;
 - (void) addModifiedPinyinToArray:(id)aconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})bfromIndex:(unsigned long long)cprevIndex:(unsigned long long)dprevPrevIndex:(unsigned long long)estartingModificationsAt:(unsigned long long)finBuffer:(char*)glength:(unsigned long long)hinitialSyllableCount:(unsigned long long)iinitialScore:(unsigned long long)jprevScore:(unsigned long long)kprevPrevScore:(unsigned long long)llastSyllableScore:(unsigned long long)mcouldBeAbbreviatedPinyin:(BOOL)n;
 - (void) addModifiedPartialPinyinToArray:(id)aconnection:(^{_PR_DB_IO=CC{_PR_DOC_FORMAT=CCCCCCSS}SS^ICssssS{_PR_DBINIT=[1^{_PR_FILE}]^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}^{_PR_FILE}}[1^{_RULEFILE}]{_PR_STATUS=IiS}})bfromIndex:(unsigned long long)cprevIndex:(unsigned long long)dprevPrevIndex:(unsigned long long)eprePrevPrevIndex:(unsigned long long)fstartingModificationsAt:(unsigned long long)ginBuffer:(char*)hlength:(unsigned long long)iinitialSyllableCount:(unsigned long long)jinitialScore:(unsigned long long)kprevScore:(unsigned long long)lprevPrevScore:(unsigned long long)mlastSyllableScore:(unsigned long long)n;
 - (id) _pinyinStringByCombiningPinyinString:(id)awithPinyinString:(id)b;
 - (id) _primitiveRetainedAlternativesForPinyinInputString:(id)a;
 - (unsigned long long) _getSplitIndexes:(^Q)amaxCount:(unsigned long long)bforPinyinInputString:(id)c;
 - (id) _recursiveRetainedAlternativesForPinyinInputString:(id)adepth:(unsigned long long)b;
 - (id) _retainedAlternativesByCombiningAlternatives:(id)awithAlternatives:(id)bandAddingAlternatives:(id)c;
 - (id) spellServer:(id)a_retainedAlternativesForPinyinInputString:(id)bextended:(BOOL)c;
 - (id) spellServer:(id)a_retainedPrefixesForPinyinInputString:(id)b;
 - (id) spellServer:(id)a_retainedCorrectionsForPinyinInputString:(id)b;
 - (id) spellServer:(id)a_retainedModificationsForPinyinInputString:(id)bgeometryModelData:(id)c;
 - (id) spellServer:(id)a_retainedFinalModificationsForPinyinInputString:(id)bgeometryModelData:(id)c;
 - (id) spellServer:(id)amodificationsForPinyinInputString:(id)bgeometryModelData:(id)c;
 - (void) addGuessesForKoreanWord:(id)atoMutableArray:(id)bincludeAdditionalGuesses:(BOOL)c;


@end
