
@interface CUIShapeEffectStack : NSObject {

    float shapeOpacity;
    float outputOpacity;
    unsigned int outputBlendMode;
    BOOL hasColorOverlay;
    {?="blendMode"I"fillRed"f"fillGreen"f"fillBlue"f"fillOpacity"f} colorOverlay;
    BOOL hasInnerGradient;
    {?="beginRed"f"beginGreen"f"beginBlue"f"endRed"f"endGreen"f"endBlue"f"gradientOpacity"f} innerGradient;
    BOOL hasInnerGlow;
    {?="blendMode"I"glowRed"f"glowGreen"f"glowBlue"f"glowOpacity"f"glowSize"f} innerGlow;
    BOOL hasInnerShadow;
    {?="blendMode"I"shadowRed"f"shadowGreen"f"shadowBlue"f"shadowBlurSize"f"shadowOpacity"f"shadowOffsetAmount"f"shadowOffsetAngle"f"shadowOffset"{CGPoint="x"d"y"d}} insideShadow;
    BOOL hasOuterGlow;
    {?="glowRed"f"glowGreen"f"glowBlue"f"glowOpacity"f"glowSize"f"glowSpread"f} outerGlow;
    BOOL hasEngraveShadow;
    {?="engraveRed"f"engraveGreen"f"engraveBlue"f"engraveOpacity"f"engraveBlurSize"f"engraveSpread"f"engraveOffsetAmount"f"engraveOffsetAngle"f"engraveOffset"{CGPoint="x"d"y"d}} engraveShadow;
    BOOL hasExtraShadow;
    {?="engraveRed"f"engraveGreen"f"engraveBlue"f"engraveOpacity"f"engraveBlurSize"f"engraveSpread"f"engraveOffsetAmount"f"engraveOffsetAngle"f"engraveOffset"{CGPoint="x"d"y"d}} extraShadow;
    BOOL hasBevelEmboss;
    {?="embossSize"f"embossSoften"f"embossAngle"f"embossAltitude"f"highlightRed"f"highlightGreen"f"highlightBlue"f"highlightOpacity"f"shadowRed"f"shadowGreen"f"shadowBlue"f"shadowOpacity"f} emboss;
    float scalefactor;
    int renderStrategy;
}
@property (atomic, assign, readonly) NSNumber* outputBlendMode;
 + (id) colorWithRed:(float)agreen:(float)bblue:(float)calpha:(float)d;
 + (id) sharedCIContext;
 + (id) shapeEffectSingleBlurFrom:(id)awithInteriorFill:(id)boffset:({CGPoint=dd})cblurSize:(float)dinnerGlowRed:(float)einnerGlowGreen:(float)finnerGlowBlue:(float)ginnerGlowOpacity:(float)hinnerShadowRed:(float)iinnerShadowGreen:(float)jinnerShadowBlue:(float)kinnerShadowOpacity:(float)louterGlowRed:(float)mouterGlowGreen:(float)nouterGlowBlue:(float)oouterGlowOpacity:(float)pouterShadowRed:(float)qouterShadowGreen:(float)routerShadowBlue:(float)souterShadowOpacity:(float)thasInsideShadowBlur:(BOOL)uhasOutsideShadowBlur:(BOOL)v;
 + (id) innerGlowFrom:(id)awithRadius:(float)bred:(float)cgreen:(float)dblue:(float)eopacity:(float)f;
 + (id) innerShadowFrom:(id)awithOffset:({CGPoint=dd})bradius:(float)cred:(float)dgreen:(float)eblue:(float)fopacity:(float)g;
 + (id) adjustOpacity:(id)aby:(float)b;
 + (id) blend:(id)aover:(id)bblendKind:(unsigned int)c;
 + (id) gradientWithParameters:(^{?=fffffff})ainRect:({CGRect={CGPoint=dd}{CGSize=dd}})b;
 + (id) outerGlowFrom:(id)awithSize:(unsigned int)bspread:(unsigned int)cred:(float)dgreen:(float)eblue:(float)fopacity:(float)g;
 + (id) outerShadowFrom:(id)awithOffset:({CGPoint=dd})bsize:(unsigned int)cspread:(unsigned int)dred:(float)egreen:(float)fblue:(float)gopacity:(float)h;
 + (id) bevelEmbossFrom:(id)awithSize:(unsigned int)bsoften:(unsigned int)cangle:(float)daltitude:(float)ehighlightRed:(float)fhighlightGreen:(float)ghighlightBlue:(float)hhighlightOpacity:(float)ishadowRed:(float)jshadowGreen:(float)kshadowBlue:(float)lshadowOpacity:(float)m;
 + (id) composite:(id)ainto:(id)b;
 + (id) composite:(id)aover:(id)b;
 + (id) imageFromBlendWithMask:(id)aforeground:(id)bbackground:(id)c;
 + (id) preferredCIContextOptions;
 + (id) offset:(id)aby:({CGPoint=dd})b;
 + (id) pixelZoomed:(id)ascale:(int)babout:({CGPoint=dd})c;
 + (id) unsharpMask:(id)aradius:(float)bintensity:(float)c;
 + (id) composite:(id)aoutOf:(id)b;
 + (id) composite:(id)aatop:(id)b;
 + (id) image:(id)awithOpacity:(float)b;
 + (id) invert:(id)a;
 + (id) blur:(id)aradius:(float)b;
 + (id) colorWithGray:(float)aalpha:(float)b;
 + (id) rectangle:({CGRect={CGPoint=dd}{CGSize=dd}})awithRed:(float)bgreen:(float)cblue:(float)dalpha:(float)e;
 + (id) shadowFrom:(id)ared:(float)bgreen:(float)cblue:(float)dopacity:(float)e;

 - (id) effectPreset;
 - (id) initWithEffectPreset:(id)a ;
 - (id) processedImageFromShapeImage:(id)a withScale:(double)b ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) effectPaddingWithScale:(double)a ;
 - (unsigned int) outputBlendMode;
 - (int) cgBlendModeForOutputBlending;
 - (void) scaleEffectParametersBy:(double)a ;
 - (void) _updateRenderStrategyFromEffect:(unsigned int)a ;
 - (void) _precompositeColorOverlayInnerGradient;
 - (void) _setShapeOpacityFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _setOutputOpacityFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _setColorFillFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _setInteriorGradientFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _addInnerGlowFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _addInnerShadowFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _addOuterGlowFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _addEngraveShadowFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _addBevelEmbossFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) _addExtraShadowFromPreset:(id)a atIndex:(unsigned int)b ;
 - (void) applyCustomForegroundColor:(^{CGColor=})a tintEffectColors:(BOOL)b ;
 - (id) imageWithAdjustedShapeOpacityOfImage:(id)a ;
 - (id) imageWithInteriorGradientFillOfImage:(id)a ;
 - (id) imageWithColorOverlayOfImage:(id)a ;
 - (id) imageWithInnerGlowOfImage:(id)a ;
 - (id) imageWithInnerShadowOfImage:(id)a ;
 - (id) imageWithOuterGlowOfImage:(id)a ;
 - (id) imageWithEngraveShadowOfImage:(id)a ;
 - (id) imageWithExtraShadowOfImage:(id)a ;
 - (id) imageWithBevelEmbossOfImage:(id)a ;
 - (id) imageWithAdjustedOutputOpacityOfImage:(id)a ;
 - (id) imageWithSingleBlurShapeEffectOfImage:(id)a withInteriorFill:(id)b ;
 - (id) optimizedSingleBlurEffectCompositeWithShapeImage:(id)a ;
 - (id) standardEffectCompositeWithShapeImage:(id)a ;
 - (id) compositeEffectStackWithShapeImage:(id)a withScale:(double)b ;
 - (^{CGImage=}) newFlattenedImageFromShapeCGImage:(^{CGImage=})a withScale:(double)b ;
 - (void) updateOutputBlendingWithInteriorFillHeuristic;
 - (void) applyCustomForegroundColor:(^{CGColor=})a ;
 - ({?=dddd}) effectInsetsWithScale:(double)a ;
 - (id) processedImageFromShapeImage:(id)a ;
 - (^{CGImage=}) newFlattenedImageFromShapeCGImage:(^{CGImage=})a withScale:(double)b ciContext:(id)c ;
 - (^{CGImage=}) newFlattenedImageFromShapeCGImage:(^{CGImage=})a ;
 - (id) processedImageFromShapePath:(^{CGPath=})a inRect:({CGRect={CGPoint=dd}{CGSize=dd}})b ;


@end
