
@protocol DOMEventTarget, UIKeyboardInput, UITextInputPrivate, UIKeyInput, UITextInputTokenizer, UIWebSelectionBlock, UITextInput_Internal;
@interface DOMNode : DOMObject <DOMEventTarget, UIKeyboardInput, UITextInputPrivate, UIKeyInput, UITextInputTokenizer, UIWebSelectionBlock, UITextInput_Internal> {

}
 + (id) _nodeFromJSWrapper:(^{OpaqueJSValue=})a;

 - (void) _startAssistingDocumentView:(id)a;
 - (void) _stopAssistingDocumentView:(id)a;
 - (BOOL) _requiresAccessoryView;
 - (BOOL) _requiresInputView;
 - (BOOL) _supportsAutoFill;
 - (BOOL) _supportsAccessoryClear;
 - (void) _accessoryClear;
 - (id) _nextAssistedNode;
 - (id) _previousAssistedNode;
 - (id) _textFormElement;
 - (id) textInputView;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _selectionClipRect;
 - (id) _proxyTextInput;
 - (void) _expandSelectionToStartOfWordsBeforeCaretSelection:(i)a;
 - (void) _extendCurrentSelection:(i)a;
 - (void) _setCaretSelectionAtEndOfSelection;
 - (id) _moveToEndOfWord:(BOOL)awithHistory:(id)b;
 - (id) _moveToEndOfLine:(BOOL)awithHistory:(id)b;
 - (id) _moveRight:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfWord:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfLine:(BOOL)awithHistory:(id)b;
 - (id) _moveLeft:(BOOL)awithHistory:(id)b;
 - (id) _moveToEndOfParagraph:(BOOL)awithHistory:(id)b;
 - (id) _moveToEndOfDocument:(BOOL)awithHistory:(id)b;
 - (id) _moveDown:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfParagraph:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfDocument:(BOOL)awithHistory:(id)b;
 - (id) _moveUp:(BOOL)awithHistory:(id)b;
 - (void) _deleteByWord;
 - (void) _deleteToStartOfLine;
 - (void) _deleteToEndOfLine;
 - (void) _setMarkedText:(id)aselectedRange:({_NSRange=QQ})b;
 - (void) _unmarkText;
 - (void) _setGestureRecognizers;
 - (I) _characterBeforeCaretSelection;
 - (I) _characterInRelationToRangedSelection:(i)a;
 - (void) _moveCurrentSelection:(i)a;
 - (void) _expandSelectionToBackwardDeletionCluster;
 - (void) _deleteBackwardAndNotify:(BOOL)a;
 - (void) _deleteForwardAndNotify:(BOOL)a;
 - (I) _characterInRelationToCaretSelection:(i)a;
 - (id) _wordContainingCaretSelection;
 - (I) _characterAfterCaretSelection;
 - (id) _rangeOfEnclosingWord:(id)a;
 - (id) _positionAtStartOfWords:(Q)abeforePosition:(id)b;
 - (id) _fullText;
 - (id) _rangeOfText:(id)aendingAtPosition:(id)b;
 - (void) _replaceCurrentWordWithText:(id)a;
 - (void) _selectAll;
 - (BOOL) _selectionAtDocumentStart;
 - ({_NSRange=QQ}) _nsrangeForTextRange:(id)a;
 - (BOOL) _shouldPerformUICalloutBarButtonReplaceAction:(SEL)aforText:(id)bcheckAutocorrection:(BOOL)c;
 - (BOOL) _selectionAtDocumentEnd;
 - (id) _positionFromPosition:(id)ainDirection:(q)boffset:(q)cwithAffinityDownstream:(BOOL)d;
 - (void) _scrollRectToVisible:({CGRect={CGPoint=dd}{CGSize=dd}})aanimated:(BOOL)b;
 - (q) _selectionAffinity;
 - (id) _fontForCaretSelection;
 - (id) _textColorForCaretSelection;
 - (id) _newPhraseBoundaryGestureRecognizer;
 - (BOOL) _hasMarkedText;
 - (BOOL) _usesAsynchronousProtocol;
 - (id) _selectableText;
 - (id) _fullRange;
 - (i) _indexForTextPosition:(id)a;
 - (id) _clampedpositionFromPosition:(id)aoffset:(i)b;
 - (id) _keyInput;
 - (void) _setSelectedTextRange:(id)awithAffinityDownstream:(BOOL)b;
 - (void) _updateSelectionWithTextRange:(id)awithAffinityDownstream:(BOOL)b;
 - (BOOL) _isEmptySelection;
 - (id) _setHistory:(id)awithExtending:(BOOL)bwithAnchor:(i)cwithAffinityDownstream:(BOOL)d;
 - (id) _setSelectionRangeWithHistory:(id)a;
 - (void) _phraseBoundaryGesture:(id)a;
 - (BOOL) _selectionAtWordStart;
 - (BOOL) _hasMarkedTextOrRangedSelection;
 - (void) _expandSelectionToStartOfWordBeforeCaretSelection;
 - (id) _rangeOfLineEnclosingPosition:(id)a;
 - (id) _rangeOfParagraphEnclosingPosition:(id)a;
 - (id) _findPleasingWordBoundaryFromPosition:(id)a;
 - ({_NSRange=QQ}) _selectedNSRange;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingRect;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingRectAndInsideFixedPosition:(^i)a;
 - (id) asDomNode;
 - (BOOL) selectable;
 - (id) parentBlock;
 - (BOOL) canShrinkDirectlyToTextOnly;
 - (id) enclosingDocument;
 - (id) asDomRange;
 - (BOOL) hasCustomLineHeight;
 - (BOOL) isSameBlock:(id)a;
 - (BOOL) containsBlock:(id)a;
 - (id) firstDescendantOfAboutTheSameWidthOrHeight;
 - (id) lastDescendantOfAboutTheSameWidthOrHeight;
 - (BOOL) strictlyContainsBlock:(id)a;
 - (id) largerParent;
 - (BOOL) rendersAsBlock;
 - (BOOL) containsRange:(id)a;
 - (BOOL) containsNode:(id)a;
 - (id) asElement;
 - (id) firstDescendantOfAboutTheSameWidthOrHeightAsRect:({CGRect={CGPoint=dd}{CGSize=dd}})awithDescentDirection:(i)b;
 - (BOOL) strictlyContainsNode:(id)a;
 - (id) enclosingElementIncludingSelf;
 - (id) webFrame;
 - (id) rangeOfContents;
 - (BOOL) touchCalloutEnabled;
 - (BOOL) alwaysAttemptToShowTapHighlight;
 - (BOOL) showsTapHighlight;
 - (BOOL) nodeCanBecomeFirstResponder;
 - (BOOL) isLikelyToBeginPageLoad;
 - (id) absoluteQuadsAtPoint:({CGPoint=dd})a;
 - (id) tapHighlightColor;
 - (id) _realNode;
 - (id) itemTitle;
 - (id) createSelectedItem;
 - (id) createPickerCell;
 - (void) populateCell:(id)a;
 - (void) setText:(id)a;
 - (void) setSecure:(BOOL)a;
 - (BOOL) editing;
 - (BOOL) isEditing;
 - (id) interactionAssistant;
 - (id) selectionView;
 - (void) setSelectionWithPoint:({CGPoint=dd})a;
 - (void) takeTraitsFrom:(id)a;
 - (id) beginningOfDocument;
 - (id) endOfDocument;
 - (id) textRangeFromPosition:(id)atoPosition:(id)b;
 - (id) textInRange:(id)a;
 - (id) inputDelegate;
 - (void) setSelectedTextRange:(id)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) caretRectForPosition:(id)a;
 - (BOOL) hasText;
 - (void) deleteBackward;
 - (void) replaceRange:(id)awithText:(id)b;
 - (void) replaceRangeWithTextWithoutClosingTyping:(id)areplacementText:(id)b;
 - (id) selectedTextRange;
 - (id) markedTextRange;
 - (id) markedTextStyle;
 - (void) setMarkedTextStyle:(id)a;
 - (void) unmarkText;
 - (id) positionFromPosition:(id)aoffset:(q)b;
 - (id) positionFromPosition:(id)ainDirection:(q)boffset:(q)c;
 - (q) comparePosition:(id)atoPosition:(id)b;
 - (q) offsetFromPosition:(id)atoPosition:(id)b;
 - (id) positionWithinRange:(id)afarthestInDirection:(q)b;
 - (id) characterRangeByExtendingPosition:(id)ainDirection:(q)b;
 - (void) setInputDelegate:(id)a;
 - (id) tokenizer;
 - (q) baseWritingDirectionForPosition:(id)ainDirection:(q)b;
 - (void) setBaseWritingDirection:(q)aforRange:(id)b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) firstRectForRange:(id)a;
 - (id) selectionRectsForRange:(id)a;
 - (id) closestPositionToPoint:({CGPoint=dd})a;
 - (id) closestPositionToPoint:({CGPoint=dd})awithinRange:(id)b;
 - (id) characterRangeAtPoint:({CGPoint=dd})a;
 - (void) insertDictationResult:(id)awithCorrectionIdentifier:(id)b;
 - (id) insertDictationResultPlaceholder;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) frameForDictationResultPlaceholder:(id)a;
 - (void) removeDictationResultPlaceholder:(id)awillInsertResult:(BOOL)b;
 - (id) metadataDictionariesForDictationResults;
 - (void) beginSelectionChange;
 - (void) endSelectionChange;
 - (void) setSelectionAffinity:(q)a;
 - (void) setReturnKeyType:(q)a;
 - (void) selectAll;
 - (id) _textSelectingContainer;
 - (id) textColorForCaretSelection;
 - (void) updateAutoscroll:(id)a;
 - ({_NSRange=QQ}) selectionRange;
 - (^{__CFCharacterSet=}) textTrimmingSet;
 - (BOOL) hasContent;
 - ({CGPoint=dd}) constrainedPoint:({CGPoint=dd})a;
 - (void) updateSelection;
 - (BOOL) becomesEditableWithGestures;
 - (void) setBecomesEditableWithGestures:(BOOL)a;
 - (id) automaticallySelectedOverlay;
 - (BOOL) requiresKeyEvents;
 - (void) handleKeyWebEvent:(id)a;
 - (void) acceptedAutoFillWord:(id)a;
 - (BOOL) isAutoFillMode;
 - (id) fontForCaretSelection;
 - (id) rangeEnclosingPosition:(id)awithGranularity:(q)binDirection:(q)c;
 - (BOOL) isPosition:(id)aatBoundary:(q)binDirection:(q)c;
 - (id) positionFromPosition:(id)atoBoundary:(q)binDirection:(q)c;
 - (BOOL) isPosition:(id)awithinTextUnit:(q)binDirection:(q)c;
 - (void) setTextTrimmingSet:(^{__CFCharacterSet=})a;
 - (i) textLoupeVisibility;
 - (void) setTextLoupeVisibility:(i)a;
 - (id) textSuggestionDelegate;
 - (void) setTextSuggestionDelegate:(id)a;
 - (BOOL) contentsIsSingleValue;
 - (void) setContentsIsSingleValue:(BOOL)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _lastRectForRange:(id)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) caretRect;
 - (void) replaceCurrentWordWithText:(id)a;
 - (void) confirmMarkedText:(id)a;
 - (S) characterInRelationToCaretSelection:(i)a;
 - (S) characterAfterCaretSelection;
 - (id) rectsForNSRange:({_NSRange=QQ})a;
 - (i) wordOffsetInRange:(id)a;
 - (BOOL) selectionAtDocumentStart;
 - (BOOL) selectionAtWordStart;
 - (id) rangeByMovingCurrentSelection:(i)a;
 - (id) rangeByExtendingCurrentSelection:(i)a;
 - (void) extendCurrentSelection:(i)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) convertCaretRect:({CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (BOOL) isShowingPlaceholder;
 - (void) setupPlaceholderTextIfNeeded;
 - (void) clearMarkedText;
 - (void) setSelectedTextRange:(id)awithAffinityDownstream:(BOOL)b;
 - (id) rangeOfEnclosingWord:(id)a;
 - (id) uiWebDocumentView;
 - ({CGPoint=dd}) constrainedPoint:({CGPoint=dd})awithInset:(d)b;
 - (void) setSelectionWithPoint:({CGPoint=dd})ainset:(d)b;
 - (void) replaceRange:(id)awithText:(id)bcloseTyping:(BOOL)c;
 - (i) initialSelectionBehavior;
 - (void) setInitialSelectionBehavior:(i)a;
 - (void) moveRight;
 - (void) moveLeft;
 - (void) moveUp;
 - (void) moveDown;
 - (BOOL) editable;
 - (id) textDocument;
 - (id) delegate;
 - (q) selectionAffinity;
 - (id) content;
 - (id) textInputTraits;
 - (q) returnKeyType;
 - (BOOL) isEditable;
 - (void) setMarkedText:(id)aselectedRange:({_NSRange=QQ})b;
 - (void) insertText:(id)a;
 - (i) selectionState;
 - (BOOL) hasSelection;
 - (id) text;
 - (BOOL) isTextControl;
 - (BOOL) isSecure;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) convertRect:({CGRect={CGPoint=dd}{CGSize=dd}})atoView:(id)b;
 - (q) keyboardType;
 - (id) urlScheme;
 - (id) tagName;
 - (id) createPeripheral;
 - (id) markupString;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _renderRect:(^B)a;
 - (void) hidePlaceholder;
 - (void) showPlaceholderIfNecessary;
 - (BOOL) isHorizontalWritingMode;
 - (id) webArchive;
 - (id) webArchiveByFilteringSubframes:(@?)a;
 - (id) startPosition;
 - (id) endPosition;
 - (id) rangeOfContents;
 - (id) description;
 - (void) dealloc;
 - (void) finalize;
 - (BOOL) isContentEditable;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingBoxUsingTransforms;
 - (id) previousSibling;
 - ({_WKQuad={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}) innerFrameQuad;
 - (id) hrefLabel;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingFrame;
 - (BOOL) isSameNode:(id)a;
 - (void) inspect;
 - (id) borderRadii;
 - (id) hrefURL;
 - (id) absoluteQuads;
 - (d) textHeight;
 - (id) findExplodedTextNodeAtPoint:({CGPoint=dd})a;
 - (id) rangeOfContainingParagraph;
 - (id) parentElement;
 - (BOOL) isSelectableBlock;
 - (BOOL) containsOnlyInlineObjects;
 - (id) nextFocusNode;
 - (id) previousFocusNode;
 - (f) computedFontSize;
 - (id) attributes;
 - (id) firstChild;
 - (id) nextSibling;
 - (id) ownerDocument;
 - (S) nodeType;
 - (id) parentNode;
 - (BOOL) hasChildNodes;
 - (id) removeChild:(id)a;
 - (id) appendChild:(id)a;
 - (id) childNodes;
 - (id) lastChild;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingBox;
 - (id) nodeValue;
 - (id) nodeName;
 - (^{RootObject=}) _rootObject;
 - (id) textRects;
 - ({_WKQuad={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}) absoluteQuadAndInsideFixedPosition:(^B)a;
 - (^{Element=^^?{Weak<WebCore::JSDOMWrapper>=^{WeakImpl}}iI^{ContainerNode}^{TreeScope}^{Node}^{Node}(DataUnion=^{RenderObject}^{NodeRareDataBase})^{Node}^{Node}{QualifiedName={RefPtr<WebCore::QualifiedName::QualifiedNameImpl>=^{QualifiedNameImpl}}}{RefPtr<WebCore::ElementData>=^{ElementData}}}) _linkElement;
 - (id) lineBoxRects;
 - ({_WKQuad={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}) absoluteQuad;
 - (id) lineBoxQuads;
 - (id) hrefTarget;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) hrefFrame;
 - (id) hrefTitle;
 - (id) lookupNamespaceURI:(id)a;
 - (BOOL) contains:(id)a;
 - (void) addEventListener:(id)alistener:(id)buseCapture:(BOOL)c;
 - (void) removeEventListener:(id)alistener:(id)buseCapture:(BOOL)c;
 - (BOOL) dispatchEvent:(id)a;
 - (void) addEventListener:(id)a;
 - (void) removeEventListener:(id)a;
 - (void) setNodeValue:(id)a;
 - (id) namespaceURI;
 - (id) prefix;
 - (void) setPrefix:(id)a;
 - (id) localName;
 - (id) baseURI;
 - (id) textContent;
 - (void) setTextContent:(id)a;
 - (id) insertBefore:(id)arefChild:(id)b;
 - (id) insertBefore:(id)a;
 - (id) replaceChild:(id)aoldChild:(id)b;
 - (id) replaceChild:(id)a;
 - (id) cloneNode:(BOOL)a;
 - (void) normalize;
 - (BOOL) isSupported:(id)aversion:(id)b;
 - (BOOL) isSupported:(id)a;
 - (BOOL) hasAttributes;
 - (BOOL) isEqualNode:(id)a;
 - (id) lookupPrefix:(id)a;
 - (BOOL) isDefaultNamespace:(id)a;
 - (S) compareDocumentPosition:(id)a;
 - (id) boundingBoxes;


@end
