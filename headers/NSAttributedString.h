
@protocol NSCopying, NSMutableCopying, NSSecureCoding;
@interface NSAttributedString : NSObject <NSCopying, NSMutableCopying, NSSecureCoding> {

}
@property (atomic, copy, readonly) NSString* string;
 + (id) attributedStringWithAttachment:(id)a;
 + (id) _documentTypeForFileType:(id)a;
 + (BOOL) supportsSecureCoding;
 + (void) _setAttributedDictionaryClass:(Class)a;
 + (id) allocWithZone:(^{_NSZone=})a;

 - (id) MP_attributedStringByAddingAttributes:(id)atoOccurrencesOfSubstring:(id)boptions:(Q)c;
 - (id) _ui_secureStringWithPointSize:(d)a;
 - (q) _ui_resolvedTextAlignment;
 - (id) _ui_attributedStringWithOriginalFontAttributes;
 - (id) _ui_fontsInRange:({_NSRange=QQ})ausingDefaultFont:(id)b;
 - (id) _ui_synthesizeAttributedSubstringFromRange:({_NSRange=QQ})ausingDefaultAttributes:(id)b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingRectWithSize:({CGSize=dd})aoptions:(q)bcontext:(id)c;
 - (id) _ui_attributedSubstringFromRange:({_NSRange=QQ})awithTrackingAdjustment:(d)b;
 - (id) _ui_attributedSubstringFromRange:({_NSRange=QQ})ascaledByScaleFactor:(d)b;
 - (void) drawWithRect:({CGRect={CGPoint=dd}{CGSize=dd}})aoptions:(q)bcontext:(id)c;
 - (void) drawWithRect:({CGRect={CGPoint=dd}{CGSize=dd}})aoptions:(q)b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingRectWithSize:({CGSize=dd})aoptions:(q)b;
 - ({CGSize=dd}) size;
 - (void) drawInRect:({CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (void) drawAtPoint:({CGPoint=dd})a;
 - (id) dataFromRange:({_NSRange=QQ})adocumentAttributes:(id)berror:(^@)c;
 - (id) initWithData:(id)aoptions:(id)bdocumentAttributes:(^@)cerror:(^@)d;
 - ({_NSRange=QQ}) rangeOfTextTable:(id)aatIndex:(Q)b;
 - ({_NSRange=QQ}) rangeOfTextBlock:(id)aatIndex:(Q)b;
 - ({_NSRange=QQ}) _rangeOfTextTableRow:(id)aatIndex:(Q)bcompleteRow:(^B)c;
 - ({_NSRange=QQ}) _rangeOfTextTableRow:(id)aatIndex:(Q)b;
 - (BOOL) _isStringDrawingTextStorage;
 - (Q) _lineBreakBeforeIndex:(Q)awithinRange:({_NSRange=QQ})busesAlternativeBreaker:(BOOL)c;
 - (Q) lineBreakByHyphenatingBeforeIndex:(Q)awithinRange:({_NSRange=QQ})b;
 - ({_NSRange=QQ}) doubleClickAtIndex:(Q)ainRange:({_NSRange=QQ})b;
 - (id) stringByStrippingAttachmentCharactersAndConvertingWritingDirectionToBidiControlCharactersFromRange:({_NSRange=QQ})a;
 - (id) fileWrapperFromRange:({_NSRange=QQ})adocumentAttributes:(id)berror:(^@)c;
 - (id) _initWithRTFSelector:(SEL)aargument:(id)bdocumentAttributes:(^@)c;
 - (id) initWithURL:(id)aoptions:(id)bdocumentAttributes:(^@)cerror:(^@)d;
 - (id) initWithHTML:(id)aoptions:(id)bdocumentAttributes:(^@)c;
 - (id) defaultLanguage;
 - ({_NSRange=QQ}) doubleClickAtIndex:(Q)a;
 - (Q) lineBreakBeforeIndex:(Q)awithinRange:({_NSRange=QQ})b;
 - (Q) nextWordFromIndex:(Q)aforward:(BOOL)b;
 - (id) RTFDFileWrapperFromRange:({_NSRange=QQ})adocumentAttributes:(id)b;
 - (id) docFormatFromRange:({_NSRange=QQ})adocumentAttributes:(id)b;
 - (void) _readDocumentFragment:(id)afromRange:({_NSRange=QQ})bdocumentAttributes:(id)csubresources:(^@)d;
 - (id) initWithRTFDFileWrapper:(id)adocumentAttributes:(^@)b;
 - (id) initWithDocFormat:(id)adocumentAttributes:(^@)b;
 - (id) initWithFileURL:(id)aoptions:(id)bdocumentAttributes:(^@)cerror:(^@)d;
 - (id) _initWithURLFunnel:(id)aoptions:(id)bdocumentAttributes:(^@)c;
 - (id) initWithURL:(id)adocumentAttributes:(^@)b;
 - (id) initWithPath:(id)adocumentAttributes:(^@)b;
 - (id) initWithHTML:(id)adocumentAttributes:(^@)b;
 - (id) initWithHTML:(id)abaseURL:(id)bdocumentAttributes:(^@)c;
 - (id) _initWithDOMRange:(id)a;
 - (id) fontAttributesInRange:({_NSRange=QQ})a;
 - (id) rulerAttributesInRange:({_NSRange=QQ})a;
 - (BOOL) _atStartOfTextTable:(id)aatIndex:(Q)b;
 - (BOOL) _atEndOfTextTable:(id)aatIndex:(Q)b;
 - (BOOL) _atStartOfTextTableRow:(id)aatIndex:(Q)b;
 - (BOOL) _atEndOfTextTableRow:(id)aatIndex:(Q)b;
 - ({_NSRange=QQ}) rangeOfTextList:(id)aatIndex:(Q)b;
 - (q) itemNumberInTextList:(id)aatIndex:(Q)b;
 - (id) _documentFromRange:({_NSRange=QQ})adocument:(id)bdocumentAttributes:(id)csubresources:(^@)d;
 - (BOOL) containsAttachments;
 - (id) initWithRTFD:(id)adocumentAttributes:(^@)b;
 - (id) initWithRTF:(id)adocumentAttributes:(^@)b;
 - (id) RTFFromRange:({_NSRange=QQ})adocumentAttributes:(id)b;
 - (id) RTFDFromRange:({_NSRange=QQ})adocumentAttributes:(id)b;
 - (id) _UIKBStringWideAttributeValueForKey:(id)a;
 - (Class) classForCoder;
 - (id) replacementObjectForPortCoder:(id)a;
 - (id) attributedSubstringFromRange:({_NSRange=QQ})a;
 - (BOOL) isEqualToAttributedString:(id)a;
 - (id) attributedSubstringFromRange:({_NSRange=QQ})areplacingCharactersInRanges:(r^{_NSRange=QQ})bnumberOfRanges:(q)cwithString:(id)d;
 - (id) attributedStringByWeaklyAddingAttributes:(id)a;
 - (id) copyWithZone:(^{_NSZone=})a;
 - (id) mutableCopyWithZone:(^{_NSZone=})a;
 - (id) description;
 - (id) _createAttributedSubstringWithRange:({_NSRange=QQ})a;
 - (id) string;
 - (id) attributesAtIndex:(Q)aeffectiveRange:(^{_NSRange=QQ})b;
 - (id) attribute:(id)aatIndex:(Q)beffectiveRange:(^{_NSRange=QQ})c;
 - (id) attributesAtIndex:(Q)alongestEffectiveRange:(^{_NSRange=QQ})binRange:({_NSRange=QQ})c;
 - (id) attribute:(id)aatIndex:(Q)blongestEffectiveRange:(^{_NSRange=QQ})cinRange:({_NSRange=QQ})d;
 - (Q) hash;
 - (BOOL) isEqual:(id)a;
 - (Q) _cfTypeID;
 - (Q) length;
 - (void) encodeWithCoder:(id)a;
 - (id) initWithCoder:(id)a;
 - (void) enumerateAttribute:(id)ainRange:({_NSRange=QQ})boptions:(Q)cusingBlock:(@?)d;
 - (void) enumerateAttributesInRange:({_NSRange=QQ})aoptions:(Q)busingBlock:(@?)c;


@end
