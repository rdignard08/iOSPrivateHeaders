
@interface NSDecimalNumber : NSNumber {

    b8 _exponent;
    b4 _length;
    b1 _isNegative;
    b1 _isCompact;
    b1 _reserved;
    b1 _hasExternalRefCount;
    b16 _refs;
    [0S] _mantissa;
}
 + (BOOL) supportsSecureCoding;
 + (id) numberWithUnsignedLongLong:(unsigned long long)a;
 + (id) zero;
 + (id) decimalNumberWithDecimal:({?=b8b4b1b1b18[8S]})a;
 + (id) numberWithFloat:(float)a;
 + (id) numberWithChar:(char)a;
 + (id) numberWithUnsignedChar:(unsigned char)a;
 + (id) numberWithShort:(short)a;
 + (id) numberWithUnsignedShort:(unsigned short)a;
 + (id) numberWithUnsignedInt:(unsigned int)a;
 + (id) numberWithLong:(long long)a;
 + (id) notANumber;
 + (id) defaultBehavior;
 + (id) decimalNumberWithMantissa:(unsigned long long)aexponent:(short)bisNegative:(BOOL)c;
 + (id) decimalNumberWithString:(id)a;
 + (id) decimalNumberWithString:(id)alocale:(id)b;
 + (id) minimumDecimalNumber;
 + (id) maximumDecimalNumber;
 + (id) one;
 + (void) setDefaultBehavior:(id)a;
 + (id) allocWithZone:(^{_NSZone=})a;
 + (id) numberWithInt:(int)a;
 + (id) numberWithLongLong:(long long)a;
 + (id) numberWithInteger:(long long)a;
 + (id) numberWithBool:(BOOL)a;
 + (id) numberWithUnsignedInteger:(unsigned long long)a;
 + (id) numberWithDouble:(double)a;
 + (id) numberWithUnsignedLong:(unsigned long long)a;

 - (Class) classForCoder;
 - (BOOL) _allowsDirectEncoding;
 - (void) getValue:(^v)a;
 - (unsigned short) unsignedShortValue;
 - (unsigned char) unsignedCharValue;
 - ({?=b8b4b1b1b18[8S]}) decimalValue;
 - (id) decimalNumberByDividingBy:(id)a;
 - (id) initWithString:(id)alocale:(id)b;
 - (id) initWithDecimal:({?=b8b4b1b1b18[8S]})a;
 - (id) initWithMantissa:(unsigned long long)aexponent:(short)bisNegative:(BOOL)c;
 - (id) decimalNumberByAdding:(id)awithBehavior:(id)b;
 - (id) decimalNumberBySubtracting:(id)awithBehavior:(id)b;
 - (id) decimalNumberByMultiplyingBy:(id)awithBehavior:(id)b;
 - (id) decimalNumberByDividingBy:(id)awithBehavior:(id)b;
 - (id) decimalNumberByRaisingToPower:(unsigned long long)awithBehavior:(id)b;
 - (id) decimalNumberByMultiplyingByPowerOf10:(short)awithBehavior:(id)b;
 - (id) decimalNumberByMultiplyingBy:(id)a;
 - (id) decimalNumberByAdding:(id)a;
 - (id) decimalNumberBySubstracting:(id)a;
 - (id) decimalNumberBySubstracting:(id)awithBehavior:(id)b;
 - (id) decimalNumberBySubtracting:(id)a;
 - (id) decimalNumberByRaisingToPower:(unsigned long long)a;
 - (id) decimalNumberByMultiplyingByPowerOf10:(short)a;
 - (id) decimalNumberByRoundingAccordingToBehavior:(id)a;
 - (id) copyWithZone:(^{_NSZone=})a;
 - (id) description;
 - (id) copy;
 - (BOOL) isEqual:(id)a;
 - (BOOL) boolValue;
 - (long long) compare:(id)a;
 - (double) doubleValue;
 - (BOOL) _getCString:(char*)alength:(int)bmultiplier:(double)c;
 - (id) descriptionWithLocale:(id)a;
 - (long long) longValue;
 - (unsigned long long) unsignedLongValue;
 - (r*) objCType;
 - (unsigned int) unsignedIntValue;
 - (char) charValue;
 - (short) shortValue;
 - (int) intValue;
 - (long long) longLongValue;
 - (float) floatValue;
 - (unsigned long long) unsignedLongLongValue;
 - (id) initWithString:(id)a;
 - (void) encodeWithCoder:(id)a;
 - (id) initWithCoder:(id)a;


@end
