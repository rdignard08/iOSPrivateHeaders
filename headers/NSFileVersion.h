
@interface NSFileVersion : NSObject {

    NSURL _fileURL;
    id _addition;
    id _deadVersionIdentifier;
    id _nonLocalVersion;
    NSURL _contentsURL;
    BOOL _isBackup;
    NSString _localizedName;
    NSString _localizedComputerName;
    NSDate _modificationDate;
    BOOL _isResolved;
    BOOL _contentsURLIsAccessed;
    NSString _clientID;
    NSString _name;
    BOOL _discardable;
}
@property (atomic, copy, readonly) NSString* originatorName;
@property (atomic, assign, readonly) NSNumber* size;
@property (atomic, assign, readonly, getter=isUbiquitous) NSNumber* ubiquitous;
@property (atomic, copy, readonly) NSString* originalPOSIXName;
@property (atomic, copy, readonly) NSString* etag;
@property (atomic, assign, readonly, getter=_isBackup) NSNumber* _isBackup;
@property (atomic, copy, readonly) NSURL* URL;
@property (atomic, copy, readonly) NSString* localizedName;
@property (atomic, copy, readonly) NSString* localizedNameOfSavingComputer;
@property (atomic, copy, readonly) NSDate* modificationDate;
@property (atomic, retain, readonly) NSNumber* persistentIdentifier;
@property (atomic, assign, readonly, getter=isConflict) NSNumber* conflict;
@property (atomic, assign, readwrite, getter=isResolved) NSNumber* resolved;
@property (atomic, assign, readwrite, getter=isDiscardable) NSNumber* discardable;
@property (atomic, assign, readonly) NSNumber* hasLocalContents;
@property (atomic, assign, readonly) NSNumber* hasThumbnail;
 + (id) keyPathsForValuesAffectingValueForKey:(id)a;
 + (void) _removeTemporaryDirectoryAtURL:(id)a;
 + (id) _versionOfItemAtURL:(id)aforClientID:(id)bname:(id)ctemporaryStorageIdentifier:(id)devenIfDeleted:(BOOL)e;
 + (id) _ubiquityOnlyVersionsOfItemAtURL:(id)aincludeSaved:(BOOL)b;
 + (id) _otherVersionsOfItemAtURL:(id)atemporaryStorageIdentifier:(id)b;
 + (void) getNonlocalVersionsOfItemAtURL:(id)aoptions:(unsigned long long)bcompletionHandler:(@?)c;
 + (id) _versionOfItemAtURL:(id)aforPersistentIdentifier:(id)btemporaryStorageIdentifier:(id)c;
 + (id) versionOfItemAtURL:(id)aforPersistentIdentifier:(id)b;
 + (BOOL) _removeOtherVersionsOfItemAtURL:(id)atemporaryStorageIdentifier:(id)berror:(^@)c;
 + (id) currentVersionOfItemAtURL:(id)a;
 + (id) otherVersionsOfItemAtURL:(id)a;
 + (void) getNonlocalVersionsOfItemAtURL:(id)acompletionHandler:(@?)b;
 + (id) addVersionOfItemAtURL:(id)awithContentsOfURL:(id)boptions:(unsigned long long)cerror:(^@)d;
 + (id) temporaryDirectoryURLForNewVersionOfItemAtURL:(id)a;
 + (BOOL) removeOtherVersionsOfItemAtURL:(id)aerror:(^@)b;
 + (id) _autosaveDirectoryURLCreateIfNecessary:(BOOL)a;
 + (BOOL) _isTemporaryStorageRequiredForGSError:(id)aandURL:(id)b;
 + (id) _makeTemporaryStorageIdentifier;
 + (id) _temporaryStorageLocationForIdentifier:(id)a;
 + (id) _makePermanentStorageLibraryForURL:(id)atemporaryStorageRequired:(^B)berror:(^@)c;
 + (^{NSObject=#}) _existingLibraryForURL:(id)atemporaryStorageIdentifier:(id)b;
 + (id) _otherVersionsOfItemAtURL:(id)atemporaryStorageIdentifier:(id)bwithoutOptions:(unsigned long long)c;
 + (^{NSObject=#}) _libraryForURL:(id)atemporaryStorageIdentifier:(^@)b;
 + (id) _addVersionOfItemAtURL:(id)awithContentsOfURL:(id)boptions:(unsigned long long)cuserInfo:(id)dtemporaryStorageIdentifier:(^@)eerror:(^@)f;
 + (void) discoverUbiquitousVersionsOfItemAtURL:(id)acompletionHandler:(@?)b;
 + (id) _supportedGenerationalStorageClientIDs;
 + (BOOL) _permanentVersionStorageSupportedForURL:(id)atemporaryStorageIdentifier:(^@)berror:(^@)c;
 + (id) _otherNonpurgeableVersionsOfItemAtURL:(id)atemporaryStorageIdentifier:(id)b;
 + (id) _addVersionOfItemAtURL:(id)awithContentsOfURL:(id)boptions:(unsigned long long)ctemporaryStorageIdentifier:(^@)derror:(^@)e;
 + (id) _temporaryDirectoryURLForNewVersionOfItemAtURL:(id)atemporaryStorageIdentifier:(id)b;
 + (BOOL) unresolvedConflictsExistForItemAtURL:(id)a;
 + (id) versionsOfItemAtURL:(id)a;
 + (BOOL) _conflictsExistForItemAtURL:(id)a;
 + (void) _markConflicts:(id)aasHandledForItemAtURL:(id)b;
 + (^v) _addConflictObserverForItemAtURL:(id)astatusChangedHandler:(@?)b;
 + (void) _removeConflictObserver:(^v)a;
 + (id) unresolvedConflictVersionsOfItemAtURL:(id)a;

 - (id) localizedName;
 - (BOOL) isDiscardable;
 - (void) setDiscardable:(BOOL)a;
 - (id) _initWithFileURL:(id)alibrary:(id)bclientID:(id)cname:(id)dcontentsURL:(id)eisBackup:(BOOL)frevision:(id)g;
 - (id) _initWithAddition:(id)a;
 - (id) originalPOSIXName;
 - (BOOL) isConflict;
 - (unsigned long long) size;
 - (BOOL) hasLocalContents;
 - (BOOL) hasThumbnail;
 - (id) etag;
 - (BOOL) removeAndReturnError:(^@)a;
 - (id) replaceItemAtURL:(id)aoptions:(unsigned long long)berror:(^@)c;
 - (id) _oldReplaceItemAtURL:(id)aoptions:(unsigned long long)berror:(^@)c;
 - (id) localizedNameOfSavingComputer;
 - (id) originatorName;
 - (id) modificationDate;
 - (void) setResolved:(BOOL)a;
 - (BOOL) isResolved;
 - (BOOL) _isBackup;
 - (id) _documentInfo;
 - (id) _initWithFileURL:(id)anonLocalVersion:(id)b;
 - (BOOL) _setDocumentInfo:(id)a;
 - (void) _overrideModificationDateWithDate:(id)a;
 - (BOOL) _preserveConflictVersionLocally;
 - (id) restoreOverItemAtURL:(id)aerror:(^@)b;
 - (void) dealloc;
 - (unsigned long long) hash;
 - (BOOL) isEqual:(id)a;
 - (BOOL) isUbiquitous;
 - (id) init;
 - (id) URL;
 - (id) persistentIdentifier;


@end
