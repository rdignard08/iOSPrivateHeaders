
@protocol NSCoding;
@interface NSLayoutManager : NSObject <NSCoding> {

    NSTextStorage _textStorage;
    NSGlyphGenerator _glyphGenerator;
    NSTypesetter _typesetter;
    NSMutableArray _textContainers;
    NSStorage _containerUsedRects;
    NSRunStorage _containerRuns;
    NSTextContainer _extraLineFragmentContainer;
    {__lmFlags="containersAreFull"b1"glyphsMightDrawOutsideLines"b1"backgroundLayoutEnabled"b1"resizingInProgress"b1"allowScreenFonts"b1"cachedRectArrayInUse"b1"displayInvalidationInProgress"b1"insertionPointNeedsUpdate"b1"layoutManagerInDirtyList"b1"originalFontOverride"b1"showInvisibleCharacters"b1"showControlCharacters"b1"delegateRespondsToDidInvalidate"b1"delegateRespondsToDidComplete"b1"glyphFormat"b2"textStorageRespondsToIsEditing"b1"notifyEditedInProgress"b1"containersChanged"b1"isGeneratingGlyphs"b1"hasNonGeneratedGlyphData"b1"syncAlignmentToDirection"b1"defaultAttachmentScaling"b2"usesFontLeading"b1"seenRightToLeft"b1"ignoresViewTransformations"b1"needToFlushGlyph"b1"flipsIfNeeded"b1"allowNonContig"b1"useNonContig"b1"inBackgroundLayout"b1} _lmFlags;
    id _delegate;
    unsigned short _textViewResizeDisableStack;
    unsigned short _displayInvalidationDisableStack;
    {_NSRange="location"Q"length"Q} _deferredDisplayCharRange;
    id _firstTextView;
    ^{CGRect={CGPoint=dd}{CGSize=dd}} _cachedRectArray;
    unsigned long long _cachedRectArrayCapacity;
    char* _glyphBuffer;
    unsigned long long _glyphBufferSize;
    {_NSRange="location"Q"length"Q} _cachedLocationNominalGlyphRange;
    unsigned long long _cachedLocationGlyphIndex;
    {CGPoint="x"d"y"d} _cachedLocation;
    {_NSRange="location"Q"length"Q} _cachedFontCharRange;
    NSFont _cachedFont;
    unsigned long long _firstUnlaidGlyphIndex;
    unsigned long long _firstUnlaidCharIndex;
    {_NSRange="location"Q"length"Q} _newlyFilledGlyphRange;
    id _extraData;
}
@property (atomic, assign, readwrite) NSNumber* allowsOriginalFontMetricsOverride;
@property (nonatomic, assign, readwrite) NSTextStorage* textStorage;
@property (nonatomic, assign, readonly) NSArray* textContainers;
@property (nonatomic, assign, readwrite) NSNumber* delegate;
@property (nonatomic, assign, readwrite) NSNumber* showsInvisibleCharacters;
@property (nonatomic, assign, readwrite) NSNumber* showsControlCharacters;
@property (nonatomic, assign, readwrite) NSNumber* hyphenationFactor;
@property (nonatomic, assign, readwrite) NSNumber* usesFontLeading;
@property (nonatomic, assign, readwrite) NSNumber* allowsNonContiguousLayout;
@property (nonatomic, assign, readonly) NSNumber* hasNonContiguousLayout;
@property (nonatomic, assign, readonly) NSNumber* numberOfGlyphs;
@property (nonatomic, assign, readonly) NSNumber* extraLineFragmentRect;
@property (nonatomic, assign, readonly) NSNumber* extraLineFragmentUsedRect;
@property (nonatomic, assign, readonly) NSTextContainer* extraLineFragmentTextContainer;
 + (void) initialize;
 + (id) _defaultLinkAttributes;
 + (BOOL) _usesScreenFonts;
 + (BOOL) _ignoresViewTransformations;
 + (BOOL) _showsInvisibleCharacters;
 + (BOOL) _showsControlCharacters;

 - (id) _commonTextViewController;
 - (id) description;
 - (void) dealloc;
 - (void) finalize;
 - (void) setDelegate:(id)a;
 - (void) coordinateAccess:(@?)a;
 - (void) addTemporaryAttribute:(id)avalue:(id)bforCharacterRange:({_NSRange=QQ})c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundingRectForGlyphRange:({_NSRange=QQ})ainTextContainer:(id)b;
 - (void) ensureLayoutForBoundingRect:({CGRect={CGPoint=dd}{CGSize=dd}})ainTextContainer:(id)b;
 - (BOOL) allowsNonContiguousLayout;
 - (void) setAllowsNonContiguousLayout:(BOOL)a;
 - (void) enumerateLineFragmentsForGlyphRange:({_NSRange=QQ})ausingBlock:(@?)b;
 - (void) enumerateEnclosingRectsForGlyphRange:({_NSRange=QQ})awithinSelectedGlyphRange:({_NSRange=QQ})binTextContainer:(id)cusingBlock:(@?)d;
 - (BOOL) hasNonContiguousLayout;
 - (void) removeTemporaryAttribute:(id)aforCharacterRange:({_NSRange=QQ})b;
 - ({_NSRange=QQ}) rangeOfCharacterClusterAtIndex:(unsigned long long)atype:(long long)b;
 - (void) enumerateEnclosingRectsForCharacterRange:({_NSRange=QQ})awithinSelectedCharacterRange:({_NSRange=QQ})binTextContainer:(id)cusingBlock:(@?)d;
 - (unsigned long long) characterIndexForPoint:({CGPoint=dd})ainTextContainer:(id)bfractionOfDistanceBetweenInsertionPoints:(^d)c;
 - (long long) propertyForGlyphAtIndex:(unsigned long long)a;
 - (unsigned long long) getLineFragmentInsertionPointsForCharacterAtIndex:(unsigned long long)aalternatePositions:(BOOL)binDisplayOrder:(BOOL)cpositions:(^d)dcharacterIndexes:(^Q)e;
 - (id) init;
 - (void) encodeWithCoder:(id)a;
 - (id) initWithCoder:(id)a;
 - (id) delegate;
 - (id) textStorage;
 - (id) textContainerForGlyphAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})b;
 - (id) typesetter;
 - (id) circleImageWithSize:({CGSize=dd})abufferWidth:(double)busingColor:(id)c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})b;
 - ({CGPoint=dd}) locationForGlyphAtIndex:(unsigned long long)a;
 - (long long) intAttribute:(long long)aforGlyphAtIndex:(unsigned long long)b;
 - (^{CGRect={CGPoint=dd}{CGSize=dd}}) rectArrayForGlyphRange:({_NSRange=QQ})awithinSelectedGlyphRange:({_NSRange=QQ})binTextContainer:(id)crectCount:(^Q)d;
 - (unsigned long long) characterIndexForGlyphAtIndex:(unsigned long long)a;
 - (unsigned short) glyphAtIndex:(unsigned long long)a;
 - (BOOL) _drawsUnderlinesLikeWebKit;
 - (BOOL) notShownAttributeForGlyphAtIndex:(unsigned long long)a;
 - (void) _drawLineForGlyphRange:({_NSRange=QQ})ainContext:(^{CGContext=})bfrom:(double)cto:(double)dat:(double)ethickness:(double)flineOrigin:({CGPoint=dd})gbreakForDescenders:(BOOL)hflipped:(BOOL)i;
 - ({_NSRange=QQ}) characterRangeForGlyphRange:({_NSRange=QQ})aactualGlyphRange:(^{_NSRange=QQ})b;
 - (id) temporaryAttribute:(id)aatCharacterIndex:(unsigned long long)beffectiveRange:(^{_NSRange=QQ})c;
 - (double) defaultLineHeightForFont:(id)a;
 - ({_NSRange=QQ}) glyphRangeForCharacterRange:({_NSRange=QQ})aactualCharacterRange:(^{_NSRange=QQ})b;
 - (double) defaultBaselineOffsetForFont:(id)a;
 - (id) temporaryAttribute:(id)aatCharacterIndex:(unsigned long long)blongestEffectiveRange:(^{_NSRange=QQ})cinRange:({_NSRange=QQ})d;
 - (void) drawUnderlineForGlyphRange:({_NSRange=QQ})aunderlineType:(long long)bbaselineOffset:(double)clineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})dlineFragmentGlyphRange:({_NSRange=QQ})econtainerOrigin:({CGPoint=dd})f;
 - (void) drawStrikethroughForGlyphRange:({_NSRange=QQ})astrikethroughType:(long long)bbaselineOffset:(double)clineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})dlineFragmentGlyphRange:({_NSRange=QQ})econtainerOrigin:({CGPoint=dd})f;
 - (void) _showCGGlyphs:(r^S)apositions:(r^{CGPoint=dd})bcount:(unsigned long long)cfont:(id)dmatrix:({CGAffineTransform=dddddd})eattributes:(id)finContext:(^{CGContext=})g;
 - (void) showAttachmentCell:(id)ainRect:({CGRect={CGPoint=dd}{CGSize=dd}})bcharacterIndex:(unsigned long long)c;
 - (void) drawSpellingUnderlineForGlyphRange:({_NSRange=QQ})aspellingState:(long long)binGlyphRange:({_NSRange=QQ})clineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})dlineFragmentGlyphRange:({_NSRange=QQ})econtainerOrigin:({CGPoint=dd})f;
 - (void) _drawLineForGlyphRange:({_NSRange=QQ})ainContext:(^{CGContext=})bfrom:(double)cto:(double)dat:(double)ethickness:(double)flineOrigin:({CGPoint=dd})gbreakForDescenders:(BOOL)h;
 - (void) _drawLineForGlyphRange:({_NSRange=QQ})atype:(long long)bbaselineOffset:(double)clineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})dlineFragmentGlyphRange:({_NSRange=QQ})econtainerOrigin:({CGPoint=dd})fisStrikethrough:(BOOL)g;
 - (void) _lineGlyphRange:({_NSRange=QQ})atype:(long long)blineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})clineFragmentGlyphRange:({_NSRange=QQ})dcontainerOrigin:({CGPoint=dd})eisStrikethrough:(BOOL)f;
 - ({_NSRange=QQ}) _primitiveCharacterRangeForGlyphRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) _blockRangeForCharRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) _primitiveGlyphRangeForCharacterRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) _blockRowRangeForCharRange:({_NSRange=QQ})acompleteRows:(^B)b;
 - ({_NSRange=QQ}) _blockRowRangeForCharRange:({_NSRange=QQ})a;
 - (id) attributedString;
 - (unsigned long long) _glyphIndexForCharacterIndex:(unsigned long long)astartOfRange:(BOOL)bokToFillHoles:(BOOL)cconsiderNulls:(BOOL)d;
 - (void) _fillGlyphHoleForCharacterRange:({_NSRange=QQ})astartGlyphIndex:(unsigned long long)bdesiredNumberOfCharacters:(unsigned long long)c;
 - (id) glyphGenerator;
 - (void) setExtraLineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})ausedRect:({CGRect={CGPoint=dd}{CGSize=dd}})btextContainer:(id)c;
 - (void) setTextContainer:(id)aforGlyphRange:({_NSRange=QQ})b;
 - (void) setLineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})aforGlyphRange:({_NSRange=QQ})busedRect:({CGRect={CGPoint=dd}{CGSize=dd}})c;
 - (void) setLocation:({CGPoint=dd})aforStartOfGlyphRange:({_NSRange=QQ})b;
 - (BOOL) _doOptimizedLayoutStartingAtGlyphIndex:(unsigned long long)aforCharacterRange:({_NSRange=QQ})binTextContainer:(id)clineLimit:(unsigned long long)dnextGlyphIndex:(^Q)e;
 - (void) _invalidateGlyphsForExtendedCharacterRange:({_NSRange=QQ})achangeInLength:(long long)bincludeBlocks:(BOOL)c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) layoutRectForTextBlock:(id)aatIndex:(unsigned long long)beffectiveRange:(^{_NSRange=QQ})c;
 - (void) setNotShownAttribute:(BOOL)aforGlyphAtIndex:(unsigned long long)b;
 - (void) _doLayoutWithFullContainerStartingAtGlyphIndex:(unsigned long long)anextGlyphIndex:(^Q)b;
 - (void) _invalidateLayoutForExtendedCharacterRange:({_NSRange=QQ})aisSoft:(BOOL)binvalidateUsage:(BOOL)c;
 - (void) _invalidateUsageForTextContainersInRange:({_NSRange=QQ})a;
 - (void) _resizeTextViewForTextContainer:(id)a;
 - (void) _invalidateInsertionPoint;
 - (void) invalidateDisplayForGlyphRange:({_NSRange=QQ})a;
 - (void) _invalidateDisplayIfNeeded;
 - (void) _invalidateLayoutForExtendedCharacterRange:({_NSRange=QQ})aisSoft:(BOOL)b;
 - (void) _fillLayoutHoleForCharacterRange:({_NSRange=QQ})adesiredNumberOfLines:(unsigned long long)bisSoft:(BOOL)c;
 - (unsigned long long) _smallEncodingGlyphIndexForCharacterIndex:(unsigned long long)astartOfRange:(BOOL)bokToFillHoles:(BOOL)cconsiderNulls:(BOOL)d;
 - (unsigned long long) glyphIndexForCharacterAtIndex:(unsigned long long)a;
 - (void) _mergeLayoutHoles;
 - (void) _fillLayoutHoleAtIndex:(unsigned long long)adesiredNumberOfLines:(unsigned long long)b;
 - (id) _lineFragmentDescriptionForGlyphRange:({_NSRange=QQ})aincludeGlyphLocations:(BOOL)b;
 - (id) _lineFragmentDescription:(BOOL)a;
 - (id) _glyphDescriptionForGlyphRange:({_NSRange=QQ})a;
 - (unsigned long long) _indexOfFirstGlyphInTextContainer:(id)aokToFillHoles:(BOOL)b;
 - (void) _recalculateUsageForTextContainerAtIndex:(unsigned long long)a;
 - (void) invalidateDisplayForCharacterRange:({_NSRange=QQ})a;
 - (void) _growCachedRectArrayToSize:(unsigned long long)a;
 - (^{CGRect={CGPoint=dd}{CGSize=dd}}) _rectArrayForRange:({_NSRange=QQ})awithinSelectionRange:({_NSRange=QQ})brangeIsCharRange:(BOOL)csingleRectOnly:(BOOL)dfullLineRectsOnly:(BOOL)einTextContainer:(id)frectCount:(^Q)grangeWithinContainer:(^{_NSRange=QQ})hglyphsDrawOutsideLines:(^B)irectArray:(^{CGRect={CGPoint=dd}{CGSize=dd}})jrectArrayCapacity:(unsigned long long)k;
 - (^{CGRect={CGPoint=dd}{CGSize=dd}}) _rectArrayForRange:({_NSRange=QQ})awithinSelectionRange:({_NSRange=QQ})brangeIsCharRange:(BOOL)csingleRectOnly:(BOOL)dfullLineRectsOnly:(BOOL)einTextContainer:(id)frectCount:(^Q)grangeWithinContainer:(^{_NSRange=QQ})hglyphsDrawOutsideLines:(^B)i;
 - (id) substituteFontForFont:(id)a;
 - ({CGSize=dd}) attachmentSizeForGlyphAtIndex:(unsigned long long)a;
 - ({_NSRange=QQ}) _glyphRangeForCharacterRange:({_NSRange=QQ})aactualCharacterRange:(^{_NSRange=QQ})bokToFillHoles:(BOOL)c;
 - ({_NSRange=QQ}) _firstPassGlyphRangeForBoundingRect:({CGRect={CGPoint=dd}{CGSize=dd}})ainTextContainer:(id)bhintGlyphRange:({_NSRange=QQ})cokToFillHoles:(BOOL)d;
 - ({_NSRange=QQ}) _firstPassGlyphRangeForBoundingRect:({CGRect={CGPoint=dd}{CGSize=dd}})ainTextContainer:(id)bokToFillHoles:(BOOL)c;
 - (void) _noteFirstTextViewVisibleCharacterRangeIfAfterIndex:(unsigned long long)a;
 - (void) _setRowArrayCache:(id)a;
 - (void) _markSelfAsDirtyForBackgroundLayout:(id)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundsRectForTextBlock:(id)aatIndex:(unsigned long long)beffectiveRange:(^{_NSRange=QQ})c;
 - (id) temporaryAttributesAtCharacterIndex:(unsigned long long)alongestEffectiveRange:(^{_NSRange=QQ})binRange:({_NSRange=QQ})c;
 - (^{CGRect={CGPoint=dd}{CGSize=dd}}) rectArrayForCharacterRange:({_NSRange=QQ})awithinSelectedCharacterRange:({_NSRange=QQ})binTextContainer:(id)crectCount:(^Q)d;
 - (void) fillBackgroundRectArray:(r^{CGRect={CGPoint=dd}{CGSize=dd}})acount:(unsigned long long)bforCharacterRange:({_NSRange=QQ})ccolor:(id)d;
 - (BOOL) _drawsDebugBaselines;
 - (BOOL) _hasSeenRightToLeft;
 - (void) showAttachment:(id)ainRect:({CGRect={CGPoint=dd}{CGSize=dd}})btextContainer:(id)ccharacterIndex:(unsigned long long)d;
 - (void) underlineGlyphRange:({_NSRange=QQ})aunderlineType:(long long)blineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})clineFragmentGlyphRange:({_NSRange=QQ})dcontainerOrigin:({CGPoint=dd})e;
 - (void) showCGGlyphs:(r^S)apositions:(r^{CGPoint=dd})bcount:(unsigned long long)cfont:(id)dmatrix:({CGAffineTransform=dddddd})eattributes:(id)finContext:(^{CGContext=})g;
 - (void) strikethroughGlyphRange:({_NSRange=QQ})astrikethroughType:(long long)blineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})clineFragmentGlyphRange:({_NSRange=QQ})dcontainerOrigin:({CGPoint=dd})e;
 - (void) setBaselineOffset:(double)aforGlyphAtIndex:(unsigned long long)b;
 - (void) _invalidateGlyphsForExtendedCharacterRange:({_NSRange=QQ})achangeInLength:(long long)b;
 - (void) invalidateLayoutForCharacterRange:({_NSRange=QQ})aactualCharacterRange:(^{_NSRange=QQ})b;
 - (void) _mergeGlyphHoles;
 - ({_NSRange=QQ}) _blockRangeForGlyphRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) _blockRowRangeForGlyphRange:({_NSRange=QQ})acompleteRows:(^B)b;
 - ({_NSRange=QQ}) _blockRowRangeForGlyphRange:({_NSRange=QQ})a;
 - (id) _rowArrayCache;
 - ({_NSRange=QQ}) _extendedCharRangeForInvalidation:({_NSRange=QQ})aeditedCharRange:({_NSRange=QQ})b;
 - (void) _adjustCharacterIndicesForRawGlyphRange:({_NSRange=QQ})abyDelta:(long long)b;
 - (BOOL) _canDoLayout;
 - (void) _fillGlyphHoleAtIndex:(unsigned long long)adesiredNumberOfCharacters:(unsigned long long)b;
 - (unsigned long long) _smallEncodingGlyphIndexForCharacterIndex:(unsigned long long)astartOfRange:(BOOL)bokToFillHoles:(BOOL)c;
 - (unsigned long long) _glyphIndexForCharacterIndex:(unsigned long long)astartOfRange:(BOOL)bokToFillHoles:(BOOL)c;
 - (id) _containerDescription;
 - (id) _lineFragmentDescription;
 - (id) _glyphLocationDescription;
 - (id) _glyphDescription;
 - (id) _glyphHoleDescription;
 - (id) _layoutHoleDescription;
 - (id) _glyphTreeDescription;
 - (id) _layoutTreeDescription;
 - (id) _blockDescription;
 - (void) _updateUsageForTextContainer:(id)aaddingUsedRect:({CGRect={CGPoint=dd}{CGSize=dd}})b;
 - (^{_NSStoredContainerUsage={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{?=b1b1b1b29}{CGRect={CGPoint=dd}{CGSize=dd}}{_NSRange=QQ}}) _validatedStoredUsageForTextContainerAtIndex:(unsigned long long)a;
 - (id) _selectedRanges;
 - (void) _fixSelectionAfterChangeInCharacterRange:({_NSRange=QQ})achangeInLength:(long long)b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _boundingRectForGlyphRange:({_NSRange=QQ})ainTextContainer:(id)bfast:(BOOL)cfullLineRectsOnly:(BOOL)d;
 - ({_NSRange=QQ}) _glyphRangeForBoundingRect:({CGRect={CGPoint=dd}{CGSize=dd}})ainTextContainer:(id)bfast:(BOOL)cokToFillHoles:(BOOL)d;
 - (void) _firstTextViewChanged;
 - (void) _drawBackgroundForGlyphRange:({_NSRange=QQ})aatPoint:({CGPoint=dd})b;
 - (id) selectedTextAttributesForCharacterAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})b;
 - (char*) _packedGlyphs:(unsigned long long)arange:({_NSRange=QQ})blength:(^Q)c;
 - (void) _drawGlyphsForGlyphRange:({_NSRange=QQ})aatPoint:({CGPoint=dd})b;
 - (unsigned int) _glyphAtIndex:(unsigned long long)acharacterIndex:(^Q)bglyphInscription:(^Q)cisValidIndex:(^B)d;
 - (BOOL) _needToFlushGlyph;
 - (void) _setNeedToFlushGlyph:(BOOL)a;
 - (void) _simpleInsertGlyph:(unsigned int)aatGlyphIndex:(unsigned long long)bcharacterIndex:(unsigned long long)celastic:(BOOL)d;
 - (void) _simpleDeleteGlyphsInRange:({_NSRange=QQ})a;
 - (void) _insertGlyphs:(^I)aelasticAttributes:(^B)bcount:(unsigned long long)catGlyphIndex:(unsigned long long)dcharacterIndex:(unsigned long long)e;
 - (void) _promoteGlyphStoreToFormat:(unsigned long long)a;
 - (id) _attachmentSizesRun;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _currentAttachmentRect;
 - (unsigned long long) _currentAttachmentIndex;
 - (void) _setCurrentAttachmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})aindex:(unsigned long long)b;
 - (void) _clearCurrentAttachmentSettings;
 - (void) _clearTemporaryAttributes;
 - (void) _clearTemporaryAttributesForCharacterRange:({_NSRange=QQ})achangeInLength:(long long)b;
 - (void) setAllowsOriginalFontMetricsOverride:(BOOL)a;
 - (BOOL) allowsOriginalFontMetricsOverride;
 - (void) _setHasSeenRightToLeft:(BOOL)a;
 - (BOOL) flipsIfNeeded;
 - (void) setFlipsIfNeeded:(BOOL)a;
 - (void) setLineFragmentRect:({CGRect={CGPoint=dd}{CGSize=dd}})aforGlyphRange:({_NSRange=QQ})busedRect:({CGRect={CGPoint=dd}{CGSize=dd}})cbaselineOffset:(double)d;
 - (double) baselineOffsetForGlyphAtIndex:(unsigned long long)a;
 - (BOOL) ignoresViewTransformations;
 - (void) setIgnoresViewTransformations:(BOOL)a;
 - (BOOL) ignoresAntialiasThreshold;
 - (void) setIgnoresAntialiasThreshold:(BOOL)a;
 - (BOOL) _alwaysDrawsActive;
 - (void) _setAlwaysDrawsActive:(BOOL)a;
 - (id) _insertionPointHelperForGlyphAtIndex:(unsigned long long)a;
 - (long long) getLineFragmentInsertionPointArraysForCharacterAtIndex:(unsigned long long)ainDisplayOrder:(BOOL)bpositions:(^^d)ccharacterIndexes:(^^Q)dcount:(^Q)ealternatePositions:(^^d)fcharacterIndexes:(^^Q)gcount:(^Q)h;
 - (id) _selectionRangesForInsertionPointRange:({_NSRange=QQ})a;
 - (void) _setDrawsUnderlinesLikeWebKit:(BOOL)a;
 - (void) _setDrawsDebugBaselines:(BOOL)a;
 - (void) ensureLayoutForCharacterRange:({_NSRange=QQ})a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) usedRectForTextContainer:(id)a;
 - (void) getFirstUnlaidCharacterIndex:(^Q)aglyphIndex:(^Q)b;
 - (BOOL) synchronizesAlignmentToDirection;
 - (long long) typesetterBehavior;
 - (double) hyphenationFactor;
 - (id) textContainers;
 - (unsigned long long) getGlyphsInRange:({_NSRange=QQ})aglyphs:(^S)bproperties:(^q)ccharacterIndexes:(^Q)dbidiLevels:(char*)e;
 - (BOOL) usesFontLeading;
 - (void) insertGlyph:(unsigned int)aatGlyphIndex:(unsigned long long)bcharacterIndex:(unsigned long long)c;
 - (void) setEllipsisGlyphAttribute:(BOOL)aforGlyphAtIndex:(unsigned long long)b;
 - (void) setAttachmentSize:({CGSize=dd})aforGlyphRange:({_NSRange=QQ})b;
 - (void) setUsesFontLeading:(BOOL)a;
 - (void) setTypesetterBehavior:(long long)a;
 - (void) setGlyphs:(r^S)aproperties:(r^q)bcharacterIndexes:(r^Q)cfont:(id)dforGlyphRange:({_NSRange=QQ})e;
 - (void) insertGlyphs:(r^I)alength:(unsigned long long)bforStartingGlyphAtIndex:(unsigned long long)ccharacterIndex:(unsigned long long)d;
 - (void) setIntAttribute:(long long)avalue:(long long)bforGlyphAtIndex:(unsigned long long)c;
 - (unsigned long long) layoutOptions;
 - (void) deleteGlyphsInRange:({_NSRange=QQ})a;
 - (unsigned long long) numberOfGlyphs;
 - (void) _commonInit;
 - (void) setGlyphGenerator:(id)a;
 - (void) insertTextContainer:(id)aatIndex:(unsigned long long)b;
 - ({_NSRange=QQ}) _characterRangeCurrentlyInAndAfterContainer:(id)a;
 - (void) textContainerChangedTextView:(id)a;
 - (void) _setGlyphsPerLineEstimate:(unsigned long long)aoffsetPerLineEstimate:(double)b;
 - (void) invalidateGlyphsForCharacterRange:({_NSRange=QQ})achangeInLength:(long long)bactualCharacterRange:(^{_NSRange=QQ})c;
 - (void) invalidateLayoutForCharacterRange:({_NSRange=QQ})aisSoft:(BOOL)bactualCharacterRange:(^{_NSRange=QQ})c;
 - (void) _invalidateGlyphsForCharacterRange:({_NSRange=QQ})aeditedCharacterRange:({_NSRange=QQ})bchangeInLength:(long long)cactualCharacterRange:(^{_NSRange=QQ})d;
 - (void) _primitiveInvalidateDisplayForGlyphRange:({_NSRange=QQ})a;
 - (void) _forceDisplayToBeCorrectForViewsWithUnlaidGlyphs;
 - (void) textStorage:(id)aedited:(unsigned long long)brange:({_NSRange=QQ})cchangeInLength:(long long)dinvalidatedRange:({_NSRange=QQ})e;
 - (void) ensureGlyphsForCharacterRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) glyphRangeForBoundingRect:({CGRect={CGPoint=dd}{CGSize=dd}})ainTextContainer:(id)b;
 - (void) ensureLayoutForGlyphRange:({_NSRange=QQ})a;
 - (void) _primitiveDeleteGlyphsInRange:({_NSRange=QQ})a;
 - (unsigned short) glyphAtIndex:(unsigned long long)aisValidIndex:(^B)b;
 - (unsigned long long) getGlyphsInRange:({_NSRange=QQ})aglyphs:(^I)bcharacterIndexes:(^Q)cglyphInscriptions:(^Q)delasticBits:(^B)ebidiLevels:(char*)f;
 - (unsigned long long) firstUnlaidCharacterIndex;
 - (unsigned long long) firstUnlaidGlyphIndex;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})bwithoutAdditionalLayout:(BOOL)c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) lineFragmentRectForGlyphAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})b;
 - (double) fractionOfDistanceThroughGlyphForPoint:({CGPoint=dd})ainTextContainer:(id)b;
 - (unsigned long long) glyphIndexForPoint:({CGPoint=dd})ainTextContainer:(id)b;
 - (unsigned long long) glyphIndexForPoint:({CGPoint=dd})ainTextContainer:(id)bfractionOfDistanceThroughGlyph:(^d)c;
 - (id) temporaryAttributesAtCharacterIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})b;
 - (BOOL) usesScreenFonts;
 - (void) setTextStorage:(id)a;
 - (void) replaceTextStorage:(id)a;
 - (id) _glyphGenerator;
 - (void) _setGlyphGenerator:(id)a;
 - (void) setTypesetter:(id)a;
 - (void) addTextContainer:(id)a;
 - (void) removeTextContainerAtIndex:(unsigned long long)a;
 - (void) textContainerChangedGeometry:(id)a;
 - (void) textContainerChangedTextView:(id)afromTextView:(id)b;
 - (void) _setGlyphsPerLineEstimate:(unsigned long long)aintegerOffsetPerLineEstimate:(unsigned long long)b;
 - (void) setBackgroundLayoutEnabled:(BOOL)a;
 - (BOOL) backgroundLayoutEnabled;
 - (void) setUsesScreenFonts:(BOOL)a;
 - (void) setShowsInvisibleCharacters:(BOOL)a;
 - (BOOL) showsInvisibleCharacters;
 - (void) setShowsControlCharacters:(BOOL)a;
 - (BOOL) showsControlCharacters;
 - (void) setHyphenationFactor:(double)a;
 - (BOOL) backgroundColorProvidesOpaqueSurface;
 - (void) processEditingForTextStorage:(id)aedited:(unsigned long long)brange:({_NSRange=QQ})cchangeInLength:(long long)dinvalidatedRange:({_NSRange=QQ})e;
 - (void) ensureGlyphsForGlyphRange:({_NSRange=QQ})a;
 - (void) ensureLayoutForTextContainer:(id)a;
 - (void) replaceGlyphAtIndex:(unsigned long long)awithGlyph:(unsigned int)b;
 - (void) setCharacterIndex:(unsigned long long)aforGlyphAtIndex:(unsigned long long)b;
 - (void) invalidateGlyphsOnLayoutInvalidationForGlyphRange:({_NSRange=QQ})a;
 - (BOOL) isValidGlyphIndex:(unsigned long long)a;
 - (unsigned long long) getGlyphsInRange:({_NSRange=QQ})aglyphs:(^I)bcharacterIndexes:(^Q)cglyphInscriptions:(^Q)delasticBits:(^B)e;
 - (unsigned long long) getGlyphs:(^I)arange:({_NSRange=QQ})b;
 - (void) setLocation:({CGPoint=dd})aforStartOfGlyphRange:({_NSRange=QQ})bcoalesceRuns:(BOOL)c;
 - (void) setLocations:(^{CGPoint=dd})astartingGlyphIndexes:(^Q)bcount:(unsigned long long)cforGlyphRange:({_NSRange=QQ})d;
 - (void) setDrawsOutsideLineFragment:(BOOL)aforGlyphAtIndex:(unsigned long long)b;
 - (id) textContainerForGlyphAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})bwithoutAdditionalLayout:(BOOL)c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) lineFragmentRectForGlyphAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})bwithoutAdditionalLayout:(BOOL)c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)aeffectiveRange:(^{_NSRange=QQ})ballowLayout:(BOOL)c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) extraLineFragmentRect;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) extraLineFragmentUsedRect;
 - (id) extraLineFragmentTextContainer;
 - (BOOL) drawsOutsideLineFragmentForGlyphAtIndex:(unsigned long long)a;
 - ({_NSRange=QQ}) truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(unsigned long long)a;
 - (void) setLayoutRect:({CGRect={CGPoint=dd}{CGSize=dd}})aforTextBlock:(id)bglyphRange:({_NSRange=QQ})c;
 - (void) setBoundsRect:({CGRect={CGPoint=dd}{CGSize=dd}})aforTextBlock:(id)bglyphRange:({_NSRange=QQ})c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) layoutRectForTextBlock:(id)aglyphRange:({_NSRange=QQ})b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) boundsRectForTextBlock:(id)aglyphRange:({_NSRange=QQ})b;
 - ({_NSRange=QQ}) glyphRangeForTextContainer:(id)a;
 - ({_NSRange=QQ}) rangeOfNominallySpacedGlyphsContainingIndex:(unsigned long long)a;
 - ({_NSRange=QQ}) glyphRangeForBoundingRectWithoutAdditionalLayout:({CGRect={CGPoint=dd}{CGSize=dd}})ainTextContainer:(id)b;
 - (void) setTemporaryAttributes:(id)aforCharacterRange:({_NSRange=QQ})b;
 - (void) addTemporaryAttributes:(id)aforCharacterRange:({_NSRange=QQ})b;
 - (id) _temporaryAttribute:(id)aatCharacterIndex:(unsigned long long)beffectiveRange:(^{_NSRange=QQ})c;
 - (id) _temporaryAttribute:(id)aatCharacterIndex:(unsigned long long)blongestEffectiveRange:(^{_NSRange=QQ})cinRange:({_NSRange=QQ})d;
 - (id) _temporaryAttributesAtCharacterIndex:(unsigned long long)alongestEffectiveRange:(^{_NSRange=QQ})binRange:({_NSRange=QQ})c;
 - (void) setSynchronizesAlignmentToDirection:(BOOL)a;
 - (void) drawGlyphsForGlyphRange:({_NSRange=QQ})aatPoint:({CGPoint=dd})b;
 - (void) drawBackgroundForGlyphRange:({_NSRange=QQ})aatPoint:({CGPoint=dd})b;


@end
