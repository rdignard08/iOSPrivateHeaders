
@interface NSNumberFormatter : NSFormatter {

    @"NSMutableDictionary" _attributes;
    ^{__CFNumberFormatter=} _formatter;
    unsigned long long _counter;
    unsigned long long _behavior;
    @"NSRecursiveLock" _lock;
    unsigned long long _stateBitMask;
    [9^v] _reserved;
}
 + (void) setDefaultFormatterBehavior:(unsigned long long)a;
 + (unsigned long long) defaultFormatterBehavior;
 + (void) initialize;
 + (id) localizedStringFromNumber:(id)anumberStyle:(unsigned long long)b;

 - (BOOL) getObjectValue:(o^@)aforString:(id)berrorDescription:(o^@)c;
 - (id) stringForObjectValue:(id)a;
 - (id) attributedStringForObjectValue:(id)awithDefaultAttributes:(id)b;
 - (unsigned long long) roundingMode;
 - (void) _regenerateFormatter;
 - (void) _clearFormatter;
 - (BOOL) getObjectValue:(o^@)aforString:(id)brange:(N^{_NSRange=QQ})cerror:(o^@)d;
 - (void) setFormatterBehavior:(unsigned long long)a;
 - (unsigned long long) formatterBehavior;
 - (BOOL) isLenient;
 - (void) setLenient:(BOOL)a;
 - (void) setFormattingContext:(long long)a;
 - (long long) formattingContext;
 - (BOOL) _usesCharacterDirection;
 - (void) _setUsesCharacterDirection:(BOOL)a;
 - (void) setNilSymbol:(id)a;
 - (void) setPositiveInfinitySymbol:(id)a;
 - (void) setNegativeInfinitySymbol:(id)a;
 - (void) setAllowsFloats:(BOOL)a;
 - (id) nilSymbol;
 - (id) notANumberSymbol;
 - (id) zeroSymbol;
 - (id) negativeInfinitySymbol;
 - (id) positiveInfinitySymbol;
 - (void) setNumberStyle:(unsigned long long)a;
 - (void) setUsesGroupingSeparator:(BOOL)a;
 - (id) groupingSeparator;
 - (id) decimalSeparator;
 - (id) positiveFormat;
 - (^v) __Keynote_NOOP;
 - (id) stringFromNumber:(id)a;
 - (unsigned long long) numberStyle;
 - (BOOL) generatesDecimalNumbers;
 - (id) negativeFormat;
 - (void) setNegativeFormat:(id)a;
 - (id) textAttributesForNegativeValues;
 - (void) setTextAttributesForNegativeValues:(id)a;
 - (void) setPositiveFormat:(id)a;
 - (id) textAttributesForPositiveValues;
 - (void) setTextAttributesForPositiveValues:(id)a;
 - (BOOL) allowsFloats;
 - (void) setDecimalSeparator:(id)a;
 - (BOOL) alwaysShowsDecimalSeparator;
 - (id) currencyDecimalSeparator;
 - (void) setCurrencyDecimalSeparator:(id)a;
 - (BOOL) usesGroupingSeparator;
 - (void) setGroupingSeparator:(id)a;
 - (void) setZeroSymbol:(id)a;
 - (id) textAttributesForZero;
 - (void) setTextAttributesForZero:(id)a;
 - (id) textAttributesForNil;
 - (void) setTextAttributesForNil:(id)a;
 - (void) setNotANumberSymbol:(id)a;
 - (id) textAttributesForNotANumber;
 - (void) setTextAttributesForNotANumber:(id)a;
 - (id) textAttributesForPositiveInfinity;
 - (void) setTextAttributesForPositiveInfinity:(id)a;
 - (id) textAttributesForNegativeInfinity;
 - (void) setTextAttributesForNegativeInfinity:(id)a;
 - (void) setPositivePrefix:(id)a;
 - (void) setPositiveSuffix:(id)a;
 - (void) setNegativePrefix:(id)a;
 - (void) setNegativeSuffix:(id)a;
 - (id) currencyCode;
 - (void) setCurrencyCode:(id)a;
 - (BOOL) _hasSetCurrencyCode;
 - (id) currencySymbol;
 - (BOOL) _hasSetCurrencySymbol;
 - (void) setCurrencySymbol:(id)a;
 - (id) internationalCurrencySymbol;
 - (void) setInternationalCurrencySymbol:(id)a;
 - (BOOL) _hasSetInternationalCurrencySymbol;
 - (id) percentSymbol;
 - (void) setPercentSymbol:(id)a;
 - (id) perMillSymbol;
 - (void) setPerMillSymbol:(id)a;
 - (id) minusSign;
 - (void) setMinusSign:(id)a;
 - (id) plusSign;
 - (void) setPlusSign:(id)a;
 - (id) exponentSymbol;
 - (void) setExponentSymbol:(id)a;
 - (unsigned long long) groupingSize;
 - (void) setGroupingSize:(unsigned long long)a;
 - (unsigned long long) secondaryGroupingSize;
 - (void) setSecondaryGroupingSize:(unsigned long long)a;
 - (unsigned long long) formatWidth;
 - (void) setFormatWidth:(unsigned long long)a;
 - (id) multiplier;
 - (void) setMultiplier:(id)a;
 - (id) paddingCharacter;
 - (void) setPaddingCharacter:(id)a;
 - (unsigned long long) paddingPosition;
 - (void) setPaddingPosition:(unsigned long long)a;
 - (void) setRoundingMode:(unsigned long long)a;
 - (id) roundingIncrement;
 - (void) setRoundingIncrement:(id)a;
 - (unsigned long long) minimumIntegerDigits;
 - (void) setMinimumIntegerDigits:(unsigned long long)a;
 - (unsigned long long) maximumIntegerDigits;
 - (void) setMaximumIntegerDigits:(unsigned long long)a;
 - (unsigned long long) minimumFractionDigits;
 - (void) setMinimumFractionDigits:(unsigned long long)a;
 - (unsigned long long) maximumFractionDigits;
 - (void) setMaximumFractionDigits:(unsigned long long)a;
 - (id) minimum;
 - (void) setMinimum:(id)a;
 - (id) maximum;
 - (void) setMaximum:(id)a;
 - (id) currencyGroupingSeparator;
 - (void) setCurrencyGroupingSeparator:(id)a;
 - (BOOL) usesSignificantDigits;
 - (void) setUsesSignificantDigits:(BOOL)a;
 - (unsigned long long) minimumSignificantDigits;
 - (void) setMinimumSignificantDigits:(unsigned long long)a;
 - (unsigned long long) maximumSignificantDigits;
 - (void) setMaximumSignificantDigits:(unsigned long long)a;
 - (BOOL) isPartialStringValidationEnabled;
 - (void) setPartialStringValidationEnabled:(BOOL)a;
 - (^v) getFormatter;
 - (void) setPropertyBit;
 - (void) clearPropertyBit;
 - (BOOL) checkModify;
 - (void) resetCheckModify;
 - (void) resetCheckLocaleChange;
 - (BOOL) checkLocaleChange;
 - (id) copyWithZone:(^{_NSZone=})a;
 - (void) dealloc;
 - (void) finalize;
 - (void) setLocale:(id)a;
 - (id) locale;
 - (id) numberFromString:(id)a;
 - (void) _reset;
 - (void) setGeneratesDecimalNumbers:(BOOL)a;
 - (id) init;
 - (void) encodeWithCoder:(id)a;
 - (id) initWithCoder:(id)a;
 - (void) setAlwaysShowsDecimalSeparator:(BOOL)a;
 - (id) positivePrefix;
 - (id) positiveSuffix;
 - (id) negativePrefix;
 - (id) negativeSuffix;


@end
