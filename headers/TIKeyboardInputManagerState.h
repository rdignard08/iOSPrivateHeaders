
@protocol NSCopying, NSSecureCoding;
@interface TIKeyboardInputManagerState : NSObject <NSCopying, NSSecureCoding> {

    TIKeyboardBehaviors _keyboardBehaviors;
    (?="integerValue"q"fields"{?="canHandleKeyHitTest"b1"ignoresDeadKeys"b1"needsKeyHitTestResults"b1"shouldExtendPriorWord"b1"suppliesCompletions"b1"supportsNumberKeySelection"b1"supportsSetPhraseBoundary"b1"suppressCompletionsForFieldEditor"b1"usesAutoDeleteWord"b1"usesCandidateSelection"b1"commitsAcceptedCandidate"b1"nextInputWouldStartSentence"b1"inputStringIsExemptFromChecker"b1"suppressPlaceholderCandidate"b1"usesAutocorrectionLists"b1}) _mask;
    BOOL _shouldAddModifierSymbolsToWordCharacters;
    TIKeyboardCandidate _autocorrectionRecordForInputString;
    NSString _wordSeparator;
    unsigned long long _inputCount;
    unsigned long long _inputIndex;
    NSString _inputString;
    TIKeyEventMap _keyEventMap;
    NSString _replacementForDoubleSpace;
    NSString _shadowTyping;
    unsigned long long _initialCandidateBatchCount;
    TICharacterSetDescription _wordCharacters;
    TICharacterSetDescription _shortcutCompletions;
    TICharacterSetDescription _inputsPreventingAcceptSelectedCandidate;
    TICharacterSetDescription _inputsToReject;
    TICharacterSetDescription _terminatorsPreventingAutocorrection;
    TICharacterSetDescription _terminatorsDeletingAutospace;
    NSString _searchStringForMarkedText;
}
@property (nonatomic, assign, readwrite) NSNumber* canHandleKeyHitTest;
@property (nonatomic, assign, readwrite) NSNumber* ignoresDeadKeys;
@property (nonatomic, assign, readwrite) NSNumber* needsKeyHitTestResults;
@property (nonatomic, assign, readwrite) NSNumber* shouldExtendPriorWord;
@property (nonatomic, assign, readwrite) NSNumber* suppliesCompletions;
@property (nonatomic, assign, readwrite) NSNumber* supportsSetPhraseBoundary;
@property (nonatomic, assign, readwrite) NSNumber* suppressCompletionsForFieldEditor;
@property (nonatomic, assign, readwrite) NSNumber* usesAutoDeleteWord;
@property (nonatomic, assign, readwrite) NSNumber* usesCandidateSelection;
@property (nonatomic, assign, readwrite) NSNumber* usesAutocorrectionLists;
@property (nonatomic, assign, readwrite) NSNumber* commitsAcceptedCandidate;
@property (nonatomic, copy, readwrite) NSString* replacementForDoubleSpace;
@property (nonatomic, copy, readwrite) NSString* wordSeparator;
@property (nonatomic, assign, readwrite) NSNumber* initialCandidateBatchCount;
@property (nonatomic, retain, readwrite) TIKeyboardBehaviors* keyboardBehaviors;
@property (nonatomic, assign, readwrite) NSNumber* shouldAddModifierSymbolsToWordCharacters;
@property (nonatomic, copy, readwrite) TICharacterSetDescription* wordCharacters;
@property (nonatomic, copy, readwrite) TICharacterSetDescription* shortcutCompletions;
@property (nonatomic, copy, readwrite) TICharacterSetDescription* inputsPreventingAcceptSelectedCandidate;
@property (nonatomic, copy, readwrite) TICharacterSetDescription* inputsToReject;
@property (nonatomic, copy, readwrite) TICharacterSetDescription* terminatorsPreventingAutocorrection;
@property (nonatomic, copy, readwrite) TICharacterSetDescription* terminatorsDeletingAutospace;
@property (nonatomic, copy, readwrite) NSString* inputString;
@property (nonatomic, assign, readwrite) NSNumber* inputIndex;
@property (nonatomic, assign, readwrite) NSNumber* inputCount;
@property (nonatomic, assign, readwrite) NSNumber* nextInputWouldStartSentence;
@property (nonatomic, assign, readwrite) NSNumber* inputStringIsExemptFromChecker;
@property (nonatomic, assign, readwrite) NSNumber* suppressPlaceholderCandidate;
@property (nonatomic, assign, readwrite) NSNumber* supportsNumberKeySelection;
@property (nonatomic, retain, readwrite) TIKeyboardCandidate* autocorrectionRecordForInputString;
@property (nonatomic, copy, readwrite) NSString* shadowTyping;
@property (nonatomic, copy, readwrite) NSString* searchStringForMarkedText;
@property (nonatomic, retain, readwrite) TIKeyEventMap* keyEventMap;
 + (BOOL) supportsSecureCoding;

 - (id) copyWithZone:(^{_NSZone=})a;
 - (void) dealloc;
 - (id) keyboardBehaviors;
 - (BOOL) usesCandidateSelection;
 - (void) setUsesCandidateSelection:(BOOL)a;
 - (BOOL) supportsNumberKeySelection;
 - (void) setSupportsNumberKeySelection:(BOOL)a;
 - (BOOL) usesAutoDeleteWord;
 - (void) setSearchStringForMarkedText:(id)a;
 - (BOOL) supportsSetPhraseBoundary;
 - (BOOL) shouldExtendPriorWord;
 - (BOOL) usesAutocorrectionLists;
 - (unsigned long long) inputIndex;
 - (BOOL) nextInputWouldStartSentence;
 - (BOOL) suppressCompletionsForFieldEditor;
 - (BOOL) suppliesCompletions;
 - (BOOL) acceptInputString:(id)a;
 - (id) replacementForDoubleSpace;
 - (BOOL) shouldDeleteAutospaceBeforeTerminator:(id)a;
 - (BOOL) shouldSuppressAutocorrectionWithTerminator:(id)a;
 - (BOOL) inputStringAcceptsCurrentCandidateIfSelected:(id)a;
 - (BOOL) stringEndsWord:(id)a;
 - (BOOL) inputStringIsExemptFromChecker;
 - (id) wordSeparator;
 - (id) shadowTyping;
 - (BOOL) commitsAcceptedCandidate;
 - (id) autocorrectionRecordForInputString;
 - (unsigned long long) initialCandidateBatchCount;
 - (BOOL) suppressPlaceholderCandidate;
 - (id) keyEventMap;
 - (BOOL) ignoresDeadKeys;
 - (BOOL) canHandleKeyHitTest;
 - (BOOL) needsKeyHitTestResults;
 - (void) encodeWithCoder:(id)a;
 - (id) initWithCoder:(id)a;
 - (void) setInputCount:(unsigned long long)a;
 - (unsigned long long) inputCount;
 - (id) inputsToReject;
 - (id) inputsPreventingAcceptSelectedCandidate;
 - (id) terminatorsPreventingAutocorrection;
 - (id) terminatorsDeletingAutospace;
 - (id) wordCharacters;
 - (BOOL) shouldAddModifierSymbolsToWordCharacters;
 - (id) shortcutCompletions;
 - (void) setCanHandleKeyHitTest:(BOOL)a;
 - (void) setCommitsAcceptedCandidate:(BOOL)a;
 - (void) setIgnoresDeadKeys:(BOOL)a;
 - (void) setInputStringIsExemptFromChecker:(BOOL)a;
 - (void) setNeedsKeyHitTestResults:(BOOL)a;
 - (void) setNextInputWouldStartSentence:(BOOL)a;
 - (void) setShouldExtendPriorWord:(BOOL)a;
 - (void) setSuppliesCompletions:(BOOL)a;
 - (void) setSupportsSetPhraseBoundary:(BOOL)a;
 - (void) setSuppressCompletionsForFieldEditor:(BOOL)a;
 - (void) setUsesAutoDeleteWord:(BOOL)a;
 - (void) setUsesAutocorrectionLists:(BOOL)a;
 - (void) setSuppressPlaceholderCandidate:(BOOL)a;
 - (void) setAutocorrectionRecordForInputString:(id)a;
 - (void) setWordSeparator:(id)a;
 - (void) setInputIndex:(unsigned long long)a;
 - (id) inputString;
 - (void) setInputString:(id)a;
 - (void) setKeyboardBehaviors:(id)a;
 - (void) setKeyEventMap:(id)a;
 - (void) setReplacementForDoubleSpace:(id)a;
 - (void) setShadowTyping:(id)a;
 - (void) setShouldAddModifierSymbolsToWordCharacters:(BOOL)a;
 - (void) setInitialCandidateBatchCount:(unsigned long long)a;
 - (void) setWordCharacters:(id)a;
 - (void) setShortcutCompletions:(id)a;
 - (void) setInputsPreventingAcceptSelectedCandidate:(id)a;
 - (void) setInputsToReject:(id)a;
 - (void) setTerminatorsPreventingAutocorrection:(id)a;
 - (void) setTerminatorsDeletingAutospace:(id)a;
 - (id) searchStringForMarkedText;


@end
