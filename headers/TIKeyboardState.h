
@protocol NSCopying, NSSecureCoding;
@interface TIKeyboardState : NSObject <NSCopying, NSSecureCoding> {

    (?="integerValue"q"fields"{?="userSelectedCurrentCandidate"b1"shouldSkipCandidateSelection"b1"suppressingCandidateSelection"b1"needsCandidateMetadata"b1"keyboardEventsLagging"b1"hardwareKeyboardMode"b1"splitKeyboardMode"b1"wordLearningEnabled"b1"autocorrectionEnabled"b1"shortcutConversionEnabled"b1"candidateSelectionPredictionEnabled"b1"autocapitalizationEnabled"b1}) _mask;
    (?="integerValue"q"fields"{?="displayed"b1"autoDisplayMode"b1}) _autocorrectionListUIState;
    int _shiftState;
    NSString* _clientIdentifier;
    NSString* _inputMode;
    NSString* _recipientIdentifier;
    TIKeyboardLayout* _keyLayout;
    TIKeyboardLayoutState* _layoutState;
    TIDocumentState* _documentState;
    NSString* _inputForMarkedText;
    NSString* _searchStringForMarkedText;
    TIKeyboardCandidate* _currentCandidate;
    TITextInputTraits* _textInputTraits;
    NSString* _responseContext;
}
@property (nonatomic, copy, readwrite) NSString* clientIdentifier;
@property (nonatomic, copy, readwrite) NSString* inputMode;
@property (nonatomic, copy, readwrite) NSString* recipientIdentifier;
@property (nonatomic, retain, readwrite) TIKeyboardLayout* keyLayout;
@property (nonatomic, assign, readwrite) NSNumber* shiftState;
@property (nonatomic, copy, readwrite) TIKeyboardLayoutState* layoutState;
@property (nonatomic, retain, readwrite) TIDocumentState* documentState;
@property (nonatomic, copy, readwrite) NSString* inputForMarkedText;
@property (nonatomic, copy, readwrite) NSString* searchStringForMarkedText;
@property (nonatomic, retain, readwrite) TIKeyboardCandidate* currentCandidate;
@property (nonatomic, assign, readwrite) NSNumber* userSelectedCurrentCandidate;
@property (nonatomic, assign, readwrite) NSNumber* shouldSkipCandidateSelection;
@property (nonatomic, assign, readwrite) NSNumber* suppressingCandidateSelection;
@property (nonatomic, assign, readwrite) NSNumber* needsCandidateMetadata;
@property (nonatomic, assign, readwrite) NSNumber* keyboardEventsLagging;
@property (nonatomic, assign, readwrite) NSNumber* hardwareKeyboardMode;
@property (nonatomic, assign, readwrite) NSNumber* splitKeyboardMode;
@property (nonatomic, assign, readwrite) NSNumber* wordLearningEnabled;
@property (nonatomic, assign, readwrite) NSNumber* autocorrectionEnabled;
@property (nonatomic, assign, readwrite) NSNumber* shortcutConversionEnabled;
@property (nonatomic, assign, readwrite) NSNumber* candidateSelectionPredictionEnabled;
@property (nonatomic, assign, readwrite) NSNumber* autocapitalizationEnabled;
@property (nonatomic, retain, readwrite) TITextInputTraits* textInputTraits;
@property (nonatomic, copy, readwrite) NSString* responseContext;
@property (nonatomic, assign, readwrite) NSNumber* autocapitalizationType;
@property (nonatomic, assign, readwrite) NSNumber* keyboardType;
@property (nonatomic, assign, readwrite) NSNumber* secureTextEntry;
@property (nonatomic, assign, readwrite) NSNumber* autocorrectionListUIDisplayed;
@property (nonatomic, assign, readwrite) NSNumber* autocorrectionListUIAutoDisplayMode;
 + (BOOL) supportsSecureCoding;

 - (id) copyWithZone:(^{_NSZone=})a;
 - (id) description;
 - (void) dealloc;
 - (void) setClientIdentifier:(id)a;
 - (void) setHardwareKeyboardMode:(BOOL)a;
 - (void) setInputMode:(id)a;
 - (void) setLayoutState:(id)a;
 - (void) setCurrentCandidate:(id)a;
 - (void) setNeedsCandidateMetadata:(BOOL)a;
 - (void) setShortcutConversionEnabled:(BOOL)a;
 - (void) setCandidateSelectionPredictionEnabled:(BOOL)a;
 - (void) setTextInputTraits:(id)a;
 - (void) setAutocorrectionListUIDisplayed:(BOOL)a;
 - (void) setKeyLayout:(id)a;
 - (void) setSplitKeyboardMode:(BOOL)a;
 - (void) setWordLearningEnabled:(BOOL)a;
 - (void) setRecipientIdentifier:(id)a;
 - (void) setResponseContext:(id)a;
 - (void) setShouldSkipCandidateSelection:(BOOL)a;
 - (void) setInputForMarkedText:(id)a;
 - (void) setSearchStringForMarkedText:(id)a;
 - (void) setDocumentState:(id)a;
 - (void) setAutocapitalizationEnabled:(BOOL)a;
 - (int) shiftState;
 - (void) setShiftState:(int)a;
 - (void) setSuppressingCandidateSelection:(BOOL)a;
 - (void) setUserSelectedCurrentCandidate:(BOOL)a;
 - (void) setKeyboardEventsLagging:(BOOL)a;
 - (void) encodeWithCoder:(id)a;
 - (id) initWithCoder:(id)a;
 - (unsigned long long) keyboardType;
 - (BOOL) hardwareKeyboardMode;
 - (id) documentState;
 - (id) currentCandidate;
 - (id) searchStringForMarkedText;
 - (id) inputMode;
 - (id) textInputTraits;
 - (unsigned long long) autocapitalizationType;
 - (void) _createTextInputTraitsIfNecessary;
 - (void) setAutocapitalizationType:(unsigned long long)a;
 - (void) setKeyboardType:(unsigned long long)a;
 - (BOOL) secureTextEntry;
 - (void) setSecureTextEntry:(BOOL)a;
 - (id) clientIdentifier;
 - (id) recipientIdentifier;
 - (id) keyLayout;
 - (id) layoutState;
 - (id) inputForMarkedText;
 - (BOOL) userSelectedCurrentCandidate;
 - (BOOL) shouldSkipCandidateSelection;
 - (BOOL) suppressingCandidateSelection;
 - (BOOL) needsCandidateMetadata;
 - (BOOL) keyboardEventsLagging;
 - (BOOL) splitKeyboardMode;
 - (BOOL) wordLearningEnabled;
 - (BOOL) autocorrectionEnabled;
 - (BOOL) shortcutConversionEnabled;
 - (BOOL) autocapitalizationEnabled;
 - (id) responseContext;
 - (BOOL) autocorrectionListUIDisplayed;
 - (BOOL) autocorrectionListUIAutoDisplayMode;
 - (void) setAutocorrectionEnabled:(BOOL)a;
 - (BOOL) candidateSelectionPredictionEnabled;
 - (void) setAutocorrectionListUIAutoDisplayMode:(BOOL)a;


@end
