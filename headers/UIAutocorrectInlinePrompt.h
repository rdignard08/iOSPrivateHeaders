
@protocol UIKeyboardCandidateList;
@interface UIAutocorrectInlinePrompt : UIView <UIKeyboardCandidateList> {

    {CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}} m_originalTypedTextRect;
    NSString* m_typedText;
    NSString* m_correction;
    NSArray* m_usageTrackingTypes;
    NSMutableArray* m_typedTextViews;
    UIView* m_correctionView;
    UIView* m_correctionAnimationView;
    UIView* m_typedTextAnimationView;
    UIView* m_correctionShadowView;
    BOOL m_fits;
    BOOL m_mouseDown;
    id m_delegate;
    long long m_index;
    int m_promptTextType;
    double m_originalTypedTextRectCorrectionAmount;
    double m_maxX;
    BOOL _showHiddenCandidatesOnly;
    unsigned int m_usageTrackingMask;
    TIKeyboardCandidateResultSet* _candidateResultSet;
}

 - (void) dealloc;
 - (BOOL) pointInside:({CGPoint=dd})a withEvent:(id)b ;
 - (BOOL) gestureRecognizerShouldBegin:(id)a ;
 - (BOOL) pointInside:({CGPoint=dd})a forEvent:(^{__GSEvent=})b ;
 - (void) touchesBegan:(id)a withEvent:(id)b ;
 - (void) touchesMoved:(id)a withEvent:(id)b ;
 - (void) touchesEnded:(id)a withEvent:(id)b ;
 - (void) touchesCancelled:(id)a withEvent:(id)b ;
 - (void) showCandidateAtIndex:(unsigned long long)a ;
 - (void) showNextCandidate;
 - (void) setCandidates:(id)a inlineText:(id)b inlineRect:({CGRect={CGPoint=dd}{CGSize=dd}})c maxX:(double)d layout:(BOOL)e ;
 - (id) statisticsIdentifier;
 - (BOOL) isExtendedList;
 - (BOOL) isHiddenCandidatesList;
 - (void) setUIKeyboardCandidateListDelegate:(id)a ;
 - (BOOL) showCandidate:(id)a ;
 - (void) showPreviousCandidate;
 - (void) showNextPage;
 - (void) showPreviousPage;
 - (void) showNextRow;
 - (void) showPreviousRow;
 - (unsigned long long) currentIndex;
 - (void) candidateAcceptedAtIndex:(unsigned long long)a ;
 - (id) keyboardBehaviors;
 - (unsigned long long) selectedSortIndex;
 - (void) setCandidates:(id)a type:(int)b inlineText:(id)c inlineRect:({CGRect={CGPoint=dd}{CGSize=dd}})d maxX:(double)e layout:(BOOL)f ;
 - (void) candidatesDidChange;
 - (void) revealHiddenCandidates;
 - (id) inlineText;
 - (void) setSelectedItem:(unsigned long long)a ;
 - (int) textEffectsVisibilityLevel;
 - (void) setCandidateResultSet:(id)a ;
 - (unsigned long long) index;
 - (BOOL) showHiddenCandidatesOnly;
 - (void) setShowHiddenCandidatesOnly:(BOOL)a ;
 - (unsigned int) usageTrackingMask;
 - (id) activeCandidateList;
 - (void) setUsageTrackingMask:(unsigned int)a ;
 - (void) setCorrection:(id)a typedText:(id)b inRect:({CGRect={CGPoint=dd}{CGSize=dd}})c maxX:(double)d ;
 - (void) addTypedTextRect:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (BOOL) prepareForAnimation:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (id) typedTextView;
 - (id) correctionView;
 - (id) correctionAnimationView;
 - (id) correctionShadowView;
 - (id) typedText;
 - (id) correction;
 - (void) removePromptSubviews;
 - (void) setCandidateObject:(id)a candidateSet:(id)b type:(int)c typedText:(id)d inRect:({CGRect={CGPoint=dd}{CGSize=dd}})e maxX:(double)f showHiddenCandidatesOnly:(BOOL)g ;
 - (unsigned long long) numberOfShownItems;
 - (void) setCandidateSet:(id)a showHiddenCandidatesOnly:(BOOL)b ;
 - (double) maximumCandidateWidth;
 - (void) _candidateSelected:(id)a ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) horizontallySquishedCorrectionFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) correctionFrameFromDesiredFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a textHeight:(int)b withExtraGap:(double)c ;
 - (BOOL) isAcceptableTextEffectsFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a afterScrollBy:(double)b ;
 - (void) dismiss;
 - (int) textEffectsVisibilityLevelInKeyboardWindow;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) shadowFrameForFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (id) typedTextAnimationView;
 - (id) initWithFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (id) currentCandidate;
 - (BOOL) hasCandidates;
 - (id) candidateResultSet;
 - (id) candidates;


@end
