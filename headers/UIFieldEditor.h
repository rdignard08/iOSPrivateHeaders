
@protocol UITextInputControllerDelegate, NSLayoutManagerDelegate, NSUITextViewCommonMethods, UIAutoscrollContainer, UITextInput, UITextAutoscrolling, UIKeyboardInput;
@interface UIFieldEditor : UIScrollView <UITextInputControllerDelegate, NSLayoutManagerDelegate, NSUITextViewCommonMethods, UIAutoscrollContainer, UITextInput, UITextAutoscrolling, UIKeyboardInput> {

    UITextInputController* _inputController;
    UITextField* _proxiedView;
    UIAutoscroll* _autoscroll;
    NSTextContainer* _textContainer;
    _UIFieldEditorLayoutManager* _layoutManager;
    _UICascadingTextStorage* _textStorage;
    {?="delegateRespondsToFieldEditorDidChange"b1"delegateRespondsToShouldInsertText"b1"delegateRespondsToShouldReplaceWithText"b1"suppressScrollToSelection"b1"clearOnNextEdit"b1} _feFlags;
    {UIEdgeInsets="top"d"left"d"bottom"d"right"d} _padding;
    _UIFieldEditorContentView* _contentView;
    {_NSRange="location"Q"length"Q} _unobscuredSecureRange;
    NSTimer* _obscureAllTextTimer;
    {CGPoint="x"d"y"d} _textContainerOrigin;
    double _contentWidth;
    _UIFieldEditorContentView* _passcodeStyleCutoutView;
    {CGPoint="x"d"y"d} _autoscrollContentOffset;
}
 + (void) releaseSharedInstance;
 + (id) activeFieldEditor;
 + (id) sharedFieldEditor;
 + (id) excludedElementsForHTML;

 - (void) dealloc;
 - (BOOL) respondsToSelector:(SEL)a ;
 - (id) methodSignatureForSelector:(SEL)a ;
 - (id) forwardingTargetForSelector:(SEL)a ;
 - (void) layoutSubviews;
 - (void) setAttributedText:(id)a ;
 - (id) _inputController;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _responderExternalTouchRectForWindow:(id)a ;
 - (void) setTextColor:(id)a ;
 - (void) setFont:(id)a ;
 - (void) setText:(id)a ;
 - (id) proxiedView;
 - (id) _responderForBecomeFirstResponder;
 - (BOOL) isFirstResponder;
 - ({CGPoint=dd}) autoscrollContentOffset;
 - (void) setAutoscrollContentOffset:({CGPoint=dd})a ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) contentFrameForView:(id)a ;
 - (id) attributedText;
 - (BOOL) isEditing;
 - (void) drawTextInRect:({CGRect={CGPoint=dd}{CGSize=dd}})a forContentView:(id)b ;
 - (void) becomeFieldEditorForView:(id)a ;
 - (void) _performWhileSuppressingDelegateNotifications:(@?)a ;
 - (void) _textStorageDidProcessEditing:(id)a ;
 - (BOOL) _shouldObscureInput;
 - (BOOL) _isPasscodeStyle;
 - (id) interactionAssistant;
 - (BOOL) keyboardInput:(id)a shouldInsertText:(id)b isMarkedText:(BOOL)c ;
 - (BOOL) keyboardInput:(id)a shouldReplaceTextInRange:({_NSRange=QQ})b replacementText:(id)c ;
 - (BOOL) keyboardInputShouldDelete:(id)a ;
 - (BOOL) keyboardInputChanged:(id)a ;
 - (void) keyboardInputChangedSelection:(id)a ;
 - (void) scrollSelectionToVisible:(BOOL)a ;
 - (id) textColor;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _selectionClipRect;
 - (int) scrollXOffset;
 - (void) cancelAutoscroll;
 - (int) scrollYOffset;
 - (void) setScrollXOffset:(int)a scrollYOffset:(int)b adjustForPurpleCaret:(BOOL)c ;
 - (id) textInputView;
 - (void) _cancelObscureAllTextTimer;
 - (void) setTypingAttributes:(id)a ;
 - (id) _textInputTraits;
 - (void) setSelection:({_NSRange=QQ})a ;
 - (void) _obscureAllText;
 - (void) _setValue:(id)a forTextAttribute:(id)b ;
 - (id) _textContainer;
 - (void) setAttributedText:(id)a andSetCaretSelectionAfterText:(BOOL)b ;
 - (id) beginningOfDocument;
 - (id) endOfDocument;
 - (id) textRangeFromPosition:(id)a toPosition:(id)b ;
 - (id) textInRange:(id)a ;
 - (void) setText:(id)a andSetCaretSelectionAfterText:(BOOL)b ;
 - (id) inputDelegate;
 - (void) addTextAlternativesDisplayStyleToRange:({_NSRange=QQ})a ;
 - (void) setSelectedTextRange:(id)a ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) caretRectForPosition:(id)a ;
 - (void) _scrollRangeToVisible:({_NSRange=QQ})a animated:(BOOL)b ;
 - (BOOL) drawsAsAtom;
 - (int) atomStyle;
 - (BOOL) hasText;
 - (void) clearText;
 - (id) _layoutManager;
 - ({_NSRange=QQ}) _unobscuredSecureRange;
 - (BOOL) _clearOnEditIfNeeded;
 - (void) deleteBackward;
 - (void) replaceRange:(id)a withText:(id)b ;
 - (void) replaceRangeWithTextWithoutClosingTyping:(id)a replacementText:(id)b ;
 - (id) selectedTextRange;
 - (id) markedTextRange;
 - (id) markedTextStyle;
 - (void) setMarkedTextStyle:(id)a ;
 - (void) unmarkText;
 - (id) positionFromPosition:(id)a offset:(long long)b ;
 - (id) positionFromPosition:(id)a inDirection:(long long)b offset:(long long)c ;
 - (long long) comparePosition:(id)a toPosition:(id)b ;
 - (long long) offsetFromPosition:(id)a toPosition:(id)b ;
 - (id) positionWithinRange:(id)a farthestInDirection:(long long)b ;
 - (id) characterRangeByExtendingPosition:(id)a inDirection:(long long)b ;
 - (void) setInputDelegate:(id)a ;
 - (id) tokenizer;
 - (long long) baseWritingDirectionForPosition:(id)a inDirection:(long long)b ;
 - (void) setBaseWritingDirection:(long long)a forRange:(id)b ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) firstRectForRange:(id)a ;
 - (id) selectionRectsForRange:(id)a ;
 - (id) closestPositionToPoint:({CGPoint=dd})a ;
 - (id) closestPositionToPoint:({CGPoint=dd})a withinRange:(id)b ;
 - (id) characterRangeAtPoint:({CGPoint=dd})a ;
 - (void) insertDictationResult:(id)a withCorrectionIdentifier:(id)b ;
 - (id) insertDictationResultPlaceholder;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) frameForDictationResultPlaceholder:(id)a ;
 - (void) removeDictationResultPlaceholder:(id)a willInsertResult:(BOOL)b ;
 - (id) rangeWithTextAlternatives:(^@)a atPosition:(id)b ;
 - (id) metadataDictionariesForDictationResults;
 - (void) beginSelectionChange;
 - (void) endSelectionChange;
 - (id) _textStorage;
 - ({CGPoint=dd}) _textContainerOrigin;
 - (BOOL) _hasDictationPlaceholder;
 - (BOOL) textInput:(id)a shouldChangeCharactersInRange:({_NSRange=QQ})b replacementText:(id)c ;
 - (void) textInput:(id)a prepareAttributedTextForInsertion:(id)b ;
 - (void) textInputDidChange:(id)a ;
 - ({_NSRange=QQ}) textInput:(id)a willChangeSelectionFromCharacterRange:({_NSRange=QQ})b toCharacterRange:({_NSRange=QQ})c ;
 - (void) textInputDidChangeSelection:(id)a ;
 - ({CGSize=dd}) minSize;
 - (BOOL) isHorizontallyResizable;
 - (void) setLayoutOrientation:(long long)a ;
 - (void) startAutoscroll:({CGPoint=dd})a ;
 - (void) setPadding:({UIEdgeInsets=dddd})a ;
 - (void) selectAll;
 - (id) _textSelectingContainer;
 - (id) textColorForCaretSelection;
 - (void) updateAutoscroll:(id)a ;
 - (void) setScrollXOffset:(int)a scrollYOffset:(int)b ;
 - ({_NSRange=QQ}) selectionRange;
 - (void) revealSelection;
 - (unsigned long long) characterOffsetAtPoint:({CGPoint=dd})a ;
 - (BOOL) hasMarkedText;
 - ({UIEdgeInsets=dddd}) padding;
 - (void) _deleteBackwardAndNotify:(BOOL)a ;
 - (long long) layoutOrientation;
 - (id) linkTextAttributes;
 - (void) layoutManager:(id)a didCompleteLayoutForTextContainer:(id)b atEnd:(BOOL)c ;
 - (void) invalidateTextContainerOrigin;
 - (void) updateInsertionPointStateAndRestartTimer:(BOOL)a ;
 - ({_NSRange=QQ}) markedRange;
 - ({UIEdgeInsets=dddd}) textContainerInset;
 - (void) setConstrainedFrameSize:({CGSize=dd})a ;
 - (long long) layoutManager:(id)a shouldUseAction:(long long)b forControlCharacterAtIndex:(unsigned long long)c ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) layoutManager:(id)a boundingBoxForControlGlyphAtIndex:(unsigned long long)b forTextContainer:(id)c proposedLineFragment:({CGRect={CGPoint=dd}{CGSize=dd}})d glyphPosition:({CGPoint=dd})e characterIndex:(unsigned long long)f ;
 - (unsigned long long) layoutManager:(id)a shouldGenerateGlyphs:(r^S)b properties:(r^q)c characterIndexes:(r^Q)d font:(id)e forGlyphRange:({_NSRange=QQ})f ;
 - ({CGPoint=dd}) textContainerOrigin;
 - (void) setNeedsDisplayInRect:({CGRect={CGPoint=dd}{CGSize=dd}})a avoidAdditionalLayout:(BOOL)b ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) visibleRect;
 - (void) setTextContainer:(id)a ;
 - (id) typingAttributes;
 - (id) style;
 - (id) initWithFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (void) setFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (id) font;
 - (id) textInputTraits;
 - (void) setSecureTextEntry:(BOOL)a ;
 - (id) undoManager;
 - (void) setMarkedText:(id)a selectedRange:({_NSRange=QQ})b ;
 - (void) insertText:(id)a ;
 - (void) setStyle:(id)a ;
 - (id) text;


@end
