
@protocol UIKeyboardImplGeometryDelegate;
@interface UIKeyboard : UIView <UIKeyboardImplGeometryDelegate> {

    @"UIView" m_snapshot;
    @"UITextInputTraits" m_defaultTraits;
    BOOL m_typingDisabled;
    BOOL m_minimized;
    BOOL m_respondingToImplGeometryChange;
    q m_orientation;
    q m_idiom;
    BOOL m_hasExplicitOrientation;
}
 + ({CGSize=dd}) defaultSize;
 + (id) activeKeyboard;
 + ({CGSize=dd}) sizeForInterfaceOrientation:(q)a;
 + ({CGSize=dd}) defaultSizeForInterfaceOrientation:(q)a;
 + ({CGSize=dd}) keyboardSizeForInterfaceOrientation:(q)a;
 + (BOOL) isInHardwareKeyboardMode;
 + (void) removeAllDynamicDictionaries;
 + (id) activeKeyboardForScreen:(id)a;
 + (void) clearActiveForScreen:(id)a;
 + (void) makeKeyboardActive:(id)aforScreen:(id)b;
 + (void) _clearActiveKeyboard;
 + (void) initImplementationNow;
 + ({CGRect={CGPoint=dd}{CGSize=dd}}) defaultFrameForInterfaceOrientation:(q)a;
 + (BOOL) isOnScreen;
 + (BOOL) respondsToProxGesture;
 + (BOOL) shouldMinimizeForHardwareKeyboard;
 + (BOOL) splitKeyboardEnabled;

 - (BOOL) isActive;
 - (void) dealloc;
 - (id) hitTest:({CGPoint=dd})awithEvent:(id)b;
 - (BOOL) pointInside:({CGPoint=dd})awithEvent:(id)b;
 - (void) didMoveToWindow;
 - (BOOL) pointInside:({CGPoint=dd})aforEvent:(^{__GSEvent=})b;
 - (void) touchesBegan:(id)awithEvent:(id)b;
 - (void) touchesMoved:(id)awithEvent:(id)b;
 - (void) touchesEnded:(id)awithEvent:(id)b;
 - (void) touchesCancelled:(id)awithEvent:(id)b;
 - (void) _physicalButtonsBegan:(id)awithEvent:(id)b;
 - (void) _physicalButtonsEnded:(id)awithEvent:(id)b;
 - (void) _physicalButtonsCancelled:(id)awithEvent:(id)b;
 - (void) _deactivateForBackgrounding;
 - (void) _wheelChangedWithEvent:(id)a;
 - (BOOL) _mayRemainFocused;
 - (id) targetWindow;
 - (BOOL) shouldChangeFocusedItem:(id)aheading:(Q)b;
 - (BOOL) canBecomeFocused;
 - (void) willMoveToWindow:(id)a;
 - ({CGSize=dd}) intrinsicContentSize;
 - (void) deactivate;
 - (void) remoteControlReceivedWithEvent:(id)a;
 - (void) updateLayout;
 - (void) setCaretBlinks:(BOOL)a;
 - (void) _setRenderConfig:(id)a;
 - (i) textEffectsVisibilityLevel;
 - (void) acceptAutocorrection;
 - (BOOL) isMinimized;
 - (BOOL) shouldSaveMinimizationState;
 - (void) prepareForGeometryChange;
 - (void) geometryChangeDone:(BOOL)a;
 - (void) setCaretVisible:(BOOL)a;
 - (void) setReturnKeyEnabled:(BOOL)a;
 - (BOOL) canHandleEvent:(id)a;
 - (void) removeAutocorrectPrompt;
 - (void) _resizeForKeyplaneSize:({CGSize=dd})asplitWidthsChanged:(BOOL)b;
 - (void) setMinimized:(BOOL)a;
 - (BOOL) canDismiss;
 - (BOOL) caretBlinks;
 - (void) setCorrectionLearningAllowed:(BOOL)a;
 - (void) setDefaultTextInputTraits:(id)a;
 - (void) responseContextDidChange;
 - (BOOL) returnKeyEnabled;
 - (BOOL) caretVisible;
 - (id) _getCurrentKeyplaneName;
 - (id) _getCurrentKeyboardName;
 - (id) _getLocalizedInputMode;
 - (void) _setAutocorrects:(BOOL)a;
 - (id) _getAutocorrection;
 - (BOOL) _hasCandidates;
 - (q) _positionInCandidateList:(id)a;
 - (void) autoAdjustOrientation;
 - (void) autoAdjustOrientationForSize:({CGSize=dd})a;
 - (id) _initWithFrame:({CGRect={CGPoint=dd}{CGSize=dd}})alazily:(BOOL)b;
 - (void) clearActivePerScreenIfNeeded;
 - (BOOL) isActivePerScreen;
 - (void) clearSnapshot;
 - (void) takeSnapshot;
 - (q) cursorLocation;
 - (BOOL) allowExternalChangeForFocusHeading:(Q)acursorLocation:(q)b;
 - (void) setCursorLocation:(q)a;
 - (BOOL) disableInteraction;
 - (void) setDisableInteraction:(BOOL)a;
 - ({UIPeripheralAnimationGeometry={CGPoint=dd}{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}{CGAffineTransform=dddddd}d}) geometryForMinimize:(BOOL)a;
 - (void) keyboardMinMaximized:(id)afinished:(id)bcontext:(id)c;
 - (void) minimize;
 - (void) maximize;
 - ({UIPeripheralAnimationGeometry={CGPoint=dd}{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}{CGAffineTransform=dddddd}d}) geometryForImplHeightDelta:(d)a;
 - (void) prepareForImplBoundsHeightChange:(d)asuppressNotification:(BOOL)b;
 - (void) implBoundsHeightChangeDone:(d)asuppressNotification:(BOOL)b;
 - (id) initWithDefaultSize;
 - (id) initLazily;
 - (BOOL) hasAutocorrectPrompt;
 - (id) defaultTextInputTraits;
 - (BOOL) typingEnabled;
 - (void) setTypingEnabled:(BOOL)a;
 - (BOOL) showPredictionBar;
 - (void) setShowPredictionBar:(BOOL)a;
 - (void) syncMinimizedStateToHardwareKeyboardAttachedState;
 - (void) _setPasscodeOutlineAlpha:(d)a;
 - (BOOL) showsCandidatesInline;
 - (void) setShowsCandidatesInline:(BOOL)a;
 - (q) keyboardIdiom;
 - (void) setKeyboardIdiom:(q)a;
 - (void) manualKeyboardWillBeOrderedIn;
 - (void) manualKeyboardWasOrderedIn;
 - (void) manualKeyboardWillBeOrderedOut;
 - (void) manualKeyboardWasOrderedOut;
 - (id) _baseKeyForRepresentedString:(id)a;
 - (id) _keyplaneForKey:(id)a;
 - (id) _keyplaneNamed:(id)a;
 - (void) _changeToKeyplane:(id)a;
 - (void) _setUndocked:(BOOL)a;
 - (void) _setSplit:(BOOL)a;
 - (id) _touchPoint:({CGPoint=dd})a;
 - (id) _typeCharacter:(id)awithError:({CGPoint=dd})bshouldTypeVariants:(BOOL)cbaseKeyForVariants:(BOOL)d;
 - (void) _setInputMode:(id)a;
 - (void) _acceptCurrentCandidate;
 - (BOOL) _isAutomaticKeyboard;
 - (id) delegate;
 - (id) initWithFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (q) interfaceOrientation;
 - (void) setFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (void) activate;
 - (void) setOrientation:(q)a;
 - (void) setBounds:({CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (void) setNeedsDisplay;
 - (void) displayLayer:(id)a;


@end
