
@protocol UITextInput_Internal, UITextInput, UITextInputAdditions;
@interface UITextInputController : NSObject <UITextInput_Internal, UITextInput, UITextInputAdditions> {

    @"<UITextInputDelegate>" _inputDelegate;
    @"_UITextKitTextRange" _selectedTextRange;
    @"_UITextInputControllerTokenizer" _tokenizer;
    @"NSLayoutManager" _layoutManager;
    @"NSHashTable" _observedScrollViews;
    @"_UITextServiceSession" _definitionSession;
    @"_UITextServiceSession" _learnSession;
    @"UITextInputTraits" _textInputTraits;
    {_NSRange="location"Q"length"Q} _markedTextRange;
    {_NSRange="location"Q"length"Q} _markedTextSelection;
    {?="delegateRespondsToTextInputShouldBeginEditing"b1"delegateRespondsToTextInputShouldChangeCharactersInRangeReplacementText"b1"delegateRespondsToTextInputDidChange"b1"delegateRespondsToTextInputDidChangeSelection"b1"delegateRespondsToTextInputWillChangeSelectionFromCharacterRangeToCharacterRange"b1"delegateRespondsToTextInputEditorDidChangeSelection"b1"delegateRespondsToTextInputPrepareAttributedTextForInsertion"b1"textOrSelectionChangeOriginatesWithKeyboard"b1"showingTextStyleOptions"b1"undoRedoInProgress"b1"textOrSelectionChangeOriginatesWithMarkedText"b1"nextSelectionChangeMustUpdate"b1"hasTextAlternatives"b1"suppressDelegateChangeNotifications"b1} _tiFlags;
    @"NSArray" _extraItemsBeforeTextStyleOptions;
    @"UIView<UITextInput>" _firstTextView;
    @"_UITextUndoManager" _undoManager;
    @"_UITextUndoOperationTyping" _undoOperationForCoalescing;
    @"UITextChecker" _textChecker;
    @"NSSet" _whitelistedTypingAttributes;
    @"_UIDictationAttachment" _dictationPlaceholder;
    BOOL _allowsEditingTextAttributes;
    BOOL _continuousSpellCheckingEnabled;
    @"NSDictionary" _emptyStringAttributes;
    @"NSDictionary" _typingAttributes;
    @"<UITextInputControllerDelegate>" _delegate;
    {_NSRange="location"Q"length"Q} _previousSelectedRange;
}
@property (nonatomic, assign, readonly, _proxyTextInput) NSNumber* __content;
@property (nonatomic, assign, readonly) NSNumber* _textSelectingContainer;
@property (nonatomic, assign, readwrite) NSNumber* selectedRange;
@property (nonatomic, assign, readwrite) NSNumber* allowsEditingTextAttributes;
@property (nonatomic, copy, readwrite) NSDictionary* typingAttributes;
@property (nonatomic, retain, readwrite) NSLayoutManager* layoutManager;
@property (nonatomic, assign, readwrite) NSNumber* delegate;
@property (nonatomic, assign, readwrite) NSNumber* continuousSpellCheckingEnabled;
@property (nonatomic, copy, readwrite, _whitelistedTypingAttributes, _setWhitelistedTypingAttributes:) NSSet* _whitelistedTypingAttributes;
@property (nonatomic, assign, readwrite) NSNumber* previousSelectedRange;
@property (nonatomic, copy, readwrite, _emptyStringAttributes, _setEmptyStringAttributes:) NSDictionary* emptyStringAttributes;
@property (nonatomic, assign, readwrite) NSNumber* autocapitalizationType;
@property (nonatomic, assign, readwrite) NSNumber* autocorrectionType;
@property (nonatomic, assign, readwrite) NSNumber* spellCheckingType;
@property (nonatomic, assign, readwrite) NSNumber* keyboardType;
@property (nonatomic, assign, readwrite) NSNumber* keyboardAppearance;
@property (nonatomic, assign, readwrite) NSNumber* returnKeyType;
@property (nonatomic, assign, readwrite) NSNumber* enablesReturnKeyAutomatically;
@property (nonatomic, assign, readwrite, isSecureTextEntry) NSNumber* secureTextEntry;
@property (atomic, copy, readwrite) UITextRange* selectedTextRange;
@property (nonatomic, assign, readonly) UITextRange* markedTextRange;
@property (nonatomic, copy, readwrite) NSDictionary* markedTextStyle;
@property (nonatomic, assign, readonly) UITextPosition* beginningOfDocument;
@property (nonatomic, assign, readonly) UITextPosition* endOfDocument;
@property (nonatomic, assign, readwrite) NSNumber* inputDelegate;
@property (nonatomic, assign, readonly) NSNumber* tokenizer;
@property (nonatomic, assign, readonly) UIView* textInputView;
@property (nonatomic, assign, readwrite) NSNumber* selectionAffinity;
@property (nonatomic, assign, readonly, isEditable) NSNumber* editable;
@property (nonatomic, assign, readonly, isEditing) NSNumber* editing;
@property (nonatomic, assign, readonly, _caretRect) NSNumber* caretRect;

 - (void) dealloc;
 - (void) forwardInvocation:(id)a;
 - (void) setDelegate:(id)a;
 - (BOOL) respondsToSelector:(SEL)a;
 - (id) methodSignatureForSelector:(SEL)a;
 - (void) increaseSize:(id)a;
 - (void) decreaseSize:(id)a;
 - (BOOL) _isDisplayingShortcutViewController;
 - (id) _parentScrollView;
 - (BOOL) isEditing;
 - (void) _performWhileSuppressingDelegateNotifications:(@?)a;
 - (id) initWithLayoutManager:(id)a;
 - (void) _textStorageDidProcessEditing:(id)a;
 - (id) interactionAssistant;
 - (id) selectionView;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _selectionClipRect;
 - (void) setTypingAttributes:(id)a;
 - (void) _invalidateEmptyStringAttributes;
 - (void) didEndEditing;
 - (id) beginningOfDocument;
 - (id) endOfDocument;
 - (id) textRangeFromPosition:(id)atoPosition:(id)b;
 - (id) textInRange:(id)a;
 - (id) inputDelegate;
 - (void) delegateWillChangeAttributedText:(id)a;
 - (void) setSelectedRange:({_NSRange=QQ})a;
 - (void) addTextAlternativesDisplayStyleToRange:({_NSRange=QQ})a;
 - (id) _filteredAttributedTextInRange:({_NSRange=QQ})a;
 - (void) setSelectedTextRange:(id)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) caretRectForPosition:(id)a;
 - (BOOL) drawsAsAtom;
 - (i) atomStyle;
 - (BOOL) hasText;
 - (void) clearText;
 - (id) _layoutManager;
 - (void) deleteBackward;
 - (void) replaceRange:(id)awithText:(id)b;
 - (void) replaceRangeWithTextWithoutClosingTyping:(id)areplacementText:(id)b;
 - (id) selectedTextRange;
 - (id) markedTextRange;
 - (id) markedTextStyle;
 - (void) setMarkedTextStyle:(id)a;
 - (void) unmarkText;
 - (id) positionFromPosition:(id)aoffset:(q)b;
 - (id) positionFromPosition:(id)ainDirection:(q)boffset:(q)c;
 - (q) comparePosition:(id)atoPosition:(id)b;
 - (q) offsetFromPosition:(id)atoPosition:(id)b;
 - (id) positionWithinRange:(id)afarthestInDirection:(q)b;
 - (id) characterRangeByExtendingPosition:(id)ainDirection:(q)b;
 - (void) setInputDelegate:(id)a;
 - (id) tokenizer;
 - (q) baseWritingDirectionForPosition:(id)ainDirection:(q)b;
 - (void) setBaseWritingDirection:(q)aforRange:(id)b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) firstRectForRange:(id)a;
 - (id) selectionRectsForRange:(id)a;
 - (id) closestPositionToPoint:({CGPoint=dd})a;
 - (id) closestPositionToPoint:({CGPoint=dd})awithinRange:(id)b;
 - (id) characterRangeAtPoint:({CGPoint=dd})a;
 - (void) insertDictationResult:(id)awithCorrectionIdentifier:(id)b;
 - (id) insertDictationResultPlaceholder;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) frameForDictationResultPlaceholder:(id)a;
 - (void) removeDictationResultPlaceholder:(id)awillInsertResult:(BOOL)b;
 - (id) rangeWithTextAlternatives:(^@)aatPosition:(id)b;
 - (id) metadataDictionariesForDictationResults;
 - (void) beginSelectionChange;
 - (void) endSelectionChange;
 - (void) _selectionGeometryChanged;
 - (id) _textStorage;
 - (BOOL) _hasDictationPlaceholder;
 - (id) textStylingAtPosition:(id)ainDirection:(q)b;
 - (void) selectAll;
 - (void) setAllowsEditingTextAttributes:(BOOL)a;
 - (BOOL) allowsEditingTextAttributes;
 - (id) _proxyTextInput;
 - (void) selectAll:(id)a;
 - (void) makeTextWritingDirectionRightToLeft:(id)a;
 - (void) makeTextWritingDirectionLeftToRight:(id)a;
 - (void) replace:(id)a;
 - (void) cut:(id)a;
 - (void) copy:(id)a;
 - (void) paste:(id)a;
 - (void) _define:(id)a;
 - (void) _addShortcut:(id)a;
 - (void) toggleBoldface:(id)a;
 - (void) toggleItalics:(id)a;
 - (void) toggleUnderline:(id)a;
 - (void) _showTextStyleOptions:(id)a;
 - (void) updateSelection;
 - (void) select:(id)a;
 - (void) _promptForReplace:(id)a;
 - (void) _transliterateChinese:(id)a;
 - (void) scrollRangeToVisible:({_NSRange=QQ})a;
 - (BOOL) _isDisplayingReferenceLibraryViewController;
 - (void) setContinuousSpellCheckingEnabled:(BOOL)a;
 - (void) _insertAttributedTextWithoutClosingTyping:(id)a;
 - (void) _expandSelectionToStartOfWordsBeforeCaretSelection:(i)a;
 - (void) _extendCurrentSelection:(i)a;
 - (void) _setCaretSelectionAtEndOfSelection;
 - (id) _moveToEndOfWord:(BOOL)awithHistory:(id)b;
 - (id) _moveToEndOfLine:(BOOL)awithHistory:(id)b;
 - (id) _moveRight:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfWord:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfLine:(BOOL)awithHistory:(id)b;
 - (id) _moveLeft:(BOOL)awithHistory:(id)b;
 - (id) _moveToEndOfParagraph:(BOOL)awithHistory:(id)b;
 - (id) _moveToEndOfDocument:(BOOL)awithHistory:(id)b;
 - (id) _moveDown:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfParagraph:(BOOL)awithHistory:(id)b;
 - (id) _moveToStartOfDocument:(BOOL)awithHistory:(id)b;
 - (id) _moveUp:(BOOL)awithHistory:(id)b;
 - (void) _deleteByWord;
 - (void) _deleteToStartOfLine;
 - (void) _deleteToEndOfLine;
 - (void) _setMarkedText:(id)aselectedRange:({_NSRange=QQ})b;
 - (void) _unmarkText;
 - (void) _setGestureRecognizers;
 - (I) _characterBeforeCaretSelection;
 - (I) _characterInRelationToRangedSelection:(i)a;
 - (void) _moveCurrentSelection:(i)a;
 - (void) _expandSelectionToBackwardDeletionCluster;
 - (void) _deleteBackwardAndNotify:(BOOL)a;
 - (void) _deleteForwardAndNotify:(BOOL)a;
 - (I) _characterInRelationToCaretSelection:(i)a;
 - (id) _wordContainingCaretSelection;
 - (I) _characterAfterCaretSelection;
 - (id) _rangeOfEnclosingWord:(id)a;
 - (id) _positionAtStartOfWords:(Q)abeforePosition:(id)b;
 - (id) _fullText;
 - (id) _rangeOfText:(id)aendingAtPosition:(id)b;
 - (void) _replaceCurrentWordWithText:(id)a;
 - (void) _selectAll;
 - (BOOL) _selectionAtDocumentStart;
 - (void) _resetShowingTextStyle:(id)a;
 - ({_NSRange=QQ}) _nsrangeForTextRange:(id)a;
 - (BOOL) _shouldPerformUICalloutBarButtonReplaceAction:(SEL)aforText:(id)bcheckAutocorrection:(BOOL)c;
 - (BOOL) _selectionAtDocumentEnd;
 - (id) _positionFromPosition:(id)ainDirection:(q)boffset:(q)cwithAffinityDownstream:(BOOL)d;
 - (void) _scrollRectToVisible:({CGRect={CGPoint=dd}{CGSize=dd}})aanimated:(BOOL)b;
 - (q) _selectionAffinity;
 - (id) _fontForCaretSelection;
 - (id) _textColorForCaretSelection;
 - (id) _firstTextView;
 - (id) _newPhraseBoundaryGestureRecognizer;
 - (BOOL) _hasMarkedText;
 - (BOOL) _usesAsynchronousProtocol;
 - (id) _selectableText;
 - (id) _fullRange;
 - (i) _indexForTextPosition:(id)a;
 - (id) _clampedpositionFromPosition:(id)aoffset:(i)b;
 - (id) _keyInput;
 - (void) _setSelectedTextRange:(id)awithAffinityDownstream:(BOOL)b;
 - (void) _updateSelectionWithTextRange:(id)awithAffinityDownstream:(BOOL)b;
 - (BOOL) _isEmptySelection;
 - (id) _setHistory:(id)awithExtending:(BOOL)bwithAnchor:(i)cwithAffinityDownstream:(BOOL)d;
 - (id) _setSelectionRangeWithHistory:(id)a;
 - (void) _setInternalGestureRecognizers;
 - (void) _phraseBoundaryGesture:(id)a;
 - (BOOL) _selectionAtWordStart;
 - (BOOL) _hasMarkedTextOrRangedSelection;
 - (void) _expandSelectionToStartOfWordBeforeCaretSelection;
 - (id) _rangeOfLineEnclosingPosition:(id)a;
 - (id) _rangeOfParagraphEnclosingPosition:(id)a;
 - (id) _findPleasingWordBoundaryFromPosition:(id)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _caretRect;
 - (id) textChecker;
 - (void) _addToTypingAttributes:(id)avalue:(id)b;
 - (void) _setWhitelistedTypingAttributes:(id)a;
 - (id) _whitelistedTypingAttributes;
 - (BOOL) _canHandleResponderAction:(SEL)a;
 - (BOOL) _shouldHandleResponderAction:(SEL)a;
 - ({_NSRange=QQ}) _rangeForBackwardsDelete;
 - (void) _insertDictationResult:(id)awithCorrectionIdentifier:(id)breplacingRange:({_NSRange=QQ})cresultLength:(^Q)d;
 - (void) _registerUndoOperationForReplacementWithActionName:(id)areplacementText:(id)b;
 - (BOOL) _mightHaveSelection;
 - (void) _removeDefinitionController;
 - (void) _clearSelectionUI;
 - (void) stopCoalescing;
 - (void) _commonInitWithLayoutManager:(id)a;
 - (void) _textContainerDidChangeView:(id)a;
 - (void) setPreviousSelectedRange:({_NSRange=QQ})a;
 - (void) _updateFirstTextView;
 - (void) _cancelDictationIfNecessaryForChangeInRange:({_NSRange=QQ})a;
 - (void) _setupTextContainerView:(id)a;
 - (void) _teardownTextContainerView:(id)a;
 - (void) _setEmptyStringAttributes:(id)a;
 - (void) _forceUnmarkTextDueToEditing;
 - (void) _ensureSelectionValid;
 - (void) _setSelectedTextRange:(id)a;
 - (void) _sendDelegateChangeNotificationsForText:(BOOL)aselection:(BOOL)b;
 - (void) _coordinateSelectionChange:(@?)a;
 - (void) _invalidateTypingAttributes;
 - (void) _setSelectedRange:({_NSRange=QQ})a;
 - (void) _sendDelegateWillChangeNotificationsForText:(BOOL)aselection:(BOOL)b;
 - (id) _newAttributedStringForInsertionOfText:(id)ainRange:({_NSRange=QQ})b;
 - ({_NSRange=QQ}) nsRangeForTextRange:(id)a;
 - (void) registerUndoOperationForType:(i)aactionName:(id)baffectedRange:({_NSRange=QQ})creplacementText:(id)d;
 - (void) _insertText:(id)afromKeyboard:(BOOL)b;
 - (void) checkSpellingForSelectionChangeIfNecessary;
 - (void) removeAlternativesForCurrentWord;
 - (void) _insertAttributedText:(id)afromKeyboard:(BOOL)b;
 - (void) removeSpellingMarkersForCurrentWord;
 - (void) removeSpellingMarkersFromWordInRange:(id)a;
 - (BOOL) continuousSpellCheckingEnabled;
 - ({_NSRange=QQ}) previousSelectedRange;
 - (void) checkSpellingForWordInRange:(id)a;
 - (BOOL) _shouldConsiderTextViewForGeometry:(id)a;
 - (Q) _validCaretPositionFromCharacterIndex:(Q)adownstream:(BOOL)b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _caretRectForOffset:(Q)a;
 - (id) _rectsForRange:({_NSRange=QQ})a;
 - (id) _characterPositionForPoint:({CGPoint=dd})a;
 - (id) _attributesForReplacementInRange:({_NSRange=QQ})a;
 - (id) _emptyStringAttributes;
 - (id) _fixupTypingAttributeForAttributes:(id)a;
 - (void) _undoManagerWillUndo:(id)a;
 - (BOOL) isCoalescing;
 - (BOOL) _undoRedoInProgress;
 - (void) coalesceInTextView:(id)aaffectedRange:({_NSRange=QQ})breplacementRange:({_NSRange=QQ})c;
 - (id) textRangeForNSRange:({_NSRange=QQ})a;
 - (id) _selectedText;
 - (void) removeTextStylingFromString:(id)a;
 - (void) _copySelectionToClipboard;
 - (BOOL) _delegateShouldChangeTextInRange:({_NSRange=QQ})areplacementText:(id)b;
 - (void) _removeShortcutController;
 - (void) _toggleFontTrait:(i)a;
 - (void) _selectionDidScroll:(id)a;
 - (void) preheatTextChecker;
 - (void) _ensureSelectionVisible;
 - (void) undoWillChangeText;
 - (void) undoDidChangeText;
 - (void) _setUndoRedoInProgress:(BOOL)a;
 - (void) changeWillBeUndone:(id)a;
 - (id) _selectedAttributedText;
 - (BOOL) _isSecureTextEntry;
 - (id) delegate;
 - (q) selectionAffinity;
 - (id) layoutManager;
 - ({_NSRange=QQ}) markedRange;
 - (void) setLayoutManager:(id)a;
 - (id) typingAttributes;
 - ({_NSRange=QQ}) selectedRange;
 - (BOOL) isEditable;
 - (id) undoManager;
 - ({_NSRange=QQ}) _selectedNSRange;
 - (void) setMarkedText:(id)aselectedRange:({_NSRange=QQ})b;
 - ({_NSRange=QQ}) _selectedRange;
 - (void) insertText:(id)a;


@end
