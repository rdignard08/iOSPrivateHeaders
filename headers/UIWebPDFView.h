
@protocol UIPDFPageViewDelegate, UIPDFAnnotationControllerDelegate, WebPDFViewPlaceholderDelegate, UIPopoverControllerDelegate, UIGestureRecognizerDelegate;
@interface UIWebPDFView : UIView <UIPDFPageViewDelegate, UIPDFAnnotationControllerDelegate, WebPDFViewPlaceholderDelegate, UIPopoverControllerDelegate, UIGestureRecognizerDelegate> {

    @"NSMutableArray" _backingLayerImageViews;
    ^{CGPDFDocument=} _cgPDFDocument;
    @"UIPDFDocument" _document;
    BOOL _hasScheduledCacheUpdate;
    {CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}} _documentBounds;
    @"NSObject<UIWebPDFViewDelegate>" _pdfDelegate;
    BOOL _delegateRespondsToDidScroll;
    @"UITapGestureRecognizer" _tapGestureRecognizer;
    @"NSURL" _documentURL;
    BOOL _rotating;
    BOOL _zooming;
    d _initialZoomScale;
    {CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d} _documentTransform;
    d _documentScale;
    q _ignoreContentOffsetChanges;
    {CGPoint="x"d"y"d} _contentOffsetAtScrollStart;
    @"NSMutableArray" _pageViews;
    @"NSArray" _pageMinYs;
    BOOL hidePageViewsUntilReadyToRender;
    BOOL hideActivityIndicatorForUnRenderedContent;
    BOOL readyForSnapshot;
    @"WebPDFViewPlaceholder" pdfPlaceHolderView;
    @"UIColor" backgroundColorForUnRenderedContent;
    @"NSString" documentPassword;
    @"NSArray" pageRects;
}
 + (void) initialize;
 + (void) setAsPDFDocRepAndView;

 - (void) observeValueForKeyPath:(id)aofObject:(id)bchange:(id)ccontext:(^v)d;
 - (id) documentURL;
 - (void) dealloc;
 - (BOOL) gestureRecognizerShouldBegin:(id)a;
 - (BOOL) canPerformAction:(SEL)awithSender:(id)b;
 - (void) _didScroll;
 - (void) _define:(id)a;
 - (void) clearSelection;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) documentBounds;
 - (Q) totalPages;
 - (void) didReceiveMemoryWarning:(id)a;
 - (void) willRotate:(id)a;
 - (void) didRotate:(id)a;
 - (id) _selection;
 - (id) uiPDFDocument;
 - (void) setBackgroundColorForUnRenderedContent:(id)a;
 - (void) setPdfPlaceHolderView:(id)a;
 - (id) pdfPlaceHolderView;
 - (void) _tapGestureRecognized:(id)a;
 - (void) willZoom:(id)a;
 - (void) didZoom:(id)a;
 - (void) willScroll:(id)a;
 - (void) setPageMinYs:(id)a;
 - (void) setDocumentURL:(id)a;
 - (void) setDocumentPassword:(id)a;
 - (void) _removeBackgroundImageObserverIfNeeded:(id)a;
 - (id) viewportView;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _viewportBoundsInUIVIewCoordsWithView:(id)a;
 - (void) setReadyForSnapshot:(BOOL)a;
 - (id) viewAtIndex:(q)a;
 - (id) _installViewAtIndex:(q)ainFrame:({CGRect={CGPoint=dd}{CGSize=dd}})b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _viewCachingBoundsInUIViewCoords;
 - (void) _removePageViewsNotInViewCoordsRect:({CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (void) _removePageViewsNotInCurrentViewCoordsRect;
 - (void) _addSubViewsInViewCoordsBounds:({CGRect={CGPoint=dd}{CGSize=dd}})aforce:(BOOL)b;
 - (void) _scheduleRemovePageViewsNotInViewCoordsRect;
 - (void) ensureCorrectPagesAreInstalled:(BOOL)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _viewportBoundsInUIViewCoords;
 - (void) _recreateUIPDFDocument;
 - (id) documentPassword;
 - (BOOL) _checkIfDocumentNeedsUnlock;
 - (void) resetZoom:(id)a;
 - (void) _didTouch:(id)ainRect:({CGRect={CGPoint=dd}{CGSize=dd}})batPoint:({CGPoint=dd})clinkingToURL:(id)d;
 - (void) _didTouch:(id)ainRect:({CGRect={CGPoint=dd}{CGSize=dd}})batPoint:({CGPoint=dd})clinkingToPageIndex:(Q)d;
 - (void) _didLongPress:(id)ainRect:({CGRect={CGPoint=dd}{CGSize=dd}})batPoint:({CGPoint=dd})clinkingToURL:(id)d;
 - (void) _didLongPress:(id)ainRect:({CGRect={CGPoint=dd}{CGSize=dd}})batPoint:({CGPoint=dd})clinkingToPageIndex:(Q)d;
 - (id) _pageWithSelection;
 - (Q) _pageNumberForRect:({CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (void) zoom:(id)ato:({CGRect={CGPoint=dd}{CGSize=dd}})batPoint:({CGPoint=dd})ckind:(i)d;
 - (void) annotation:(id)awasTouchedAtPoint:({CGPoint=dd})bcontroller:(id)c;
 - (void) annotation:(id)aisBeingPressedAtPoint:({CGPoint=dd})bcontroller:(id)c;
 - (void) setIgnoreContentOffsetChanges:(q)a;
 - (void) setPdfDelegate:(id)a;
 - (BOOL) _hasPageRects;
 - (id) documentData;
 - (id) initWithWebPDFViewPlaceholder:(id)a;
 - (id) _addPageAtIndex:(Q)a;
 - (Q) firstVisiblePageNumber;
 - (void) prepareForSnapshot:(BOOL)a;
 - (void) snapshotComplete;
 - (BOOL) _tryToUnlockDocumentWithPassword:(id)a;
 - (id) imageForContactRect:({CGRect={CGPoint=dd}{CGSize=dd}})aonPageInViewRect:({CGRect={CGPoint=dd}{CGSize=dd}})bdestinationRect:({CGRect={CGPoint=dd}{CGSize=dd}})c;
 - (id) pdfDelegate;
 - (d) initialZoomScale;
 - (void) setInitialZoomScale:(d)a;
 - ({CGAffineTransform=dddddd}) documentTransform;
 - (void) setDocumentTransform:({CGAffineTransform=dddddd})a;
 - (d) documentScale;
 - (q) ignoreContentOffsetChanges;
 - (BOOL) hidePageViewsUntilReadyToRender;
 - (void) setHidePageViewsUntilReadyToRender:(BOOL)a;
 - (id) backgroundColorForUnRenderedContent;
 - (BOOL) hideActivityIndicatorForUnRenderedContent;
 - (void) setHideActivityIndicatorForUnRenderedContent:(BOOL)a;
 - (BOOL) readyForSnapshot;
 - (id) pageMinYs;
 - (^{CGPDFDocument=}) cgPDFDocument;
 - (id) document;
 - (void) viewWillClose;
 - (void) setPageRects:(id)a;
 - (void) didCompleteLayout;
 - (id) pageRects;


@end
