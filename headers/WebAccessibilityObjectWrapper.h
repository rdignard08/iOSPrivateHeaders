
@interface WebAccessibilityObjectWrapper : WebAccessibilityObjectWrapperBase {

    int m_isAccessibilityElement;
    unsigned long long m_accessibilityTraitsFromAncestor;
}

 - (void) dealloc;
 - (id) accessibilityIdentifier;
 - (id) stringForRange:({_NSRange=QQ})a ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) accessibilityFrame;
 - (id) accessibilityHint;
 - ({CGPoint=dd}) accessibilityActivationPoint;
 - (unsigned long long) accessibilityTraits;
 - (id) accessibilityLanguage;
 - (void) accessibilityElementDidBecomeFocused;
 - (void) accessibilityIncrement;
 - (void) accessibilityDecrement;
 - (BOOL) accessibilityScroll:(long long)a ;
 - (id) accessibilityFocusedUIElement;
 - (id) accessibilityHitTest:({CGPoint=dd})a ;
 - (id) _accessibilityParentForSubview:(id)a ;
 - (id) attachmentView;
 - (void) detach;
 - (id) initWithAccessibilityObject:(^{AccessibilityObject=^^?II{Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow>=^{RefPtr<WebCore::AccessibilityObject>}II}Bii{RetainPtr<WebAccessibilityObjectWrapper>=^v}})a ;
 - (void) postFocusChangeNotification;
 - (void) postSelectedTextChangeNotification;
 - (void) postLayoutChangeNotification;
 - (void) postLiveRegionChangeNotification;
 - (void) postLiveRegionCreatedNotification;
 - (void) postChildrenChangedNotification;
 - (void) postLoadCompleteNotification;
 - (void) postInvalidStatusChangedNotification;
 - (void) postValueChangedNotification;
 - (void) accessibilityPostedNotification:(id)a ;
 - (BOOL) fileUploadButtonReturnsValueInTitle;
 - (id) accessibilityPlatformMathSubscriptKey;
 - (id) accessibilityPlatformMathSuperscriptKey;
 - ({CGPoint=dd}) convertPointToScreenSpace:(^{FloatPoint=ff})a ;
 - (BOOL) _prepareAccessibilityCall;
 - (BOOL) accessibilityCanFuzzyHitTest;
 - (^{WebAccessibilityObjectWrapper=#^{AccessibilityObject}iQ}) accessibilityPostProcessHitTest:({CGPoint=dd})a ;
 - (BOOL) isAttachment;
 - (long long) accessibilityElementCount;
 - (id) accessibilityElementAtIndex:(long long)a ;
 - (long long) indexOfAccessibilityElement:(id)a ;
 - (BOOL) _accessibilityIsLandmarkRole:(int)a ;
 - (unsigned long long) _axLinkTrait;
 - (unsigned long long) _axVisitedTrait;
 - (unsigned long long) _axHeaderTrait;
 - (id) accessibilityValue;
 - (unsigned long long) _axContainedByListTrait;
 - (unsigned long long) _axContainedByTableTrait;
 - (unsigned long long) _axContainedByLandmarkTrait;
 - (unsigned long long) _axWebContentTrait;
 - (unsigned long long) _axSecureTextFieldTrait;
 - (unsigned long long) _axTextEntryTrait;
 - (unsigned long long) _axHasTextCursorTrait;
 - (unsigned long long) _axTextOperationsAvailableTrait;
 - (unsigned long long) _axImageTrait;
 - (unsigned long long) _axTabButtonTrait;
 - (unsigned long long) _axButtonTrait;
 - (unsigned long long) _axToggleTrait;
 - (unsigned long long) _axPopupButtonTrait;
 - (unsigned long long) _axRadioButtonTrait;
 - (unsigned long long) _axStaticTextTrait;
 - (unsigned long long) _axAdjustableTrait;
 - (unsigned long long) _axMenuItemTrait;
 - (unsigned long long) _axSelectedTrait;
 - (unsigned long long) _axNotEnabledTrait;
 - (unsigned long long) _accessibilityTraitsFromAncestors;
 - (id) accessibilityLabel;
 - (BOOL) isAccessibilityElement;
 - (id) accessibilityContainer;
 - (BOOL) containsUnnaturallySegmentedChildren;
 - (BOOL) isSVGGroupElement;
 - (BOOL) determineIsAccessibilityElement;
 - (BOOL) stringValueShouldBeUsedInLabel;
 - (^{AccessibilityTableCell=^^?II{Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow>=^{RefPtr<WebCore::AccessibilityObject>}II}Bii{RetainPtr<WebAccessibilityObjectWrapper>=^v}iBi^{Node}^{RenderObject}i}) tableCellParent;
 - (^{AccessibilityTable=^^?II{Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow>=^{RefPtr<WebCore::AccessibilityObject>}II}Bii{RetainPtr<WebAccessibilityObjectWrapper>=^v}iBi^{Node}^{RenderObject}{Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow>=^{RefPtr<WebCore::AccessibilityObject>}II}{Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow>=^{RefPtr<WebCore::AccessibilityObject>}II}{RefPtr<WebCore::AccessibilityObject>=^{AccessibilityObject}}B}) tableParent;
 - (void) postScrollStatusChangeNotification;
 - (id) _accessibilityWebDocumentView;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) convertRectToScreenSpace:(^{IntRect={IntPoint=ii}{IntSize=ii}})a ;
 - (id) _accessibilityNextElementsWithCount:(unsigned int)a ;
 - (id) _accessibilityPreviousElementsWithCount:(unsigned int)a ;
 - (void) accessibilityModifySelection:(int)a increase:(BOOL)b ;
 - (BOOL) _addAccessibilityObject:(^{AccessibilityObject=^^?II{Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow>=^{RefPtr<WebCore::AccessibilityObject>}II}Bii{RetainPtr<WebAccessibilityObjectWrapper>=^v}})a toTextMarkerArray:(id)b ;
 - ({_NSRange=QQ}) _convertToNSRange:(^{Range=I{Ref<WebCore::Document>=^{Document}}{RangeBoundaryPoint={RefPtr<WebCore::Node>=^{Node}}i{RefPtr<WebCore::Node>=^{Node}}}{RangeBoundaryPoint={RefPtr<WebCore::Node>=^{Node}}i{RefPtr<WebCore::Node>=^{Node}}}})a ;
 - (id) textMarkerRange;
 - (long long) positionForTextMarker:(id)a ;
 - ({PassRefPtr<WebCore::Range>=^{Range}}) _convertToDOMRange:({_NSRange=QQ})a ;
 - (id) textMarkerForPosition:(long long)a ;
 - (id) arrayOfTextForTextMarkers:(id)a attributed:(BOOL)b ;
 - (id) _stringForRange:({_NSRange=QQ})a attributed:(BOOL)b ;
 - (id) textMarkerRangeForSelection;
 - (id) stringForTextMarkers:(id)a ;
 - (void) enableAttributeCaching;
 - (void) disableAttributeCaching;
 - (^{CGPath=}) _accessibilityPath;
 - (^{WebAccessibilityObjectWrapper=#^{AccessibilityObject}iQ}) _accessibilityListAncestor;
 - (^{WebAccessibilityObjectWrapper=#^{AccessibilityObject}iQ}) _accessibilityLandmarkAncestor;
 - (^{WebAccessibilityObjectWrapper=#^{AccessibilityObject}iQ}) _accessibilityTableAncestor;
 - (double) _accessibilityMinValue;
 - (double) _accessibilityMaxValue;
 - (id) accessibilityTitleElement;
 - (id) accessibilityHeaderElements;
 - (id) accessibilityElementForRow:(long long)a andColumn:(long long)b ;
 - ({_NSRange=QQ}) accessibilityRowRange;
 - ({_NSRange=QQ}) accessibilityColumnRange;
 - (id) accessibilityPlaceholderValue;
 - (BOOL) accessibilityIsComboBox;
 - (id) accessibilityURL;
 - ({CGPoint=dd}) _accessibilityConvertPointToViewSpace:({CGPoint=dd})a ;
 - (BOOL) _accessibilityScrollToVisible;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) accessibilityElementRect;
 - (BOOL) accessibilityRequired;
 - (id) accessibilityFlowToElements;
 - (id) accessibilityLinkedElement;
 - (void) _accessibilityActivate;
 - ({CGPoint=dd}) _accessibilityScrollPosition;
 - ({CGSize=dd}) _accessibilityScrollSize;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _accessibilityScrollVisibleRect;
 - (void) accessibilityIncreaseSelection:(int)a ;
 - (void) accessibilityDecreaseSelection:(int)a ;
 - (void) accessibilityMoveSelectionToMarker:(id)a ;
 - (void) _accessibilitySetValue:(id)a ;
 - ({_NSRange=QQ}) elementTextRange;
 - (^{WebAccessibilityObjectWrapper=#^{AccessibilityObject}iQ}) accessibilityObjectForTextMarker:(id)a ;
 - (id) attributedStringForRange:({_NSRange=QQ})a ;
 - ({_NSRange=QQ}) _accessibilitySelectedTextRange;
 - (void) _accessibilitySetSelectedTextRange:({_NSRange=QQ})a ;
 - (id) elementsForRange:({_NSRange=QQ})a ;
 - (id) selectionRangeString;
 - (id) selectedTextMarker;
 - (id) lineEndMarkerForMarker:(id)a ;
 - (id) lineStartMarkerForMarker:(id)a ;
 - (id) nextMarkerForMarker:(id)a ;
 - (id) previousMarkerForMarker:(id)a ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) frameForTextMarkers:(id)a ;
 - (id) textMarkerForPoint:({CGPoint=dd})a ;
 - (id) accessibilitySpeechHint;
 - (BOOL) accessibilityARIAIsBusy;
 - (id) accessibilityARIALiveRegionStatus;
 - (id) accessibilityARIARelevantStatus;
 - (BOOL) accessibilityARIALiveRegionIsAtomic;
 - (BOOL) accessibilitySupportsARIAExpanded;
 - (BOOL) accessibilityIsExpanded;
 - (id) accessibilityInvalidStatus;
 - (id) accessibilityMathRootIndexObject;
 - (id) accessibilityMathRadicandObject;
 - (id) accessibilityMathNumeratorObject;
 - (id) accessibilityMathDenominatorObject;
 - (id) accessibilityMathBaseObject;
 - (id) accessibilityMathSubscriptObject;
 - (id) accessibilityMathSuperscriptObject;
 - (id) accessibilityMathUnderObject;
 - (id) accessibilityMathOverObject;
 - (id) accessibilityMathPostscripts;
 - (id) accessibilityMathPrescripts;
 - (id) accessibilityMathFencedOpenString;
 - (id) accessibilityMathFencedCloseString;
 - (BOOL) accessibilityIsMathTopObject;
 - (long long) accessibilityMathLineThickness;
 - (id) accessibilityMathType;
 - ({CGPoint=dd}) accessibilityClickPoint;
 - (void) accessibilitySetPostedNotificationCallback:(^?)a withContext:(^v)b ;


@end
