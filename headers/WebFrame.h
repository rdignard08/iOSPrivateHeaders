
@interface WebFrame : NSObject {

    WebFramePrivate* _private;
}
@property (nonatomic, copy, readonly) NSString* name;
@property (nonatomic, assign, readonly) WebView* webView;
@property (nonatomic, assign, readonly) WebFrameView* frameView;
@property (nonatomic, assign, readonly) DOMDocument* DOMDocument;
@property (nonatomic, assign, readonly) DOMHTMLElement* frameElement;
@property (nonatomic, assign, readonly) WebDataSource* dataSource;
@property (nonatomic, assign, readonly) WebDataSource* provisionalDataSource;
@property (nonatomic, assign, readonly) WebFrame* parentFrame;
@property (nonatomic, copy, readonly) NSArray* childFrames;
@property (nonatomic, assign, readonly) WebScriptObject* windowObject;
@property (nonatomic, assign, readonly) NSNumber* globalContext;
@property (nonatomic, assign, readonly) JSContext* javaScriptContext;
 + ({PassRefPtr<WebCore::Frame>=^{Frame}}) _createFrameWithPage:(^{Page={HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >={HashTable<const char *, WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >, WTF::PtrHash<const char *>, WTF::HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >::KeyValuePairTraits, WTF::HashTraits<const char *> >=^{KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >}iiii}}{unique_ptr<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >={__compressed_pair<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > *, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >=^{HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >}}}{unique_ptr<WebCore::Chrome, std::__1::default_delete<WebCore::Chrome> >={__compressed_pair<WebCore::Chrome *, std::__1::default_delete<WebCore::Chrome> >=^{Chrome}}}{unique_ptr<WebCore::DragCaretController, std::__1::default_delete<WebCore::DragCaretController> >={__compressed_pair<WebCore::DragCaretController *, std::__1::default_delete<WebCore::DragCaretController> >=^{DragCaretController}}}{unique_ptr<WebCore::FocusController, std::__1::default_delete<WebCore::FocusController> >={__compressed_pair<WebCore::FocusController *, std::__1::default_delete<WebCore::FocusController> >=^{FocusController}}}{unique_ptr<WebCore::UserInputBridge, std::__1::default_delete<WebCore::UserInputBridge> >={__compressed_pair<WebCore::UserInputBridge *, std::__1::default_delete<WebCore::UserInputBridge> >=^{UserInputBridge}}}{unique_ptr<WebCore::InspectorController, std::__1::default_delete<WebCore::InspectorController> >={__compressed_pair<WebCore::InspectorController *, std::__1::default_delete<WebCore::InspectorController> >=^{InspectorController}}}{RefPtr<WebCore::ScrollingCoordinator>=^{ScrollingCoordinator}}{RefPtr<WebCore::Settings>=^{Settings}}{unique_ptr<WebCore::ProgressTracker, std::__1::default_delete<WebCore::ProgressTracker> >={__compressed_pair<WebCore::ProgressTracker *, std::__1::default_delete<WebCore::ProgressTracker> >=^{ProgressTracker}}}{unique_ptr<WebCore::BackForwardController, std::__1::default_delete<WebCore::BackForwardController> >={__compressed_pair<WebCore::BackForwardController *, std::__1::default_delete<WebCore::BackForwardController> >=^{BackForwardController}}}{RefPtr<WebCore::MainFrame>=^{MainFrame}}{RefPtr<WebCore::PluginData>=^{PluginData}}{RefPtr<WebCore::RenderTheme>=^{RenderTheme}}^{EditorClient}^{PlugInClient}^{ValidationMessageClient}i{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}BBBIBBffffffBb2b2{Pagination=iBII}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}Bq{unique_ptr<WebCore::PageGroup, std::__1::default_delete<WebCore::PageGroup> >={__compressed_pair<WebCore::PageGroup *, std::__1::default_delete<WebCore::PageGroup> >=^{PageGroup}}}^{PageGroup}^{Debugger}B{RefPtr<WebCore::StorageNamespace>=^{StorageNamespace}}dBdBBIIii{HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >={HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >=^^{RenderObject}iiii}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}B^{AlternativeTextClient}B{unique_ptr<WebCore::PageThrottler, std::__1::default_delete<WebCore::PageThrottler> >={__compressed_pair<WebCore::PageThrottler *, std::__1::default_delete<WebCore::PageThrottler> >=^{PageThrottler}}}{unique_ptr<WebCore::PageConsole, std::__1::default_delete<WebCore::PageConsole> >={__compressed_pair<WebCore::PageConsole *, std::__1::default_delete<WebCore::PageConsole> >=^{PageConsole}}}{unique_ptr<WebCore::PageDebuggable, std::__1::default_delete<WebCore::PageDebuggable> >={__compressed_pair<WebCore::PageDebuggable *, std::__1::default_delete<WebCore::PageDebuggable> >=^{PageDebuggable}}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}II{RefPtr<WebCore::UserContentController>=^{UserContentController}}{RefPtr<WebCore::VisitedLinkStore>=^{VisitedLinkStore}}{HashSet<WebCore::ViewStateChangeObserver *, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >={HashTable<WebCore::ViewStateChangeObserver *, WebCore::ViewStateChangeObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >=^^{ViewStateChangeObserver}iiii}}{SessionID=Q}B})aframeName:(r^{String={RefPtr<WTF::StringImpl>=^{StringImpl}}})bframeView:(id)cownerElement:(^{HTMLFrameOwnerElement=^^?{Weak<WebCore::JSDOMWrapper>=^{WeakImpl}}iI^{ContainerNode}^{TreeScope}^{Node}^{Node}(DataUnion=^{RenderObject}^{NodeRareDataBase})^{Node}^{Node}{QualifiedName={RefPtr<WebCore::QualifiedName::QualifiedNameImpl>=^{QualifiedNameImpl}}}{RefPtr<WebCore::ElementData>=^{ElementData}}^{Frame}i})d;
 + (void) _createMainFrameWithPage:(^{Page={HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >={HashTable<const char *, WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >, WTF::PtrHash<const char *>, WTF::HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >::KeyValuePairTraits, WTF::HashTraits<const char *> >=^{KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >}iiii}}{unique_ptr<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >={__compressed_pair<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > *, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >=^{HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >}}}{unique_ptr<WebCore::Chrome, std::__1::default_delete<WebCore::Chrome> >={__compressed_pair<WebCore::Chrome *, std::__1::default_delete<WebCore::Chrome> >=^{Chrome}}}{unique_ptr<WebCore::DragCaretController, std::__1::default_delete<WebCore::DragCaretController> >={__compressed_pair<WebCore::DragCaretController *, std::__1::default_delete<WebCore::DragCaretController> >=^{DragCaretController}}}{unique_ptr<WebCore::FocusController, std::__1::default_delete<WebCore::FocusController> >={__compressed_pair<WebCore::FocusController *, std::__1::default_delete<WebCore::FocusController> >=^{FocusController}}}{unique_ptr<WebCore::UserInputBridge, std::__1::default_delete<WebCore::UserInputBridge> >={__compressed_pair<WebCore::UserInputBridge *, std::__1::default_delete<WebCore::UserInputBridge> >=^{UserInputBridge}}}{unique_ptr<WebCore::InspectorController, std::__1::default_delete<WebCore::InspectorController> >={__compressed_pair<WebCore::InspectorController *, std::__1::default_delete<WebCore::InspectorController> >=^{InspectorController}}}{RefPtr<WebCore::ScrollingCoordinator>=^{ScrollingCoordinator}}{RefPtr<WebCore::Settings>=^{Settings}}{unique_ptr<WebCore::ProgressTracker, std::__1::default_delete<WebCore::ProgressTracker> >={__compressed_pair<WebCore::ProgressTracker *, std::__1::default_delete<WebCore::ProgressTracker> >=^{ProgressTracker}}}{unique_ptr<WebCore::BackForwardController, std::__1::default_delete<WebCore::BackForwardController> >={__compressed_pair<WebCore::BackForwardController *, std::__1::default_delete<WebCore::BackForwardController> >=^{BackForwardController}}}{RefPtr<WebCore::MainFrame>=^{MainFrame}}{RefPtr<WebCore::PluginData>=^{PluginData}}{RefPtr<WebCore::RenderTheme>=^{RenderTheme}}^{EditorClient}^{PlugInClient}^{ValidationMessageClient}i{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}BBBIBBffffffBb2b2{Pagination=iBII}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}Bq{unique_ptr<WebCore::PageGroup, std::__1::default_delete<WebCore::PageGroup> >={__compressed_pair<WebCore::PageGroup *, std::__1::default_delete<WebCore::PageGroup> >=^{PageGroup}}}^{PageGroup}^{Debugger}B{RefPtr<WebCore::StorageNamespace>=^{StorageNamespace}}dBdBBIIii{HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >={HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >=^^{RenderObject}iiii}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}B^{AlternativeTextClient}B{unique_ptr<WebCore::PageThrottler, std::__1::default_delete<WebCore::PageThrottler> >={__compressed_pair<WebCore::PageThrottler *, std::__1::default_delete<WebCore::PageThrottler> >=^{PageThrottler}}}{unique_ptr<WebCore::PageConsole, std::__1::default_delete<WebCore::PageConsole> >={__compressed_pair<WebCore::PageConsole *, std::__1::default_delete<WebCore::PageConsole> >=^{PageConsole}}}{unique_ptr<WebCore::PageDebuggable, std::__1::default_delete<WebCore::PageDebuggable> >={__compressed_pair<WebCore::PageDebuggable *, std::__1::default_delete<WebCore::PageDebuggable> >=^{PageDebuggable}}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}II{RefPtr<WebCore::UserContentController>=^{UserContentController}}{RefPtr<WebCore::VisitedLinkStore>=^{VisitedLinkStore}}{HashSet<WebCore::ViewStateChangeObserver *, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >={HashTable<WebCore::ViewStateChangeObserver *, WebCore::ViewStateChangeObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >=^^{ViewStateChangeObserver}iiii}}{SessionID=Q}B})aframeName:(r^{String={RefPtr<WTF::StringImpl>=^{StringImpl}}})bframeView:(id)c;
 + ({PassRefPtr<WebCore::Frame>=^{Frame}}) _createSubframeWithOwnerElement:(^{HTMLFrameOwnerElement=^^?{Weak<WebCore::JSDOMWrapper>=^{WeakImpl}}iI^{ContainerNode}^{TreeScope}^{Node}^{Node}(DataUnion=^{RenderObject}^{NodeRareDataBase})^{Node}^{Node}{QualifiedName={RefPtr<WebCore::QualifiedName::QualifiedNameImpl>=^{QualifiedNameImpl}}}{RefPtr<WebCore::ElementData>=^{ElementData}}^{Frame}i})aframeName:(r^{String={RefPtr<WTF::StringImpl>=^{StringImpl}}})bframeView:(id)c;
 + (void) _createMainFrameWithSimpleHTMLDocumentWithPage:(^{Page={HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >={HashTable<const char *, WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >, WTF::PtrHash<const char *>, WTF::HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >::KeyValuePairTraits, WTF::HashTraits<const char *> >=^{KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >}iiii}}{unique_ptr<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >={__compressed_pair<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > *, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >=^{HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >}}}{unique_ptr<WebCore::Chrome, std::__1::default_delete<WebCore::Chrome> >={__compressed_pair<WebCore::Chrome *, std::__1::default_delete<WebCore::Chrome> >=^{Chrome}}}{unique_ptr<WebCore::DragCaretController, std::__1::default_delete<WebCore::DragCaretController> >={__compressed_pair<WebCore::DragCaretController *, std::__1::default_delete<WebCore::DragCaretController> >=^{DragCaretController}}}{unique_ptr<WebCore::FocusController, std::__1::default_delete<WebCore::FocusController> >={__compressed_pair<WebCore::FocusController *, std::__1::default_delete<WebCore::FocusController> >=^{FocusController}}}{unique_ptr<WebCore::UserInputBridge, std::__1::default_delete<WebCore::UserInputBridge> >={__compressed_pair<WebCore::UserInputBridge *, std::__1::default_delete<WebCore::UserInputBridge> >=^{UserInputBridge}}}{unique_ptr<WebCore::InspectorController, std::__1::default_delete<WebCore::InspectorController> >={__compressed_pair<WebCore::InspectorController *, std::__1::default_delete<WebCore::InspectorController> >=^{InspectorController}}}{RefPtr<WebCore::ScrollingCoordinator>=^{ScrollingCoordinator}}{RefPtr<WebCore::Settings>=^{Settings}}{unique_ptr<WebCore::ProgressTracker, std::__1::default_delete<WebCore::ProgressTracker> >={__compressed_pair<WebCore::ProgressTracker *, std::__1::default_delete<WebCore::ProgressTracker> >=^{ProgressTracker}}}{unique_ptr<WebCore::BackForwardController, std::__1::default_delete<WebCore::BackForwardController> >={__compressed_pair<WebCore::BackForwardController *, std::__1::default_delete<WebCore::BackForwardController> >=^{BackForwardController}}}{RefPtr<WebCore::MainFrame>=^{MainFrame}}{RefPtr<WebCore::PluginData>=^{PluginData}}{RefPtr<WebCore::RenderTheme>=^{RenderTheme}}^{EditorClient}^{PlugInClient}^{ValidationMessageClient}i{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}BBBIBBffffffBb2b2{Pagination=iBII}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}Bq{unique_ptr<WebCore::PageGroup, std::__1::default_delete<WebCore::PageGroup> >={__compressed_pair<WebCore::PageGroup *, std::__1::default_delete<WebCore::PageGroup> >=^{PageGroup}}}^{PageGroup}^{Debugger}B{RefPtr<WebCore::StorageNamespace>=^{StorageNamespace}}dBdBBIIii{HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >={HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >=^^{RenderObject}iiii}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}B^{AlternativeTextClient}B{unique_ptr<WebCore::PageThrottler, std::__1::default_delete<WebCore::PageThrottler> >={__compressed_pair<WebCore::PageThrottler *, std::__1::default_delete<WebCore::PageThrottler> >=^{PageThrottler}}}{unique_ptr<WebCore::PageConsole, std::__1::default_delete<WebCore::PageConsole> >={__compressed_pair<WebCore::PageConsole *, std::__1::default_delete<WebCore::PageConsole> >=^{PageConsole}}}{unique_ptr<WebCore::PageDebuggable, std::__1::default_delete<WebCore::PageDebuggable> >={__compressed_pair<WebCore::PageDebuggable *, std::__1::default_delete<WebCore::PageDebuggable> >=^{PageDebuggable}}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}II{RefPtr<WebCore::UserContentController>=^{UserContentController}}{RefPtr<WebCore::VisitedLinkStore>=^{VisitedLinkStore}}{HashSet<WebCore::ViewStateChangeObserver *, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >={HashTable<WebCore::ViewStateChangeObserver *, WebCore::ViewStateChangeObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >=^^{ViewStateChangeObserver}iiii}}{SessionID=Q}B})aframeView:(id)bstyle:(id)c;
 + (id) stringWithData:(id)atextEncodingName:(id)b;

 - (Vv) release;
 - (Vv) _webcore_releaseOnWebThread;
 - (BOOL) containsOnlySelectableElements;
 - (BOOL) isTexty;
 - (BOOL) isMainFrame;
 - (void) dealloc;
 - (void) finalize;
 - (id) name;
 - (void) _handleKeyEvent:(id)a;
 - (BOOL) needsLayout;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) caretRectForPosition:(id)a;
 - (id) selectionRectsForRange:(id)a;
 - (id) characterRangeAtPoint:({CGPoint=dd})a;
 - (void) _setSelectionFromNone;
 - (void) updateLayout;
 - (void) setSelectionChangeCallbacksDisabled:(BOOL)a;
 - (void) setDictationPhrases:(id)ametadata:(id)basChildOfElement:(id)c;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) rectForScrollToVisible;
 - (id) convertNSRangeToDOMRange:({_NSRange=QQ})a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) caretRectAtNode:(id)aoffset:(int)baffinity:(int)c;
 - (void) setText:(id)aasChildOfElement:(id)b;
 - (void) setSelectedDOMRange:(id)aaffinity:(int)bcloseTyping:(BOOL)c;
 - (void) setIsActive:(BOOL)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) firstRectForDOMRange:(id)a;
 - (void) setSelectionGranularity:(int)a;
 - (void) clearSelection;
 - (void) collapseSelection;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) caretRect;
 - (void) _selectAll;
 - (void) confirmMarkedText:(id)a;
 - (unsigned short) characterInRelationToCaretSelection:(int)a;
 - (unsigned short) characterAfterCaretSelection;
 - (id) nextUnperturbedDictationResultBoundaryFromPosition:(id)a;
 - (int) wordOffsetInRange:(id)a;
 - (BOOL) selectionAtDocumentStart;
 - (BOOL) selectionAtWordStart;
 - (id) rangeByMovingCurrentSelection:(int)a;
 - (id) rangeByExtendingCurrentSelection:(int)a;
 - (BOOL) hasEditableSelection;
 - (void) loadHTMLString:(id)abaseURL:(id)b;
 - (void) _setLoadsSynchronously:(BOOL)a;
 - (void) resetTextAutosizingBeforeLayout;
 - (void) sendScrollEvent;
 - (void) _userScrolled;
 - (BOOL) _isVisuallyNonEmpty;
 - (int) _loadType;
 - (void) removeUnchangeableStyles;
 - (void) sendOrientationChangeEvent:(int)a;
 - (void) getDictationResultRanges:(^@)aandMetadatas:(^@)b;
 - (id) stringForRange:(id)a;
 - (id) dictationResultMetadataForRange:(id)a;
 - (void) forceLayoutAdjustingViewSize:(BOOL)a;
 - (id) interpretationsForCurrentRoot;
 - (void) selectWithoutClosingTypingNSRange:({_NSRange=QQ})a;
 - (^{__CTFont=}) fontForSelection:(^B)a;
 - (void) _replaceSelectionWithWebArchive:(id)aselectReplacement:(BOOL)bsmartReplace:(BOOL)c;
 - (void) expandSelectionToElementContainingCaretSelection;
 - (BOOL) focusedNodeHasContent;
 - (void) prepareForPause;
 - (void) setPluginsPaused:(BOOL)a;
 - (void) resumeFromPause;
 - (id) markedTextDOMRange;
 - (id) webVisiblePositionForPoint:({CGPoint=dd})a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) renderRectForPoint:({CGPoint=dd})aisReplaced:(^B)bfontSize:(^f)c;
 - (void) _setProhibitsScrolling:(BOOL)a;
 - (id) elementRangeContainingCaretSelection;
 - (void) moveSelectionToPoint:({CGPoint=dd})a;
 - (void) revealSelectionAtExtent:(BOOL)a;
 - (int) innerLineHeight:(id)a;
 - (id) approximateNodeAtViewportLocation:(^{CGPoint=dd})a;
 - (id) deepestNodeAtViewportLocation:({CGPoint=dd})a;
 - (id) scrollableNodeAtViewportLocation:({CGPoint=dd})a;
 - (void) _setVisibleSize:({CGSize=dd})a;
 - (id) selectionRects;
 - (void) setRangedSelectionBaseToCurrentSelection;
 - (void) clearRangedSelectionInitialExtent;
 - (void) setRangedSelectionWithExtentPoint:({CGPoint=dd})a;
 - (void) setSelectionWithFirstPoint:({CGPoint=dd})asecondPoint:({CGPoint=dd})b;
 - (void) setRangedSelectionBaseToCurrentSelectionStart;
 - (void) setRangedSelectionInitialExtentToCurrentSelectionEnd;
 - (void) setRangedSelectionBaseToCurrentSelectionEnd;
 - (void) setRangedSelectionInitialExtentToCurrentSelectionStart;
 - (void) aggressivelyExpandSelectionToWordContainingCaretSelection;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) closestCaretRectInMarkedTextRangeForPoint:({CGPoint=dd})a;
 - ({_NSRange=QQ}) convertDOMRangeToNSRange:(id)a;
 - (void) toggleBaseWritingDirection;
 - (BOOL) setRangedSelectionExtentPoint:({CGPoint=dd})abaseIsStart:(BOOL)ballowFlipping:(BOOL)c;
 - (id) wordAtPoint:({CGPoint=dd})a;
 - (void) smartExtendRangedSelection:(int)a;
 - (void) moveSelectionToEnd;
 - (void) moveSelectionToStart;
 - (void) resetSelection;
 - (BOOL) _isDescendantOfFrame:(id)a;
 - (void) recursiveSetUpdateAppearanceEnabled:(BOOL)a;
 - (id) _rectsForRange:(id)a;
 - (id) init;
 - (void) stopLoading;
 - (int) selectionAffinity;
 - (id) dataSource;
 - (void) loadArchive:(id)a;
 - (void) loadData:(id)aMIMEType:(id)btextEncodingName:(id)cbaseURL:(id)d;
 - (id) DOMDocument;
 - (^{CGColor=}) _bodyBackgroundColor;
 - (id) webView;
 - (void) setNeedsLayout;
 - (void) setBaseWritingDirection:(int)a;
 - (void) _dispatchDidReceiveTitle:(id)a;
 - (id) _dataSource;
 - (id) startPosition;
 - (id) endPosition;
 - (id) frameView;
 - (id) renderTreeAsExternalRepresentationForPrinting:(BOOL)a;
 - (int) numberOfPagesWithPageWidth:(float)apageHeight:(float)b;
 - (void) printToCGContext:(^{CGContext=})apageWidth:(float)bpageHeight:(float)c;
 - (void) _replaceSelectionWithFragment:(id)aselectReplacement:(BOOL)bsmartReplace:(BOOL)cmatchStyle:(BOOL)d;
 - (id) _documentFragmentWithMarkupString:(id)abaseURLString:(id)b;
 - (BOOL) _isIncludedInWebKitStatistics;
 - (BOOL) hasRichlyEditableSelection;
 - (^{Frame=^^?I{HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> >={HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> >=^^{FrameDestructionObserver}iiii}}^{MainFrame}^{Page}{RefPtr<WebCore::Settings>=^{Settings}}{FrameTree=^{Frame}^{Frame}{AtomicString={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}}{AtomicString={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}}{RefPtr<WebCore::Frame>=^{Frame}}^{Frame}{RefPtr<WebCore::Frame>=^{Frame}}^{Frame}I}{FrameLoader=^{Frame}^{FrameLoaderClient}{unique_ptr<WebCore::PolicyChecker, std::__1::default_delete<WebCore::PolicyChecker> >={__compressed_pair<WebCore::PolicyChecker *, std::__1::default_delete<WebCore::PolicyChecker> >=^{PolicyChecker}}}{unique_ptr<WebCore::HistoryController, std::__1::default_delete<WebCore::HistoryController> >={__compressed_pair<WebCore::HistoryController *, std::__1::default_delete<WebCore::HistoryController> >=^{HistoryController}}}{ResourceLoadNotifier=^{Frame}}{unique_ptr<WebCore::SubframeLoader, std::__1::default_delete<WebCore::SubframeLoader> >={__compressed_pair<WebCore::SubframeLoader *, std::__1::default_delete<WebCore::SubframeLoader> >=^{SubframeLoader}}}{FrameLoaderStateMachine=i}{unique_ptr<WebCore::IconController, std::__1::default_delete<WebCore::IconController> >={__compressed_pair<WebCore::IconController *, std::__1::default_delete<WebCore::IconController> >=^{IconController}}}{MixedContentChecker=^{Frame}}{unique_ptr<WebCore::FrameLoader::FrameProgressTracker, std::__1::default_delete<WebCore::FrameLoader::FrameProgressTracker> >={__compressed_pair<WebCore::FrameLoader::FrameProgressTracker *, std::__1::default_delete<WebCore::FrameLoader::FrameProgressTracker> >=^{FrameProgressTracker}}}ii{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}BBBB{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}BBBiB{RefPtr<WebCore::SerializedScriptValue>=^{SerializedScriptValue}}B{URL={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{Timer<WebCore::FrameLoader>=^^?dddiI^{Vector<WebCore::TimerBase *, 0, WTF::CrashOnOverflow>}{function<void ()>={type=[24C]}^{__base<void ()>}}}BB^{Frame}{HashSet<WebCore::Frame *, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> >={HashTable<WebCore::Frame *, WebCore::Frame *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> >=^^{Frame}iiii}}BBBBi{RefPtr<WebCore::FrameNetworkingContext>=^{FrameNetworkingContext}}{URL={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{unique_ptr<WebCore::PageActivityAssertionToken, std::__1::default_delete<WebCore::PageActivityAssertionToken> >={__compressed_pair<WebCore::PageActivityAssertionToken *, std::__1::default_delete<WebCore::PageActivityAssertionToken> >=^{PageActivityAssertionToken}}}}{NavigationScheduler=^{Frame}{Timer<WebCore::NavigationScheduler>=^^?dddiI^{Vector<WebCore::TimerBase *, 0, WTF::CrashOnOverflow>}{function<void ()>={type=[24C]}^{__base<void ()>}}}{unique_ptr<WebCore::ScheduledNavigation, std::__1::default_delete<WebCore::ScheduledNavigation> >={__compressed_pair<WebCore::ScheduledNavigation *, std::__1::default_delete<WebCore::ScheduledNavigation> >=^{ScheduledNavigation}}}}^{HTMLFrameOwnerElement}{RefPtr<WebCore::FrameView>=^{FrameView}}{RefPtr<WebCore::Document>=^{Document}}{unique_ptr<WebCore::ScriptController, std::__1::default_delete<WebCore::ScriptController> >={__compressed_pair<WebCore::ScriptController *, std::__1::default_delete<WebCore::ScriptController> >=^{ScriptController}}}{unique_ptr<WebCore::Editor, std::__1::default_delete<WebCore::Editor> >={__compressed_pair<WebCore::Editor *, std::__1::default_delete<WebCore::Editor> >=^{Editor}}}{unique_ptr<WebCore::FrameSelection, std::__1::default_delete<WebCore::FrameSelection> >={__compressed_pair<WebCore::FrameSelection *, std::__1::default_delete<WebCore::FrameSelection> >=^{FrameSelection}}}{unique_ptr<WebCore::EventHandler, std::__1::default_delete<WebCore::EventHandler> >={__compressed_pair<WebCore::EventHandler *, std::__1::default_delete<WebCore::EventHandler> >=^{EventHandler}}}{unique_ptr<WebCore::AnimationController, std::__1::default_delete<WebCore::AnimationController> >={__compressed_pair<WebCore::AnimationController *, std::__1::default_delete<WebCore::AnimationController> >=^{AnimationController}}}{Timer<WebCore::Frame>=^^?dddiI^{Vector<WebCore::TimerBase *, 0, WTF::CrashOnOverflow>}{function<void ()>={type=[24C]}^{__base<void ()>}}}f{IntPoint=ii}{ViewportArguments=ifffffffffffB}Bi{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}iib1b1}{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}iib1b1}ffi}) coreFrame;
 - (id) _initWithWebFrameView:(id)awebView:(id)b;
 - (BOOL) _hasSelection;
 - (id) _findFrameWithSelection;
 - (void) _clearSelection;
 - (BOOL) _shouldFlattenCompositingLayers:(^{CGContext=})a;
 - (id) _stringByEvaluatingJavaScriptFromString:(id)aforceUserGesture:(BOOL)b;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _firstRectForDOMRange:(id)a;
 - (BOOL) _canProvideDocumentSource;
 - (void) _attachScriptDebugger;
 - (void) _detachScriptDebugger;
 - (void) _clearCoreFrame;
 - (void) _updateBackgroundAndUpdatesWhileOffscreen;
 - (void) _setInternalLoadDelegate:(id)a;
 - (id) _internalLoadDelegate;
 - (void) _unmarkAllBadGrammar;
 - (void) _unmarkAllMisspellings;
 - (void) _clearSelectionInOtherFrames;
 - (BOOL) _isCommitting;
 - (void) _setIsCommitting:(BOOL)a;
 - (id) _nodesFromList:(^{Vector<WebCore::Node *, 0, WTF::CrashOnOverflow>=^^{Node}II})a;
 - (id) _selectedString;
 - (id) _stringForRange:(id)a;
 - (void) _drawRect:({CGRect={CGPoint=dd}{CGSize=dd}})acontentsOnly:(BOOL)b;
 - (BOOL) _getVisibleRect:(^{CGRect={CGPoint=dd}{CGSize=dd}})a;
 - (id) _stringByEvaluatingJavaScriptFromString:(id)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _caretRectAtPosition:(r^{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1})aaffinity:(int)b;
 - (void) _scrollDOMRangeToVisible:(id)a;
 - (void) _scrollDOMRangeToVisible:(id)awithInset:(double)b;
 - (BOOL) _needsLayout;
 - (int) _selectionGranularity;
 - (id) _convertNSRangeToDOMRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) _convertDOMRangeToNSRange:(id)a;
 - (id) _markDOMRange;
 - (id) _smartDeleteRangeForProposedRange:(id)a;
 - (id) _documentFragmentWithNodesAsParagraphs:(id)a;
 - (void) _replaceSelectionWithNode:(id)aselectReplacement:(BOOL)bsmartReplace:(BOOL)cmatchStyle:(BOOL)d;
 - (void) _insertParagraphSeparatorInQuotedContent;
 - ({VisiblePosition={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}i}) _visiblePositionForPoint:({CGPoint=dd})a;
 - (id) _characterRangeAtPoint:({CGPoint=dd})a;
 - (id) _typingStyle;
 - (void) _setTypingStyle:(id)awithUndoAction:(int)b;
 - (BOOL) _canSaveAsWebArchive;
 - (void) _commitData:(id)a;
 - (BOOL) _contentFilterDidHandleNavigationAction:(r^{ResourceRequest={URL={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}d{URL={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{HTTPHeaderMap={HashMap<WTF::String, WTF::String, WTF::CaseFoldingHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::String> >, WTF::CaseFoldingHash, WTF::HashMap<WTF::String, WTF::String, WTF::CaseFoldingHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> >=^{KeyValuePair<WTF::String, WTF::String>}iiii}}}{Vector<WTF::String, 0, WTF::CrashOnOverflow>=^{String}II}{RefPtr<WebCore::FormData>=^{FormData}}b3b1b1b1b1b1b1b1b1b1b4B{RetainPtr<const _CFURLRequest *>=^v}{RetainPtr<NSURLRequest>=^v}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}})a;
 - (void) _selectNSRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) _selectedNSRange;
 - (void) deviceOrientationChanged;
 - (void) _setTextAutosizingWidth:(double)a;
 - (^{OpaqueJSContext=}) _globalContextForScriptWorld:(id)a;
 - (void) _setShouldCreateRenderers:(BOOL)a;
 - (BOOL) _isFrameSet;
 - (BOOL) _firstLayoutDone;
 - (BOOL) _loadsSynchronously;
 - (id) _selectionRangeForFirstPoint:({CGPoint=dd})asecondPoint:({CGPoint=dd})b;
 - (id) _selectionRangeForPoint:({CGPoint=dd})a;
 - (BOOL) _isDisplayingStandaloneImage;
 - (unsigned int) _pendingFrameUnloadEventCount;
 - (unsigned int) formElementsCharacterCount;
 - (void) setTimeoutsPaused:(BOOL)a;
 - (void) selectNSRange:({_NSRange=QQ})a;
 - ({_NSRange=QQ}) selectedNSRange;
 - (void) _restoreViewState;
 - (void) _saveViewState;
 - ({CGSize=dd}) renderedSizeOfNode:(id)aconstrainedToWidth:(float)b;
 - (int) preferredHeight;
 - (void) setCaretColor:(^{CGColor=})a;
 - (int) layoutCount;
 - (BOOL) isTelephoneNumberParsingAllowed;
 - (BOOL) isTelephoneNumberParsingEnabled;
 - (BOOL) mediaDataLoadsAutomatically;
 - (void) setMediaDataLoadsAutomatically:(BOOL)a;
 - (id) selectedDOMRange;
 - (void) expandSelectionToWordContainingCaretSelection;
 - (void) expandSelectionToStartOfWordContainingCaretSelection;
 - (unsigned short) characterBeforeCaretSelection;
 - (id) wordRangeContainingCaretSelection;
 - (id) wordInRange:(id)a;
 - (BOOL) spaceFollowsWordInRange:(id)a;
 - (id) wordsInCurrentParagraph;
 - (BOOL) selectionAtSentenceStart;
 - (void) selectNSRange:({_NSRange=QQ})aonElement:(id)b;
 - (void) setMarkedText:(id)aselectedRange:({_NSRange=QQ})b;
 - (void) setMarkedText:(id)aforCandidates:(BOOL)b;
 - (id) stringByEvaluatingJavaScriptFromString:(id)aforceUserGesture:(BOOL)b;
 - (void) _replaceSelectionWithText:(id)aselectReplacement:(BOOL)bsmartReplace:(BOOL)cmatchStyle:(BOOL)d;
 - (void) _replaceSelectionWithText:(id)aselectReplacement:(BOOL)bsmartReplace:(BOOL)c;
 - (void) _replaceSelectionWithMarkupString:(id)abaseURLString:(id)bselectReplacement:(BOOL)csmartReplace:(BOOL)d;
 - (id) _cacheabilityDictionary;
 - (BOOL) _allowsFollowingLink:(id)a;
 - (id) _stringByEvaluatingJavaScriptFromString:(id)awithGlobalObject:(^{OpaqueJSValue=})binScriptWorld:(id)c;
 - (id) _javaScriptContextForScriptWorld:(id)a;
 - (void) setAccessibleName:(id)a;
 - (BOOL) enhancedAccessibilityEnabled;
 - (void) setEnhancedAccessibility:(BOOL)a;
 - (id) _layerTreeAsText;
 - (id) accessibilityRoot;
 - (void) _clearOpener;
 - (id) _computePageRectsWithPrintScaleFactor:(float)apageSize:({CGSize=dd})b;
 - (id) _documentFragmentForText:(id)a;
 - (id) _documentFragmentForWebArchive:(id)a;
 - (id) _documentFragmentForImageData:(id)awithRelativeURLPart:(id)bandMIMEType:(id)c;
 - (^{OpaqueJSValue=}) jsWrapperForNode:(id)ainScriptWorld:(id)b;
 - (id) elementAtPoint:({CGPoint=dd})a;
 - (id) _unreachableURL;
 - (void) _loadData:(id)aMIMEType:(id)btextEncodingName:(id)cbaseURL:(id)dunreachableURL:(id)e;
 - (void) _loadHTMLString:(id)abaseURL:(id)bunreachableURL:(id)c;
 - (id) initWithName:(id)awebFrameView:(id)bwebView:(id)c;
 - (id) frameElement;
 - (id) provisionalDataSource;
 - (void) loadRequest:(id)a;
 - (void) loadAlternateHTMLString:(id)abaseURL:(id)bforUnreachableURL:(id)c;
 - (void) reload;
 - (void) reloadFromOrigin;
 - (id) findFrameNamed:(id)a;
 - (id) parentFrame;
 - (id) childFrames;
 - (id) windowObject;
 - (^{OpaqueJSContext=}) globalContext;
 - (id) javaScriptContext;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) elementRectAtPoint:({CGPoint=dd})a;
 - (int) selectionState;
 - ({VisiblePosition={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}i}) visiblePositionForPoint:({CGPoint=dd})a;
 - (id) selectionRectsForCoreRange:(^{Range=I{Ref<WebCore::Document>=^{Document}}{RangeBoundaryPoint={RefPtr<WebCore::Node>=^{Node}}i{RefPtr<WebCore::Node>=^{Node}}}{RangeBoundaryPoint={RefPtr<WebCore::Node>=^{Node}}i{RefPtr<WebCore::Node>=^{Node}}}})a;
 - (BOOL) hasSelection;
 - (BOOL) setSelectionWithBasePoint:({CGPoint=dd})aextentPoint:({CGPoint=dd})bbaseIsStart:(BOOL)callowFlipping:(BOOL)d;
 - (int) selectionBaseWritingDirection;
 - ({VisiblePosition={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}i}) closestWordBoundary:({VisiblePosition={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}i})a;
 - (void) extendSelection:(BOOL)a;
 - (BOOL) setSelectionWithBasePoint:({CGPoint=dd})aextentPoint:({CGPoint=dd})bbaseIsStart:(BOOL)c;
 - (void) ensureRangedSelectionContainsInitialStartPoint:({CGPoint=dd})ainitialEndPoint:({CGPoint=dd})b;
 - (void) expandSelectionToSentence;
 - (BOOL) renderedCharactersExceed:(unsigned long long)a;
 - (^{CGImage=}) imageForNode:(id)aallowDownsampling:(BOOL)bdrawContentBehindTransparentNodes:(BOOL)c;
 - (id) previousUnperturbedDictationResultBoundaryFromPosition:(id)a;
 - (id) documentView;
 - ({_NSRange=QQ}) _convertToNSRange:(^{Range=I{Ref<WebCore::Document>=^{Document}}{RangeBoundaryPoint={RefPtr<WebCore::Node>=^{Node}}i{RefPtr<WebCore::Node>=^{Node}}}{RangeBoundaryPoint={RefPtr<WebCore::Node>=^{Node}}i{RefPtr<WebCore::Node>=^{Node}}}})a;
 - ({PassRefPtr<WebCore::Range>=^{Range}}) _convertToDOMRange:({_NSRange=QQ})a;


@end
