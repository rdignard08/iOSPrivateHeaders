
@interface WebView : WAKView {

    WebViewPrivate* _private;
}
 + (void) initialize;
 + (void) _removeUserStyleSheetsFromGroup:(id)aworld:(id)b;
 + (void) _addUserStyleSheetToGroup:(id)aworld:(id)bsource:(id)curl:(id)dwhitelist:(id)eblacklist:(id)f;
 + (id) _productivityDocumentMIMETypes;
 + (void) _doNotStartObservingNetworkReachability;
 + (BOOL) _canHandleRequest:(id)a;
 + (BOOL) isCharacterSmartReplaceExempt:(unsigned short)aisPreviousCharacter:(BOOL)b;
 + (void) _setPDFRepresentationClass:(Class)a;
 + (void) _setPDFViewClass:(Class)a;
 + (unsigned long long) _cacheModel;
 + (void) _setCacheModel:(unsigned long long)a;
 + (void) purgeInactiveFontData;
 + (BOOL) _viewClass:(^#)aandRepresentationClass:(^#)bforMIMEType:(id)callowingPlugins:(BOOL)d;
 + (Class) _getPDFRepresentationClass;
 + (BOOL) canShowMIMETypeAsHTML:(id)a;
 + (BOOL) _canHandleRequest:(id)aforMainFrame:(BOOL)b;
 + (BOOL) shouldIncludeInWebKitStatistics;
 + (BOOL) _representationExistsForURLScheme:(id)a;
 + (id) _generatedMIMETypeForURLScheme:(id)a;
 + (Class) _getPDFViewClass;
 + (void) _registerPluginMIMEType:(id)a;
 + (void) _unregisterPluginMIMEType:(id)a;
 + (void) enableWebThread;
 + (void) _setAllowsRoundingHacks:(BOOL)a;
 + (void) registerForMemoryNotifications;
 + (void) _makeAllWebViewsPerformSelector:(SEL)a;
 + (void) _releaseMemoryNow;
 + (void) _handleMemoryWarning;
 + (void) discardAllCompiledCode;
 + (void) garbageCollectNow;
 + (void) drainLayerPool;
 + (void) releaseFastMallocMemoryOnCurrentThread;
 + (void) registerViewClass:(Class)arepresentationClass:(Class)bforMIMEType:(id)c;
 + (void) _unregisterViewClassAndRepresentationClassForMIMEType:(id)a;
 + (id) _MIMETypeForFile:(id)a;
 + (BOOL) canShowMIMEType:(id)a;
 + (void) _addUserScriptToGroup:(id)aworld:(id)bsource:(id)curl:(id)dwhitelist:(id)eblacklist:(id)finjectionTime:(int)ginjectedFrames:(int)h;
 + (void) _addUserStyleSheetToGroup:(id)aworld:(id)bsource:(id)curl:(id)dwhitelist:(id)eblacklist:(id)finjectedFrames:(int)g;
 + (id) _standardUserAgentWithApplicationName:(id)a;
 + (void) _reportException:(^{OpaqueJSValue=})ainContext:(^{OpaqueJSContext=})b;
 + (id) _supportedMIMETypes;
 + (void) _clearPrivateBrowsingSessionCookieStorage;
 + (void) willEnterBackgroundWithCompletionHandler:(@?)a;
 + (void) _setAlwaysUsesComplexTextCodePath:(BOOL)a;
 + (BOOL) _allowsRoundingHacks;
 + (BOOL) canCloseAllWebViews;
 + (void) closeAllWebViews;
 + (BOOL) canShowFile:(id)a;
 + (void) _setAllowCookies:(BOOL)a;
 + (BOOL) _allowCookies;
 + (BOOL) _isUnderMemoryPressure;
 + (void) _clearMemoryPressure;
 + (BOOL) _shouldWaitForMemoryClearMessage;
 + (void) _enableRemoteInspector;
 + (void) _disableRemoteInspector;
 + (void) _disableAutoStartRemoteInspector;
 + (BOOL) _isRemoteInspectorEnabled;
 + (BOOL) _hasRemoteInspectorSession;
 + (void) _registerViewClass:(Class)arepresentationClass:(Class)bforURLScheme:(id)c;
 + (id) _decodeData:(id)a;
 + (void) _setShouldUseFontSmoothing:(BOOL)a;
 + (BOOL) _shouldUseFontSmoothing;
 + (void) _addOriginAccessWhitelistEntryWithSourceOrigin:(id)adestinationProtocol:(id)bdestinationHost:(id)callowDestinationSubdomains:(BOOL)d;
 + (void) _removeOriginAccessWhitelistEntryWithSourceOrigin:(id)adestinationProtocol:(id)bdestinationHost:(id)callowDestinationSubdomains:(BOOL)d;
 + (void) _resetOriginAccessWhitelists;
 + (void) _addUserScriptToGroup:(id)aworld:(id)bsource:(id)curl:(id)dwhitelist:(id)eblacklist:(id)finjectionTime:(int)g;
 + (void) _removeUserScriptFromGroup:(id)aworld:(id)burl:(id)c;
 + (void) _removeUserStyleSheetFromGroup:(id)aworld:(id)burl:(id)c;
 + (void) _removeUserScriptsFromGroup:(id)aworld:(id)b;
 + (void) _removeAllUserContentFromGroup:(id)a;
 + (void) _setDomainRelaxationForbidden:(BOOL)aforURLScheme:(id)b;
 + (void) _registerURLSchemeAsSecure:(id)a;
 + (void) _registerURLSchemeAsAllowingLocalStorageAccessInPrivateBrowsing:(id)a;
 + (void) _registerURLSchemeAsAllowingDatabaseAccessInPrivateBrowsing:(id)a;
 + (void) _setLoadResourcesSerially:(BOOL)a;
 + (BOOL) _HTTPPipeliningEnabled;
 + (void) _setHTTPPipeliningEnabled:(BOOL)a;
 + (void) _setTileCacheLayerPoolCapacity:(unsigned int)a;
 + (void) _cacheModelChangedNotification:(id)a;
 + (void) _preferencesRemovedNotification:(id)a;
 + (BOOL) _canShowMIMEType:(id)aallowingPlugins:(BOOL)b;
 + (id) MIMETypesShownAsHTML;
 + (void) setMIMETypesShownAsHTML:(id)a;
 + (void) registerURLSchemeAsLocal:(id)a;
 + (void) _preflightSpellChecker;
 + (BOOL) _didSetCacheModel;
 + (unsigned long long) _maxCacheModelInAnyInstance;
 + (void) _preflightSpellCheckerNow:(id)a;

 - (Vv) release;
 - (Vv) _webcore_releaseOnWebThread;
 - (void) dealloc;
 - (void) finalize;
 - (void) close;
 - (void) setEditable:(BOOL)a ;
 - (id) initSimpleHTMLDocumentWithStyle:(id)a frame:({CGRect={CGPoint=dd}{CGSize=dd}})b preferences:(id)c groupName:(id)d ;
 - (void) _setFixedLayoutSize:({CGSize=dd})a ;
 - (void) setCustomUserAgent:(id)a ;
 - (void) selectAll:(id)a ;
 - (void) makeTextWritingDirectionRightToLeft:(id)a ;
 - (void) makeTextWritingDirectionLeftToRight:(id)a ;
 - (void) cut:(id)a ;
 - (void) copy:(id)a ;
 - (void) paste:(id)a ;
 - (void) toggleUnderline:(id)a ;
 - (void) setSelectedDOMRange:(id)a affinity:(int)b ;
 - (BOOL) _setMediaLayer:(id)a forPluginView:(id)b ;
 - (void) setContinuousSpellCheckingEnabled:(BOOL)a ;
 - (void) applyStyle:(id)a ;
 - (void) _setWantsTelephoneNumberParsing:(BOOL)a ;
 - (unsigned long long) _renderTreeSize;
 - (BOOL) _isProcessingUserGesture;
 - (void) _viewGeometryDidChange;
 - (void) _setCustomFixedPositionLayoutRectInWebThread:({CGRect={CGPoint=dd}{CGSize=dd}})a synchronize:(BOOL)b ;
 - (void) _setCustomFixedPositionLayoutRect:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (id) editingDelegate;
 - (void) insertDictationPhrases:(id)a metadata:(id)b ;
 - (void) toggleBold:(id)a ;
 - (void) toggleItalic:(id)a ;
 - (BOOL) _pluginsAreRunning;
 - (void) _setFontFallbackPrefersPictographs:(BOOL)a ;
 - (id) stringByEvaluatingJavaScriptFromString:(id)a ;
 - (id) mainFrameURL;
 - (void) reload:(id)a ;
 - (BOOL) goToBackForwardItem:(id)a ;
 - (void) goBack:(id)a ;
 - (void) goForward:(id)a ;
 - (BOOL) canGoBack;
 - (BOOL) canGoForward;
 - (int) _paginationMode;
 - (void) _setPaginationMode:(int)a ;
 - (BOOL) _paginationBehavesLikeColumns;
 - (void) _setPaginationBehavesLikeColumns:(BOOL)a ;
 - (double) _pageLength;
 - (void) _setPageLength:(double)a ;
 - (double) _gapBetweenPages;
 - (void) _setGapBetweenPages:(double)a ;
 - (unsigned long long) _pageCount;
 - (id) customUserAgent;
 - (void) delete:(id)a ;
 - (void) _setUIWebViewUserAgentWithBuildVersion:(id)a ;
 - (void) _overflowScrollPositionChangedTo:({CGPoint=dd})a forNode:(id)b isUserScroll:(BOOL)c ;
 - (id) _touchEventRegions;
 - (BOOL) defersCallbacks;
 - (void) _setHostApplicationProcessIdentifier:(int)a auditToken:({?=[8I]})b ;
 - (void) setDefersCallbacks:(BOOL)a ;
 - (int) selectionAffinity;
 - (void) setBackgroundColor:(^{CGColor=})a ;
 - (id) typingAttributes;
 - (id) mainFrame;
 - (void) setUsesPageCache:(BOOL)a ;
 - (id) initWithFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (void) setResourceLoadDelegate:(id)a ;
 - (void) setFrameLoadDelegate:(id)a ;
 - (void) setPolicyDelegate:(id)a ;
 - (void) setPreferences:(id)a ;
 - (void) setTextSizeMultiplier:(float)a ;
 - (float) textSizeMultiplier;
 - (^{Page={HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >={HashTable<const char *, WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >, WTF::PtrHash<const char *>, WTF::HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >::KeyValuePairTraits, WTF::HashTraits<const char *> >=^{KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >}iiii}}{unique_ptr<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >={__compressed_pair<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > *, std::__1::default_delete<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > > > >=^{HashSet<WTF::RefPtr<WTF::SchedulePair>, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair> > >}}}{unique_ptr<WebCore::Chrome, std::__1::default_delete<WebCore::Chrome> >={__compressed_pair<WebCore::Chrome *, std::__1::default_delete<WebCore::Chrome> >=^{Chrome}}}{unique_ptr<WebCore::DragCaretController, std::__1::default_delete<WebCore::DragCaretController> >={__compressed_pair<WebCore::DragCaretController *, std::__1::default_delete<WebCore::DragCaretController> >=^{DragCaretController}}}{unique_ptr<WebCore::FocusController, std::__1::default_delete<WebCore::FocusController> >={__compressed_pair<WebCore::FocusController *, std::__1::default_delete<WebCore::FocusController> >=^{FocusController}}}{unique_ptr<WebCore::UserInputBridge, std::__1::default_delete<WebCore::UserInputBridge> >={__compressed_pair<WebCore::UserInputBridge *, std::__1::default_delete<WebCore::UserInputBridge> >=^{UserInputBridge}}}{unique_ptr<WebCore::InspectorController, std::__1::default_delete<WebCore::InspectorController> >={__compressed_pair<WebCore::InspectorController *, std::__1::default_delete<WebCore::InspectorController> >=^{InspectorController}}}{RefPtr<WebCore::ScrollingCoordinator>=^{ScrollingCoordinator}}{RefPtr<WebCore::Settings>=^{Settings}}{unique_ptr<WebCore::ProgressTracker, std::__1::default_delete<WebCore::ProgressTracker> >={__compressed_pair<WebCore::ProgressTracker *, std::__1::default_delete<WebCore::ProgressTracker> >=^{ProgressTracker}}}{unique_ptr<WebCore::BackForwardController, std::__1::default_delete<WebCore::BackForwardController> >={__compressed_pair<WebCore::BackForwardController *, std::__1::default_delete<WebCore::BackForwardController> >=^{BackForwardController}}}{RefPtr<WebCore::MainFrame>=^{MainFrame}}{RefPtr<WebCore::PluginData>=^{PluginData}}{RefPtr<WebCore::RenderTheme>=^{RenderTheme}}^{EditorClient}^{PlugInClient}^{ValidationMessageClient}i{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}BBBIBBffffffBb2b2{Pagination=iBII}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}Bq{unique_ptr<WebCore::PageGroup, std::__1::default_delete<WebCore::PageGroup> >={__compressed_pair<WebCore::PageGroup *, std::__1::default_delete<WebCore::PageGroup> >=^{PageGroup}}}^{PageGroup}^{Debugger}B{RefPtr<WebCore::StorageNamespace>=^{StorageNamespace}}dBdBBIIii{HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >={HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> >=^^{RenderObject}iiii}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}{Region={IntRect={IntPoint=ii}{IntSize=ii}}{Shape={Vector<int, 32, WTF::CrashOnOverflow>=^iII[32{type=[4C]}]}{Vector<WebCore::Region::Span, 16, WTF::CrashOnOverflow>=^{Span}II[16{type=[16C]}]}}}B^{AlternativeTextClient}B{unique_ptr<WebCore::PageThrottler, std::__1::default_delete<WebCore::PageThrottler> >={__compressed_pair<WebCore::PageThrottler *, std::__1::default_delete<WebCore::PageThrottler> >=^{PageThrottler}}}{unique_ptr<WebCore::PageConsole, std::__1::default_delete<WebCore::PageConsole> >={__compressed_pair<WebCore::PageConsole *, std::__1::default_delete<WebCore::PageConsole> >=^{PageConsole}}}{unique_ptr<WebCore::PageDebuggable, std::__1::default_delete<WebCore::PageDebuggable> >={__compressed_pair<WebCore::PageDebuggable *, std::__1::default_delete<WebCore::PageDebuggable> >=^{PageDebuggable}}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}{HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String> >={HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >=^{String}iiii}}II{RefPtr<WebCore::UserContentController>=^{UserContentController}}{RefPtr<WebCore::VisitedLinkStore>=^{VisitedLinkStore}}{HashSet<WebCore::ViewStateChangeObserver *, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >={HashTable<WebCore::ViewStateChangeObserver *, WebCore::ViewStateChangeObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *>, WTF::HashTraits<WebCore::ViewStateChangeObserver *> >=^^{ViewStateChangeObserver}iiii}}{SessionID=Q}B}) page;
 - (^{CGColor=}) backgroundColor;
 - (id) groupName;
 - (void) deleteBackward:(id)a ;
 - (void) deleteForward:(id)a ;
 - (id) preferences;
 - (BOOL) isEditable;
 - (BOOL) usesPageCache;
 - (void) _close;
 - (BOOL) goBack;
 - (BOOL) goForward;
 - (id) _UIDelegateForwarder;
 - (id) UIDelegate;
 - (BOOL) _allowsMessaging;
 - (id) _UIKitDelegate;
 - (id) _UIKitDelegateForwarder;
 - (void) setGroupName:(id)a ;
 - (void) stopLoading:(id)a ;
 - (void) _closeWindow;
 - (void) _mouseDidMoveOverElement:(id)a modifierFlags:(unsigned long long)b ;
 - (id) _selectedOrMainFrame;
 - (id) historyDelegate;
 - (int) _keyboardUIMode;
 - (void) _pushPerformingProgrammaticFocus;
 - (void) _popPerformingProgrammaticFocus;
 - (void) _setNeedsOneShotDrawingSynchronization:(BOOL)a ;
 - (void) _scheduleCompositingLayerFlush;
 - (void) _enterFullscreenForNode:(^{Node=^^?{Weak<WebCore::JSDOMWrapper>=^{WeakImpl}}iI^{ContainerNode}^{TreeScope}^{Node}^{Node}(DataUnion=^{RenderObject}^{NodeRareDataBase})})a ;
 - (void) _exitFullscreen;
 - (void) setShowingInspectorIndication:(BOOL)a ;
 - (id) inspector;
 - (BOOL) isLoading;
 - (BOOL) _canShowMIMEType:(id)a ;
 - (id) _UIDelegateForSelector:(SEL)a ;
 - (id) _frameLoadDelegateForwarder;
 - (id) _resourceLoadDelegateForwarder;
 - (id) _formDelegateForSelector:(SEL)a ;
 - (double) estimatedProgress;
 - (id) _deviceOrientationProvider;
 - (id) resourceLoadDelegate;
 - (id) downloadDelegate;
 - (BOOL) isContinuousSpellCheckingEnabled;
 - (id) _editingDelegateForwarder;
 - (BOOL) _shouldChangeSelectedDOMRange:(id)a toDOMRange:(id)b affinity:(int)c stillSelecting:(BOOL)d ;
 - (BOOL) _isClosing;
 - (id) undoManager;
 - (void) moveUp:(id)a ;
 - (void) moveDown:(id)a ;
 - (void) insertBacktab:(id)a ;
 - (void) insertTab:(id)a ;
 - (void) insertNewline:(id)a ;
 - (float) _realZoomMultiplier;
 - (BOOL) _realZoomMultiplierIsTextOnly;
 - (void) _setZoomMultiplier:(float)a isTextOnly:(BOOL)b ;
 - (BOOL) drawsBackground;
 - (void) setDrawsBackground:(BOOL)a ;
 - (BOOL) shouldUpdateWhileOffscreen;
 - (BOOL) supportsTextEncoding;
 - (BOOL) _includesFlattenedCompositingLayersWhenDrawingToBitmap;
 - (void) _stopAllPlugIns;
 - (void) _startAllPlugIns;
 - (id) selectedDOMRange;
 - (id) elementAtPoint:({CGPoint=dd})a ;
 - ({CGSize=dd}) _fixedLayoutSize;
 - (void) _addObject:(id)a forIdentifier:(unsigned long long)b ;
 - (id) _objectForIdentifier:(unsigned long long)a ;
 - (void) _removeObjectForIdentifier:(unsigned long long)a ;
 - (void) _didCommitLoadForFrame:(id)a ;
 - (id) _webMailDelegate;
 - (id) _policyDelegateForwarder;
 - (id) _formDelegate;
 - (void) setMainFrameDocumentReady:(BOOL)a ;
 - (id) _downloadURL:(id)a ;
 - (void) _setGlobalHistoryItem:(^{HistoryItem=I{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{IntPoint=ii}f{Vector<WTF::String, 0, WTF::CrashOnOverflow>=^{String}II}{Vector<WTF::RefPtr<WebCore::HistoryItem>, 0, WTF::CrashOnOverflow>=^{RefPtr<WebCore::HistoryItem>}II}BB{unique_ptr<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow>, std::__1::default_delete<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow> > >={__compressed_pair<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow> *, std::__1::default_delete<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow> > >=^{Vector<WTF::String, 0, WTF::CrashOnOverflow>}}}qq{RefPtr<WebCore::SerializedScriptValue>=^{SerializedScriptValue}}{RefPtr<WebCore::FormData>=^{FormData}}{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}^{HistoryItem}^{HistoryItem}{unique_ptr<WebCore::CachedPage, std::__1::default_delete<WebCore::CachedPage> >={__compressed_pair<WebCore::CachedPage *, std::__1::default_delete<WebCore::CachedPage> >=^{CachedPage}}}i{FloatRect={FloatPoint=ff}{FloatSize=ff}}{IntRect={IntPoint=ii}{IntSize=ii}}{FloatSize=ff}{IntSize=ii}fB{ViewportArguments=ifffffffffffB}I{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}{RetainPtr<id>=^v}{unique_ptr<WTF::HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id> > >, std::__1::default_delete<WTF::HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id> > > > >={__compressed_pair<WTF::HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id> > > *, std::__1::default_delete<WTF::HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id> > > > >=^{HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id> > >}}}})a ;
 - (void) _stopAllPlugInsForPageCache;
 - (void) _restorePlugInsFromCache;
 - ({String={RefPtr<WTF::StringImpl>=^{StringImpl}}}) _userAgentString;
 - (id) _pluginForExtension:(id)a ;
 - (id) _pluginForMIMEType:(id)a ;
 - (id) mediaStyle;
 - (id) scriptDebugDelegate;
 - (id) policyDelegate;
 - (id) _sourceApplicationAuditData;
 - (void) setNextKeyView:(id)a ;
 - (id) previousValidKeyView;
 - (void) scrollToBeginningOfDocument:(id)a ;
 - (void) scrollToEndOfDocument:(id)a ;
 - (void) scrollPageUp:(id)a ;
 - (void) scrollPageDown:(id)a ;
 - (void) scrollLineUp:(id)a ;
 - (void) scrollLineDown:(id)a ;
 - (id) _webcore_effectiveFirstResponder;
 - (id) _geolocationProvider;
 - (BOOL) _flushCompositingChanges;
 - (void) _documentScaleChanged;
 - (BOOL) _isUsingAcceleratedCompositing;
 - (BOOL) maintainsInactiveSelection;
 - (BOOL) searchFor:(id)a direction:(BOOL)b caseSensitive:(BOOL)c wrap:(BOOL)d startInSelection:(BOOL)e ;
 - (BOOL) _isPerformingProgrammaticFocus;
 - (void) selectWord:(id)a ;
 - (BOOL) searchFor:(id)a direction:(BOOL)b caseSensitive:(BOOL)c wrap:(BOOL)d ;
 - (void) alignCenter:(id)a ;
 - (void) alignJustified:(id)a ;
 - (void) alignLeft:(id)a ;
 - (void) alignRight:(id)a ;
 - (void) deleteBackwardByDecomposingPreviousCharacter:(id)a ;
 - (void) deleteToBeginningOfLine:(id)a ;
 - (void) deleteToBeginningOfParagraph:(id)a ;
 - (void) deleteToEndOfLine:(id)a ;
 - (void) deleteToEndOfParagraph:(id)a ;
 - (void) deleteToMark:(id)a ;
 - (void) deleteWordBackward:(id)a ;
 - (void) deleteWordForward:(id)a ;
 - (void) ignoreSpelling:(id)a ;
 - (void) indent:(id)a ;
 - (void) insertLineBreak:(id)a ;
 - (void) insertNewlineIgnoringFieldEditor:(id)a ;
 - (void) insertParagraphSeparator:(id)a ;
 - (void) insertTabIgnoringFieldEditor:(id)a ;
 - (void) makeTextWritingDirectionNatural:(id)a ;
 - (void) moveBackward:(id)a ;
 - (void) moveBackwardAndModifySelection:(id)a ;
 - (void) moveDownAndModifySelection:(id)a ;
 - (void) moveForward:(id)a ;
 - (void) moveForwardAndModifySelection:(id)a ;
 - (void) moveLeft:(id)a ;
 - (void) moveLeftAndModifySelection:(id)a ;
 - (void) moveParagraphBackwardAndModifySelection:(id)a ;
 - (void) moveParagraphForwardAndModifySelection:(id)a ;
 - (void) moveRight:(id)a ;
 - (void) moveRightAndModifySelection:(id)a ;
 - (void) moveToBeginningOfDocument:(id)a ;
 - (void) moveToBeginningOfDocumentAndModifySelection:(id)a ;
 - (void) moveToBeginningOfLine:(id)a ;
 - (void) moveToBeginningOfLineAndModifySelection:(id)a ;
 - (void) moveToBeginningOfParagraph:(id)a ;
 - (void) moveToBeginningOfParagraphAndModifySelection:(id)a ;
 - (void) moveToBeginningOfSentence:(id)a ;
 - (void) moveToBeginningOfSentenceAndModifySelection:(id)a ;
 - (void) moveToEndOfDocument:(id)a ;
 - (void) moveToEndOfDocumentAndModifySelection:(id)a ;
 - (void) moveToEndOfLine:(id)a ;
 - (void) moveToEndOfLineAndModifySelection:(id)a ;
 - (void) moveToEndOfParagraph:(id)a ;
 - (void) moveToEndOfParagraphAndModifySelection:(id)a ;
 - (void) moveToEndOfSentence:(id)a ;
 - (void) moveToEndOfSentenceAndModifySelection:(id)a ;
 - (void) moveToLeftEndOfLine:(id)a ;
 - (void) moveToLeftEndOfLineAndModifySelection:(id)a ;
 - (void) moveToRightEndOfLine:(id)a ;
 - (void) moveToRightEndOfLineAndModifySelection:(id)a ;
 - (void) moveUpAndModifySelection:(id)a ;
 - (void) moveWordBackward:(id)a ;
 - (void) moveWordBackwardAndModifySelection:(id)a ;
 - (void) moveWordForward:(id)a ;
 - (void) moveWordForwardAndModifySelection:(id)a ;
 - (void) moveWordLeft:(id)a ;
 - (void) moveWordLeftAndModifySelection:(id)a ;
 - (void) moveWordRight:(id)a ;
 - (void) moveWordRightAndModifySelection:(id)a ;
 - (void) outdent:(id)a ;
 - (void) overWrite:(id)a ;
 - (void) pageDown:(id)a ;
 - (void) pageDownAndModifySelection:(id)a ;
 - (void) pageUp:(id)a ;
 - (void) pageUpAndModifySelection:(id)a ;
 - (void) pasteAsPlainText:(id)a ;
 - (void) selectLine:(id)a ;
 - (void) selectParagraph:(id)a ;
 - (void) selectSentence:(id)a ;
 - (void) selectToMark:(id)a ;
 - (void) setMark:(id)a ;
 - (void) subscript:(id)a ;
 - (void) superscript:(id)a ;
 - (void) swapWithMark:(id)a ;
 - (void) transpose:(id)a ;
 - (void) underline:(id)a ;
 - (void) unscript:(id)a ;
 - (void) yank:(id)a ;
 - (void) yankAndSelect:(id)a ;
 - (void) clearText:(id)a ;
 - (void) centerSelectionInVisibleArea:(id)a ;
 - (void) uppercaseWord:(id)a ;
 - (void) lowercaseWord:(id)a ;
 - (void) capitalizeWord:(id)a ;
 - (BOOL) smartInsertDeleteEnabled;
 - (void) insertText:(id)a ;
 - (void) unmarkAllTextMatches;
 - (id) rectsForTextMatches;
 - (BOOL) _useFixedLayout;
 - (void) _geolocationDidChangePosition:(id)a ;
 - (void) _geolocationDidFailWithMessage:(id)a ;
 - (void) _resetAllGeolocationPermission;
 - (BOOL) _isStopping;
 - (BOOL) _fetchCustomFixedPositionLayoutRect:(^{CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (id) _fixedPositionContent;
 - (void) setCurrentNodeHighlight:(id)a ;
 - (^{Frame=^^?I{HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> >={HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> >=^^{FrameDestructionObserver}iiii}}^{MainFrame}^{Page}{RefPtr<WebCore::Settings>=^{Settings}}{FrameTree=^{Frame}^{Frame}{AtomicString={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}}{AtomicString={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}}{RefPtr<WebCore::Frame>=^{Frame}}^{Frame}{RefPtr<WebCore::Frame>=^{Frame}}^{Frame}I}{FrameLoader=^{Frame}^{FrameLoaderClient}{unique_ptr<WebCore::PolicyChecker, std::__1::default_delete<WebCore::PolicyChecker> >={__compressed_pair<WebCore::PolicyChecker *, std::__1::default_delete<WebCore::PolicyChecker> >=^{PolicyChecker}}}{unique_ptr<WebCore::HistoryController, std::__1::default_delete<WebCore::HistoryController> >={__compressed_pair<WebCore::HistoryController *, std::__1::default_delete<WebCore::HistoryController> >=^{HistoryController}}}{ResourceLoadNotifier=^{Frame}}{unique_ptr<WebCore::SubframeLoader, std::__1::default_delete<WebCore::SubframeLoader> >={__compressed_pair<WebCore::SubframeLoader *, std::__1::default_delete<WebCore::SubframeLoader> >=^{SubframeLoader}}}{FrameLoaderStateMachine=i}{unique_ptr<WebCore::IconController, std::__1::default_delete<WebCore::IconController> >={__compressed_pair<WebCore::IconController *, std::__1::default_delete<WebCore::IconController> >=^{IconController}}}{MixedContentChecker=^{Frame}}{unique_ptr<WebCore::FrameLoader::FrameProgressTracker, std::__1::default_delete<WebCore::FrameLoader::FrameProgressTracker> >={__compressed_pair<WebCore::FrameLoader::FrameProgressTracker *, std::__1::default_delete<WebCore::FrameLoader::FrameProgressTracker> >=^{FrameProgressTracker}}}ii{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}BBBB{String={RefPtr<WTF::StringImpl>=^{StringImpl}}}BBBiB{RefPtr<WebCore::SerializedScriptValue>=^{SerializedScriptValue}}B{URL={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{Timer<WebCore::FrameLoader>=^^?dddiI^{Vector<WebCore::TimerBase *, 0, WTF::CrashOnOverflow>}{function<void ()>={type=[24C]}^{__base<void ()>}}}BB^{Frame}{HashSet<WebCore::Frame *, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> >={HashTable<WebCore::Frame *, WebCore::Frame *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> >=^^{Frame}iiii}}BBBBi{RefPtr<WebCore::FrameNetworkingContext>=^{FrameNetworkingContext}}{URL={String={RefPtr<WTF::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{unique_ptr<WebCore::PageActivityAssertionToken, std::__1::default_delete<WebCore::PageActivityAssertionToken> >={__compressed_pair<WebCore::PageActivityAssertionToken *, std::__1::default_delete<WebCore::PageActivityAssertionToken> >=^{PageActivityAssertionToken}}}}{NavigationScheduler=^{Frame}{Timer<WebCore::NavigationScheduler>=^^?dddiI^{Vector<WebCore::TimerBase *, 0, WTF::CrashOnOverflow>}{function<void ()>={type=[24C]}^{__base<void ()>}}}{unique_ptr<WebCore::ScheduledNavigation, std::__1::default_delete<WebCore::ScheduledNavigation> >={__compressed_pair<WebCore::ScheduledNavigation *, std::__1::default_delete<WebCore::ScheduledNavigation> >=^{ScheduledNavigation}}}}^{HTMLFrameOwnerElement}{RefPtr<WebCore::FrameView>=^{FrameView}}{RefPtr<WebCore::Document>=^{Document}}{unique_ptr<WebCore::ScriptController, std::__1::default_delete<WebCore::ScriptController> >={__compressed_pair<WebCore::ScriptController *, std::__1::default_delete<WebCore::ScriptController> >=^{ScriptController}}}{unique_ptr<WebCore::Editor, std::__1::default_delete<WebCore::Editor> >={__compressed_pair<WebCore::Editor *, std::__1::default_delete<WebCore::Editor> >=^{Editor}}}{unique_ptr<WebCore::FrameSelection, std::__1::default_delete<WebCore::FrameSelection> >={__compressed_pair<WebCore::FrameSelection *, std::__1::default_delete<WebCore::FrameSelection> >=^{FrameSelection}}}{unique_ptr<WebCore::EventHandler, std::__1::default_delete<WebCore::EventHandler> >={__compressed_pair<WebCore::EventHandler *, std::__1::default_delete<WebCore::EventHandler> >=^{EventHandler}}}{unique_ptr<WebCore::AnimationController, std::__1::default_delete<WebCore::AnimationController> >={__compressed_pair<WebCore::AnimationController *, std::__1::default_delete<WebCore::AnimationController> >=^{AnimationController}}}{Timer<WebCore::Frame>=^^?dddiI^{Vector<WebCore::TimerBase *, 0, WTF::CrashOnOverflow>}{function<void ()>={type=[24C]}^{__base<void ()>}}}f{IntPoint=ii}{ViewportArguments=ifffffffffffB}Bi{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}iib1b1}{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib3b1}iib1b1}ffi}) _mainCoreFrame;
 - (void) _removeFromAllWebViewsSet;
 - (void) _addToAllWebViewsSet;
 - (void) setApplicationNameForUserAgent:(id)a ;
 - (void) _updateScreenScaleFromWindow;
 - (void) _wakWindowScreenScaleChanged:(id)a ;
 - (void) _wakWindowVisibilityChanged:(id)a ;
 - (void) setSmartInsertDeleteEnabled:(BOOL)a ;
 - (BOOL) _isViewVisible;
 - (void) _setIsVisible:(BOOL)a ;
 - (void) _preferencesChangedNotification:(id)a ;
 - (void) _preferencesChanged:(id)a ;
 - (void) _commonInitializationWithFrameName:(id)a groupName:(id)b ;
 - (void) setMaintainsBackForwardList:(BOOL)a ;
 - (void) _closePluginDatabases;
 - (void) _clearDelegates;
 - (void) _closeWithFastTeardown;
 - (void) setHostWindow:(id)a ;
 - (id) _notificationProvider;
 - (id) preferencesIdentifier;
 - (BOOL) _needsPreHTML5ParserQuirks;
 - (BOOL) interactiveFormValidationEnabled;
 - (int) validationMessageTimerMagnification;
 - (void) caretChanged;
 - (void) _setFormDelegate:(id)a ;
 - (void) _setUIKitDelegate:(id)a ;
 - (void) setCaretChangeListener:(id)a ;
 - (void) removeAllCaretChangeListeners;
 - (void) setWebMailDelegate:(id)a ;
 - (void) setDownloadDelegate:(id)a ;
 - (void) setEditingDelegate:(id)a ;
 - (void) setScriptDebugDelegate:(id)a ;
 - (void) setUIDelegate:(id)a ;
 - (BOOL) _locked_plugInsAreRunningInFrame:(id)a ;
 - (void) _locked_recursivelyPerformPlugInSelector:(SEL)a inFrame:(id)b ;
 - (id) backForwardList;
 - (void) _synchronizeCustomFixedPositionLayoutRect;
 - (unsigned long long) countMatchesForText:(id)a options:(unsigned long long)b highlight:(BOOL)c limit:(unsigned long long)d markMatches:(BOOL)e ;
 - (BOOL) findString:(id)a options:(unsigned long long)b ;
 - (id) currentNodeHighlight;
 - (void) _setBrowserUserAgentProductVersion:(id)a buildVersion:(id)b bundleVersion:(id)c ;
 - (void) _dispatchPendingLoadRequests;
 - (id) _initWithFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a frameName:(id)b groupName:(id)c ;
 - (void) _viewWillDrawInternal;
 - (void) _replaceCurrentHistoryItem:(id)a ;
 - (void) updateLayoutIgnorePendingStyleSheets;
 - (BOOL) _viewClass:(^#)a andRepresentationClass:(^#)b forMIMEType:(id)c ;
 - (BOOL) _isClosed;
 - (void) _dispatchUnloadEvent;
 - (id) styleAtSelectionStart;
 - (void) _setResourceLoadSchedulerSuspended:(BOOL)a ;
 - (id) _openNewWindowWithRequest:(id)a ;
 - (BOOL) allowsRemoteInspection;
 - (void) setAllowsRemoteInspection:(BOOL)a ;
 - (void) _loadBackForwardListFromOtherView:(id)a ;
 - (id) _formDelegateForwarder;
 - (void) _cacheResourceLoadDelegateImplementations;
 - (void) _cacheFrameLoadDelegateImplementations;
 - (void) _cacheScriptDebugDelegateImplementations;
 - (void) _cacheHistoryDelegateImplementations;
 - (id) caretChangeListener;
 - (id) caretChangeListeners;
 - (void) addCaretChangeListener:(id)a ;
 - (void) removeCaretChangeListener:(id)a ;
 - (id) _displayURL;
 - (void) _setUseFastImageScalingMode:(BOOL)a ;
 - (BOOL) _inFastImageScalingMode;
 - (BOOL) _cookieEnabled;
 - (void) _setCookieEnabled:(BOOL)a ;
 - (void) _destroyAllPlugIns;
 - (void) _clearBackForwardCache;
 - (void) _setNeedsUnrestrictedGetMatchedCSSRules:(BOOL)a ;
 - (void) _attachScriptDebuggerToAllFrames;
 - (void) _detachScriptDebuggerFromAllFrames;
 - (id) quickLookContentForURL:(id)a ;
 - (void) _setAllowsMessaging:(BOOL)a ;
 - (id) _globalHistoryItem;
 - (id) textIteratorForRect:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (void) _executeCoreCommandByName:(id)a value:(id)b ;
 - (void) _clearMainFrameName;
 - (void) setSelectTrailingWhitespaceEnabled:(BOOL)a ;
 - (BOOL) isSelectTrailingWhitespaceEnabled;
 - (void) setMemoryCacheDelegateCallsEnabled:(BOOL)a ;
 - (BOOL) areMemoryCacheDelegateCallsEnabled;
 - (BOOL) _postsAcceleratedCompositingNotifications;
 - (void) _setPostsAcceleratedCompositingNotifications:(BOOL)a ;
 - (void) _setBaseCTM:({CGAffineTransform=dddddd})a forContext:(^{CGContext=})b ;
 - (void) setInteractiveFormValidationEnabled:(BOOL)a ;
 - (void) setValidationMessageTimerMagnification:(int)a ;
 - (BOOL) _isSoftwareRenderable;
 - (void) _setIncludesFlattenedCompositingLayersWhenDrawingToBitmap:(BOOL)a ;
 - (void) setTracksRepaints:(BOOL)a ;
 - (BOOL) isTrackingRepaints;
 - (void) resetTrackedRepaints;
 - (id) trackedRepaintRects;
 - (void) _updateVisibilityState;
 - (void) _updateActiveState;
 - (BOOL) allowsNewCSSAnimationsWhileSuspended;
 - (void) setAllowsNewCSSAnimationsWhileSuspended:(BOOL)a ;
 - (BOOL) cssAnimationsSuspended;
 - (void) setCSSAnimationsSuspended:(BOOL)a ;
 - (void) _scaleWebView:(float)a atOrigin:({CGPoint=dd})b ;
 - (float) _viewScaleFactor;
 - (void) _setUseFixedLayout:(BOOL)a ;
 - (void) _listenForLayoutMilestones:(unsigned long long)a ;
 - (unsigned long long) _layoutMilestones;
 - (int) _visibilityState;
 - (void) _setVisibilityState:(int)a isInitialState:(BOOL)b ;
 - (unsigned long long) markAllMatchesForText:(id)a caseSensitive:(BOOL)b highlight:(BOOL)c limit:(unsigned long long)d ;
 - (unsigned long long) countMatchesForText:(id)a caseSensitive:(BOOL)b highlight:(BOOL)c limit:(unsigned long long)d markMatches:(BOOL)e ;
 - (BOOL) _wantsTelephoneNumberParsing;
 - (BOOL) _webGLEnabled;
 - (void) _setWebGLEnabled:(BOOL)a ;
 - (void) _setSourceApplicationAuditData:(id)a ;
 - (id) initWithFrame:({CGRect={CGPoint=dd}{CGSize=dd}})a frameName:(id)b groupName:(id)c ;
 - (id) frameLoadDelegate;
 - (id) _focusedFrame;
 - (float) _zoomMultiplier:(BOOL)a ;
 - (id) customTextEncodingName;
 - (id) _mainFrameOverrideEncoding;
 - (id) _frameViewAtWindowPoint:({CGPoint=dd})a ;
 - (id) _elementAtWindowPoint:({CGPoint=dd})a ;
 - (BOOL) _isLoading;
 - (BOOL) _isMIMETypeRegisteredAsPlugin:(id)a ;
 - (id) _initWithArguments:(id)a ;
 - (void) setShouldCloseWithWindow:(BOOL)a ;
 - (BOOL) shouldCloseWithWindow;
 - (void) setPreferencesIdentifier:(id)a ;
 - (id) selectedFrame;
 - (BOOL) _canZoomOut:(BOOL)a ;
 - (BOOL) _canZoomIn:(BOOL)a ;
 - (void) _zoomOut:(id)a isTextOnly:(BOOL)b ;
 - (void) _zoomIn:(id)a isTextOnly:(BOOL)b ;
 - (BOOL) _canResetZoom:(BOOL)a ;
 - (void) _resetZoom:(id)a isTextOnly:(BOOL)b ;
 - (id) applicationNameForUserAgent;
 - (void) setMediaStyle:(id)a ;
 - (void) setCustomTextEncodingName:(id)a ;
 - (id) windowScriptObject;
 - (id) userAgentForURL:(id)a ;
 - (id) hostWindow;
 - (id) documentViewAtWindowPoint:({CGPoint=dd})a ;
 - (void) setMainFrameURL:(id)a ;
 - (id) mainFrameTitle;
 - (id) mainFrameIconURL;
 - (id) mainFrameDocument;
 - (void) setShouldUpdateWhileOffscreen:(BOOL)a ;
 - (void) takeStringURLFrom:(id)a ;
 - (void) stopLoadingAndClear;
 - (void) reloadFromOrigin:(id)a ;
 - (BOOL) canMakeTextSmaller;
 - (void) makeTextSmaller:(id)a ;
 - (BOOL) canMakeTextLarger;
 - (void) makeTextLarger:(id)a ;
 - (BOOL) canMakeTextStandardSize;
 - (void) makeTextStandardSize:(id)a ;
 - (unsigned long long) countMatchesForText:(id)a inDOMRange:(id)b options:(unsigned long long)c highlight:(BOOL)d limit:(unsigned long long)e markMatches:(BOOL)f ;
 - (id) DOMRangeOfString:(id)a relativeTo:(id)b options:(unsigned long long)c ;
 - (void) setTabKeyCyclesThroughElements:(BOOL)a ;
 - (BOOL) tabKeyCyclesThroughElements;
 - (void) setHistoryDelegate:(id)a ;
 - (BOOL) shouldClose;
 - (BOOL) canMarkAllTextMatches;
 - (void) scrollDOMRangeToVisible:(id)a ;
 - (void) scrollDOMRangeToVisible:(id)a withInset:(double)b ;
 - (BOOL) allowsUndo;
 - (void) setAllowsUndo:(BOOL)a ;
 - (void) setPageSizeMultiplier:(float)a ;
 - (float) pageSizeMultiplier;
 - (BOOL) canZoomPageIn;
 - (void) zoomPageIn:(id)a ;
 - (BOOL) canZoomPageOut;
 - (void) zoomPageOut:(id)a ;
 - (BOOL) canResetPageZoom;
 - (void) resetPageZoom:(id)a ;
 - (void) setMediaVolume:(float)a ;
 - (float) mediaVolume;
 - (void) addVisitedLinks:(id)a ;
 - (void) removeVisitedLink:(id)a ;
 - (id) computedStyleForElement:(id)a pseudoElement:(id)b ;
 - (BOOL) _continuousCheckingAllowed;
 - (void) registerForEditingDelegateNotification:(id)a selector:(SEL)b ;
 - (id) editableDOMRangeForPoint:({CGPoint=dd})a ;
 - (void) setTypingStyle:(id)a ;
 - (id) typingStyle;
 - (id) styleDeclarationWithText:(id)a ;
 - (BOOL) isAutomaticQuoteSubstitutionEnabled;
 - (BOOL) isAutomaticLinkDetectionEnabled;
 - (BOOL) isAutomaticDashSubstitutionEnabled;
 - (BOOL) isAutomaticTextReplacementEnabled;
 - (BOOL) isAutomaticSpellingCorrectionEnabled;
 - (void) replaceSelectionWithNode:(id)a ;
 - (void) replaceSelectionWithText:(id)a ;
 - (void) replaceSelectionWithMarkupString:(id)a ;
 - (void) replaceSelectionWithArchive:(id)a ;
 - (void) deleteSelection;
 - (id) _responderForResponderOperations;
 - (void) _performResponderOperation:(SEL)a with:(id)b ;
 - (void) changeAttributes:(id)a ;
 - (void) changeBaseWritingDirection:(id)a ;
 - (void) changeBaseWritingDirectionToLTR:(id)a ;
 - (void) changeBaseWritingDirectionToRTL:(id)a ;
 - (void) changeColor:(id)a ;
 - (void) changeDocumentBackgroundColor:(id)a ;
 - (void) changeFont:(id)a ;
 - (void) changeSpelling:(id)a ;
 - (void) checkSpelling:(id)a ;
 - (void) complete:(id)a ;
 - (void) copyFont:(id)a ;
 - (void) makeBaseWritingDirectionLeftToRight:(id)a ;
 - (void) makeBaseWritingDirectionRightToLeft:(id)a ;
 - (void) orderFrontSubstitutionsPanel:(id)a ;
 - (void) pasteAsRichText:(id)a ;
 - (void) pasteFont:(id)a ;
 - (void) performFindPanelAction:(id)a ;
 - (void) showGuessPanel:(id)a ;
 - (void) startSpeaking:(id)a ;
 - (void) stopSpeaking:(id)a ;
 - (void) takeFindStringFromSelection:(id)a ;
 - (void) toggleBaseWritingDirection:(id)a ;
 - (void) _insertNewlineInQuotedContent;
 - (void) _replaceSelectionWithNode:(id)a matchStyle:(BOOL)b ;
 - (BOOL) _selectionIsCaret;
 - (BOOL) _selectionIsAll;
 - (void) _simplifyMarkup:(id)a endNode:(id)b ;
 - (void) _retrieveKeyboardUIModeFromPreferences:(id)a ;
 - (BOOL) _becomingFirstResponderFromOutside;
 - (BOOL) _needsOneShotDrawingSynchronization;
 - ({CGPoint=dd}) _convertPointFromRootView:({CGPoint=dd})a ;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _convertRectFromRootView:({CGRect={CGPoint=dd}{CGSize=dd}})a ;
 - (void) _setDeviceOrientationProvider:(id)a ;
 - (void) _setGeolocationProvider:(id)a ;
 - (void) _setNotificationProvider:(id)a ;
 - (void) _notificationDidShow:(unsigned long long)a ;
 - (void) _notificationDidClick:(unsigned long long)a ;
 - (void) _notificationsDidClose:(id)a ;
 - (unsigned long long) _notificationIDForTesting:(^{OpaqueJSValue=})a ;
 - (id) fullScreenPlaceholderView;
 - (BOOL) acceptsFirstResponder;
 - (void) _dispatchTileDidDraw:(id)a ;
 - (void) _scheduleLayerFlushForPendingTileCacheRepaint;
 - (void) _willStartScrollingOrZooming;
 - (void) _didFinishScrollingOrZooming;
 - (BOOL) becomeFirstResponder;
 - (void) viewDidMoveToWindow;


@end
