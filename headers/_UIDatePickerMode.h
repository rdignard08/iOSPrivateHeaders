
@interface _UIDatePickerMode : NSObject {

    @"NSDateComponents" _selectedDateComponents;
    @"NSDateComponents" _baseDateComponents;
    ^Q _elements;
    q _yearsSinceBaseDate;
    {_NSRange="location"Q"length"Q} _maxDayRange;
    {_NSRange="location"Q"length"Q} _maxMonthRange;
    @"NSString" _localizedFormatString;
    @"NSArray" _dateFormatters;
    @"UIColor" _todayTextColor;
    @"UIFont" _amPmFont;
    @"UIFont" _font;
    @"UIFont" _defaultTimeFont;
    @"NSString" _amString;
    @"NSString" _pmString;
    @"NSDateComponents" _todayDateComponents;
    @"NSNumberFormatter" _formatter;
    @"_UIDatePickerView" _datePickerView;
    BOOL _isUsingJapaneseCalendar;
    Q _numberOfComponents;
    q _minuteInterval;
    d _todaySinceReferenceDate;
    @"NSDate" _minimumDate;
    @"NSDateComponents" _minimumDateComponents;
    @"NSDate" _maximumDate;
    @"NSDateComponents" _maximumDateComponents;
    @"NSDate" _baseDate;
    @"NSDate" _originatingDate;
}
@property (nonatomic, assign, readonly) NSNumber* datePickerMode;
@property (nonatomic, assign, readonly) NSNumber* rowHeight;
@property (nonatomic, assign, readwrite) NSNumber* numberOfComponents;
@property (nonatomic, assign, readonly) NSNumber* displayedCalendarUnits;
@property (nonatomic, assign, readonly) UIColor* todayTextColor;
@property (nonatomic, assign, readwrite) NSNumber* minuteInterval;
@property (nonatomic, retain, readwrite) NSDateComponents* todayDateComponents;
@property (nonatomic, assign, readwrite) NSNumber* todaySinceReferenceDate;
@property (nonatomic, assign, readonly) NSDate* minimumDate;
@property (nonatomic, assign, readonly) NSDateComponents* minimumDateComponents;
@property (nonatomic, assign, readonly) NSDate* maximumDate;
@property (nonatomic, assign, readonly) NSDateComponents* maximumDateComponents;
@property (nonatomic, retain, readwrite) NSDateComponents* selectedDateComponents;
@property (nonatomic, assign, readonly) NSNumber* totalComponentWidth;
@property (nonatomic, assign, readonly, is24Hour) NSNumber* is24Hour;
@property (nonatomic, assign, readonly, isTimeIntervalMode) NSNumber* isTimeIntervalMode;
@property (nonatomic, assign, readwrite) _UIDatePickerView* datePickerView;
@property (nonatomic, assign, readonly) UIFont* amPmFont;
@property (nonatomic, assign, readonly) UIFont* font;
@property (nonatomic, assign, readonly) UIFont* defaultTimeFont;
@property (nonatomic, assign, readonly) UIFont* sizedFont;
@property (nonatomic, assign, readonly) NSString* amString;
@property (nonatomic, assign, readonly) NSString* pmString;
@property (nonatomic, assign, readwrite) NSNumber* elements;
@property (nonatomic, retain, readwrite) NSString* localizedFormatString;
@property (nonatomic, retain, readwrite) NSDate* baseDate;
@property (nonatomic, retain, readwrite) NSDateComponents* baseDateComponents;
@property (nonatomic, assign, readwrite) NSNumber* yearsSinceBaseDate;
@property (nonatomic, retain, readwrite) NSDate* originatingDate;
 + (void) initialize;
 + (q) datePickerMode;
 + (id) _datePickerModeWithMode:(q)adatePickerView:(id)b;
 + (Q) extractableCalendarUnits;
 + (id) newDateFromGregorianYear:(q)amonth:(q)bday:(q)ctimeZone:(id)d;
 + (id) _datePickerModeWithFormatString:(id)adatePickerView:(id)b;

 - (void) dealloc;
 - (id) locale;
 - (id) timeZone;
 - (id) calendar;
 - (Q) numberOfComponents;
 - (q) numberOfRowsInComponent:(q)a;
 - (d) rowHeight;
 - (id) amString;
 - (id) pmString;
 - (void) setMinuteInterval:(q)a;
 - (q) datePickerMode;
 - (id) minimumDate;
 - (id) maximumDate;
 - (q) minuteInterval;
 - (void) setTodayDateComponents:(id)a;
 - (BOOL) isTimeIntervalMode;
 - (void) noteCalendarChanged;
 - (void) takeExtremesFromMinimumDate:(id)amaximumDate:(id)b;
 - (q) displayedCalendarUnits;
 - (q) componentForCalendarUnit:(Q)a;
 - (BOOL) is24Hour;
 - (q) hourForRow:(q)a;
 - (void) updateSelectedDateComponentsWithNewValueInComponent:(q)a;
 - (void) loadDate:(id)aanimated:(BOOL)b;
 - (q) minuteForRow:(q)a;
 - (BOOL) areValidDateComponents:(id)acomparingUnits:(q)b;
 - (id) dateComponentsByRestrictingSelectedComponents:(id)awithLastManipulatedColumn:(q)b;
 - (id) selectedDateComponents;
 - (id) fontForCalendarUnit:(Q)a;
 - (id) viewForRow:(q)ainComponent:(q)breusingView:(id)c;
 - (Q) calendarUnitForComponent:(q)a;
 - (void) updateEnabledStateOfViewForRow:(q)ainComponent:(q)b;
 - (d) totalComponentWidth;
 - (d) widthForComponent:(q)amaxWidth:(d)b;
 - (void) resetComponentWidths;
 - (void) resetSelectedDateComponentsWithValuesUnderSelectionBars;
 - (void) setDatePickerView:(id)a;
 - (void) _shouldReset:(id)a;
 - (id) datePickerView;
 - (id) dateFormatterForCalendarUnit:(Q)a;
 - (id) calendarForFormatters;
 - (id) dateFormatForCalendarUnit:(Q)a;
 - (void) setTodaySinceReferenceDate:(d)a;
 - (id) todayDateComponents;
 - (void) setOriginatingDate:(id)a;
 - (void) setBaseDateComponents:(id)a;
 - (void) setBaseDate:(id)a;
 - (void) setYearsSinceBaseDate:(q)a;
 - (id) baseDateComponents;
 - (id) baseDate;
 - (id) amPmFont;
 - (id) sizedFont;
 - (d) totalComponentWidthWithFont:(id)a;
 - (d) widthForCalendarUnit:(Q)afont:(id)bmaxWidth:(d)c;
 - (void) setNumberOfComponents:(Q)a;
 - (id) localizedFormatString;
 - (q) numberOfRowsForCalendarUnit:(Q)a;
 - (void) clearBaseDate;
 - (void) setLocalizedFormatString:(id)a;
 - (q) _yearlessYearForMonth:(q)a;
 - (Q) nextUnitSmallerThanUnit:(Q)a;
 - (Q) nextUnitLargerThanUnit:(Q)a;
 - ({_NSRange=QQ}) rangeForCalendarUnit:(Q)a;
 - (q) _incrementForStaggeredTimeIntervals;
 - (id) _dateForYearRow:(q)a;
 - (q) secondForRow:(q)a;
 - (q) dayForRow:(q)a;
 - (q) monthForRow:(q)a;
 - (q) yearForRow:(q)a;
 - (q) eraForYearRow:(q)a;
 - (q) valueForRow:(q)ainCalendarUnit:(Q)b;
 - (id) _dateByEnsuringValue:(q)aforCalendarUnit:(Q)b;
 - (id) dateForRow:(q)ainCalendarUnit:(Q)b;
 - (q) valueForDate:(id)adateComponents:(id)bcalendarUnit:(Q)c;
 - (q) rowForValue:(q)aforCalendarUnit:(Q)bcurrentRow:(q)c;
 - (q) rowForDate:(id)adateComponents:(id)bcomponent:(q)ccurrentRow:(q)d;
 - (void) setSelectedDateComponents:(id)a;
 - (void) _updateSelectedDateComponentsWithNewValueInComponent:(q)ausingSelectionBarValue:(BOOL)b;
 - (id) originatingDate;
 - (BOOL) _monthExists:(q)ainYear:(q)b;
 - (q) _numberOfDaysInDateComponents:(id)a;
 - (q) titleAlignmentForCalendarUnit:(Q)a;
 - (id) titleForRow:(q)ainComponent:(q)b;
 - (BOOL) _shouldEnableValueForRow:(q)acolumn:(q)b;
 - (id) todayTextColor;
 - (BOOL) _isComponentScrolling:(q)a;
 - (BOOL) _shouldEnableValueForRow:(q)ainComponent:(q)bcalendarUnit:(Q)c;
 - (BOOL) _scrollingAnyColumnExcept:(i)a;
 - (d) componentWidthForTwoDigitCalendarUnit:(Q)afont:(id)bmaxWidth:(d)c;
 - (d) todaySinceReferenceDate;
 - (q) yearsSinceBaseDate;
 - (id) defaultTimeFont;
 - (q) validateValue:(q)aforCalendarUnit:(Q)b;
 - (id) minimumDateComponents;
 - (id) maximumDateComponents;
 - (id) init;
 - (void) setElements:(^Q)a;
 - (^Q) elements;
 - (id) font;


@end
