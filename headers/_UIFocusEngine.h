
@protocol UIGestureRecognizerDelegate;
@interface _UIFocusEngine : NSObject <UIGestureRecognizerDelegate> {

    @"UIPanGestureRecognizer" _panGestureRecognizer;
    @"_UIFocusEngineTapGestureRecognizer" _tapGestureRecognizer;
    {CGPoint="x"d"y"d} _movementOriginPoint;
    {CGPoint="x"d"y"d} _originalTouchPointNormalized;
    {CGPoint="x"d"y"d} _lastTouchPointNormalized;
    {CGPoint="x"d"y"d} _momentumNormalized;
    @"_UIDynamicAnimationGroup" _touchMomentumAnimationGroup;
    @"_UIFocusEngineTargetedDynamicAnimation" _scrollAnimationAxisX;
    @"_UIFocusEngineTargetedDynamicAnimation" _scrollAnimationAxisY;
    @"_UIDynamicAnimationGroup" _scrollAnimationGroup;
    @"NSArray" _remoteGestures;
    @"_UIFocusEngineTargetedDynamicAnimation" _focusDirectionRollbackAnimation;
    unsigned long long _currentGestureID;
    unsigned int _tickSoundID;
    @"UIScrollView" _lastScrolledScroll;
    double _lastEdgeScrollEdgeValue;
    @"NSUserDefaults" _userDefaults;
    @"_UIFocusTouchDebugView" _touchIndicatorView;
    @"NSMapTable" _activeScrollViewBounds;
    {?="isSettingFocusedView"b1"isTrackingTouch"b1"isContinuingTouchWithMomentum"b1"isAnimatingFocusDirectionRollback"b1"shouldShowDebugOverlays"b1} _flags;
    BOOL _enabled;
    BOOL _shouldShowDebugOverlays;
    BOOL _sendsFocusDirection;
    BOOL _playsSoundOnFocusChange;
    @"UIWindow" _targetWindow;
    @"UIMoveEvent" _moveEvent;
}
@property (nonatomic, assign, readwrite, isEnabled) NSNumber* enabled;
@property (nonatomic, assign, readwrite) UIWindow* targetWindow;
@property (nonatomic, assign, readwrite) NSNumber* shouldShowDebugOverlays;
@property (nonatomic, retain, readwrite) UIMoveEvent* moveEvent;
@property (nonatomic, assign, readwrite, _sendsFocusDirection, _setSendsFocusDirection:) NSNumber* sendsFocusDirection;
@property (nonatomic, assign, readwrite, _playsSoundOnFocusChange, _setPlaysSoundOnFocusChange:) NSNumber* playsSoundOnFocusChange;
 + (void) initialize;
 + (id) defaultTuningValues;
 + (void) resetTuningValues;
 + (void) resetTuningValuesIfNecessary;

 - (void) reset;
 - (void) dealloc;
 - (BOOL) gestureRecognizer:(id)ashouldRecognizeSimultaneouslyWithGestureRecognizer:(id)b;
 - (BOOL) gestureRecognizer:(id)ashouldReceiveTouch:(id)b;
 - (void) _setupTickSound;
 - (void) _cleanupTickSound;
 - (void) setTargetWindow:(id)a;
 - (void) _removeGestureRecognizers;
 - (void) _addGestureRecognizers;
 - (BOOL) moveInDirection:(unsigned long long)a;
 - (void) setMoveEvent:(id)a;
 - ({CGSize=dd}) _vectorForFocusHeading:(unsigned long long)a;
 - (id) _focusedView;
 - (id) _bestFocusCandidateForFocusHeading:(unsigned long long)acurrentFocusView:(id)bdirection:({CGSize=dd})cinView:(id)d;
 - (void) _updateFocusedViewAndScroll:(id)a;
 - (void) _resetFocusDirectionRollback;
 - (void) _resetMomentum;
 - (void) _panGestureStart:(id)a;
 - (void) _panGestureUpdate:(id)aatLocation:({CGPoint=dd})breportedVelocity:({CGPoint=dd})c;
 - (void) _panGestureEnd:(id)a;
 - (int) _touchRegionForDigitizerLocation:({CGPoint=dd})a;
 - (void) _handlePanGesture:(id)a;
 - (void) _handleTapGesture:(id)a;
 - (void) _handleButtonGesture:(id)a;
 - (void) _updateScrollView:(id)avisibleBounds:({CGRect={CGPoint=dd}{CGSize=dd}})b;
 - (void) _loadScrollViewContentInDirection:({CGSize=dd})afromView:(id)b;
 - (id) _bestFocusCandidateStartingAtView:(id)ainDirection:({CGSize=dd})binView:(id)c;
 - (void) _setFocusedView:(id)a;
 - (void) _scrollFromView:(id)atoView:(id)b;
 - (BOOL) _playsSoundOnFocusChange;
 - (void) _playTickSound;
 - (void) _sendGestureBeginNotification;
 - ({CGSize=dd}) _touchSensitivityForView:(id)a;
 - (void) _updateDebugOverlayWithTouchAtNormalizedPoint:({CGPoint=dd})anavigationBoundary:({CGRect={CGPoint=dd}{CGSize=dd}})b;
 - (void) _recordMomentumForPoint:({CGPoint=dd})a;
 - (BOOL) _sendsFocusDirection;
 - (BOOL) _moveFocusAlongVector:({CGSize=dd})a;
 - (void) _updateDebugOverlayByRemovingTouchIndicators;
 - (void) _continueTouchWithMomentum;
 - (void) _startFocusDirectionRollback;
 - (void) _sendGestureEndNotification;
 - ({CGPoint=dd}) _contentOffsetForScrollView:(id)atoFocusView:(id)b;
 - (void) _setupDebugOverlays;
 - (void) _teardownDebugOverlays;
 - (id) _closestFocusableViewToRect:({CGRect={CGPoint=dd}{CGSize=dd}})ainView:(id)b;
 - (BOOL) moveWithEvent:(id)a;
 - (void) _gestureRecognizerFailed:(id)a;
 - ({CGRect={CGPoint=dd}{CGSize=dd}}) _visibleBoundsForScrollView:(id)a;
 - (void) setShouldShowDebugOverlays:(BOOL)a;
 - (id) _closestFocusableViewToPoint:({CGPoint=dd})ainView:(id)b;
 - (id) targetWindow;
 - (BOOL) shouldShowDebugOverlays;
 - (id) moveEvent;
 - (void) _setSendsFocusDirection:(BOOL)a;
 - (void) _setPlaysSoundOnFocusChange:(BOOL)a;
 - (id) init;
 - (BOOL) isEnabled;
 - (void) setEnabled:(BOOL)a;


@end
