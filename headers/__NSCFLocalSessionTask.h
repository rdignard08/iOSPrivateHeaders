
@protocol NSURLSessionTaskSubclass, NSURLSessionDataTaskSubclass, NSURLSessionUploadTaskSubclass, SessionConnectionDelegate;
@interface __NSCFLocalSessionTask : NSURLSessionTask <NSURLSessionTaskSubclass, NSURLSessionDataTaskSubclass, NSURLSessionUploadTaskSubclass, SessionConnectionDelegate> {

    BOOL _pendingResponseDisposition;
    BOOL _pendingResponseDisposition_didFinish;
    BOOL _duetAccountingIsDiscretionary;
    BOOL _didIssueDidFinish;
    __NSCFURLSessionConnection* _cfConn;
    NSURL* _uploadFile;
    NSData* _uploadData;
    NSInputStream* _uploadDataStream;
    NSObject<OS_dispatch_data>* _dataTaskData;
    @? _dataTaskCompletion;
    NSObject<OS_dispatch_data>* _pendingResponseBytes;
    __NSURLSessionLocal* _localSession;
    unsigned long long _suspendCount;
    @? _async_initialization;
    NSObject<OS_dispatch_source>* _resourceTimeout;
    NSString* _duetAccountedBundleID;
    ^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii} _connKey;
    NSURLSessionConfiguration* __configuration;
}

 - (void) suspend;
 - (void) resume;
 - (void) af_suspend;
 - (void) af_resume;
 - (id) description;
 - (void) dealloc;
 - (id) cfConn;
 - (void) setConnection:(id)a ;
 - (id) initWithOriginalRequest:(id)a updatedRequest:(id)b ident:(unsigned long long)c session:(id)d ;
 - (void) setDataTaskCompletion:(@?)a ;
 - (void) setUploadFile:(id)a ;
 - (id) _onqueue_strippedMutableRequest;
 - (void) setAsync_initialization:(@?)a ;
 - (void) _onqueue_completeInitialization;
 - (void) _private_onqueue_didReceiveResponse:(id)a ;
 - (@?) dataTaskCompletion;
 - (id) localSession;
 - (void) _onqueue_suspend;
 - (void) setPendingResponseDisposition:(BOOL)a ;
 - (void) _private_onqueue_didReceiveResponseDisposition:(long long)a ;
 - (void) _onqueue_didReceiveResponse:(id)a completion:(@?)b ;
 - (void) setLocalSession:(id)a ;
 - (void) setSuspendCount:(unsigned long long)a ;
 - (id) initWithTask:(id)a ;
 - (id) resourceTimeout;
 - (void) setCfConn:(id)a ;
 - (void) setUploadData:(id)a ;
 - (void) setUploadDataStream:(id)a ;
 - (void) setDataTaskData:(id)a ;
 - (void) setPendingResponseBytes:(id)a ;
 - (^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii}) connKey;
 - (void) setConnKey:(^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii})a ;
 - (void) _onqueue_resume;
 - (BOOL) pendingResponseDisposition_didFinish;
 - (void) setPendingResponseDisposition_didFinish:(BOOL)a ;
 - (void) _task_onqueue_didFinish;
 - (void) _onqueue_cancel;
 - (id) pendingResponseBytes;
 - (void) _finishAllow;
 - (void) _task_onqueue_didReceiveDispatchData:(id)a completionHandler:(@?)b ;
 - (void) _finishBecomeStream:(id)a ;
 - (void) _finishBecomeDownload:(id)a ;
 - (BOOL) pendingResponseDisposition;
 - (id) dataTaskData;
 - (BOOL) didIssueDidFinish;
 - (void) setDidIssueDidFinish:(BOOL)a ;
 - (@?) async_initialization;
 - (void) _onqueue_didFinishWithError:(id)a ;
 - (id) canceledError;
 - (void) _onqueue_cancel_with_error:(id)a ;
 - (unsigned long long) suspendCount;
 - (id) error:(id)a code:(long long)b ;
 - (void) startResourceTimer;
 - (void) setResourceTimeout:(id)a ;
 - (id) timeoutError;
 - (void) _onqueue_didReceiveResponse:(id)a redirectRequest:(id)b withCompletion:(@?)c ;
 - (void) _onqueue_willCacheResponse:(id)a withCompletion:(@?)b ;
 - (void) _onqueue_needNewBodyStream:(id)a withCompletion:(@?)b ;
 - (void) _onqueue_didReceiveChallenge:(id)a request:(id)b withCompletion:(@?)c ;
 - (void) _onqueue_didReceiveDispatchData:(id)a completion:(@?)b ;
 - (void) _onqueue_didSendBodyBytes:(long long)a totalBytesSent:(long long)b totalBytesExpectedToSend:(long long)c ;
 - (void) _onqueue_willSendRequestForEstablishedConnection:(id)a withCompletion:(@?)b ;
 - (void) _onqueue_connectionWaitingWithReason:(long long)a ;
 - (void) _onqueue_conditionalRequirementsChanged:(BOOL)a ;
 - (void) _onqueue_adjustPoolPriority;
 - (void) _onqueue_disavow;
 - (void) connection:(id)a wasRedirected:(id)b newRequest:(id)c responseCallback:(@?)d ;
 - (void) connection:(id)a request:(id)b needsNewBodyStreamCallback:(@?)c ;
 - (void) connection:(id)a didReceiveResponse:(id)b completion:(@?)c ;
 - (void) connection:(id)a willCacheResponse:(id)b responseCallback:(@?)c ;
 - (void) connectionWillFinishLoading:(id)a ;
 - (void) connection:(id)a didFinishLoadingWithError:(id)b ;
 - (void) connection:(id)a didReceiveConnectionCacheKey:(^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii})b ;
 - (void) connection:(id)a challenged:(id)b authCallback:(@?)c ;
 - (void) connection:(id)a didReceiveData:(id)b completion:(@?)c ;
 - (void) connection:(id)a sentBodyBytes:(id)b totalBytes:(id)c expectedBytes:(id)d ;
 - (void) connection:(id)a _willSendRequestForEstablishedConnection:(id)b completion:(@?)c ;
 - (void) connection:(id)a waitingWithReason:(long long)b ;
 - (void) connection:(id)a _conditionalRequirementsChanged:(BOOL)b ;
 - (void) _onqueue_adjustPriorityHint:(float)a ;
 - (void) cancel_with_error:(id)a ;
 - (id) nsurlError:(int)a ;
 - (id) posixError:(int)a ;
 - (id) uploadFile;
 - (id) uploadData;
 - (id) uploadDataStream;
 - (id) duetAccountedBundleID;
 - (void) setDuetAccountedBundleID:(id)a ;
 - (BOOL) duetAccountingIsDiscretionary;
 - (void) setDuetAccountingIsDiscretionary:(BOOL)a ;
 - (id) _configuration;
 - (void) set_configuration:(id)a ;


@end
