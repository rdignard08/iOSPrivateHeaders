
@protocol NSURLSessionTaskSubclass, NSURLSessionDataTaskSubclass, NSURLSessionUploadTaskSubclass, SessionConnectionDelegate;
@interface __NSCFLocalSessionTask : NSURLSessionTask <NSURLSessionTaskSubclass, NSURLSessionDataTaskSubclass, NSURLSessionUploadTaskSubclass, SessionConnectionDelegate> {

    BOOL _pendingResponseDisposition;
    BOOL _pendingResponseDisposition_didFinish;
    BOOL _duetAccountingIsDiscretionary;
    BOOL _didIssueDidFinish;
    @"__NSCFURLSessionConnection" _cfConn;
    @"NSURL" _uploadFile;
    @"NSData" _uploadData;
    @"NSInputStream" _uploadDataStream;
    @"NSObject<OS_dispatch_data>" _dataTaskData;
    @? _dataTaskCompletion;
    @"NSObject<OS_dispatch_data>" _pendingResponseBytes;
    @"__NSURLSessionLocal" _localSession;
    Q _suspendCount;
    @? _async_initialization;
    @"NSObject<OS_dispatch_source>" _resourceTimeout;
    @"NSString" _duetAccountedBundleID;
    ^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii} _connKey;
    @"NSURLSessionConfiguration" __configuration;
}

 - (void) suspend;
 - (void) resume;
 - (void) af_suspend;
 - (void) af_resume;
 - (id) description;
 - (void) dealloc;
 - (id) cfConn;
 - (void) setConnection:(id)a;
 - (id) initWithOriginalRequest:(id)aupdatedRequest:(id)bident:(Q)csession:(id)d;
 - (void) setDataTaskCompletion:(@?)a;
 - (void) setUploadFile:(id)a;
 - (id) _onqueue_strippedMutableRequest;
 - (void) setAsync_initialization:(@?)a;
 - (void) _onqueue_completeInitialization;
 - (void) _private_onqueue_didReceiveResponse:(id)a;
 - (@?) dataTaskCompletion;
 - (id) localSession;
 - (void) _onqueue_suspend;
 - (void) setPendingResponseDisposition:(BOOL)a;
 - (void) _private_onqueue_didReceiveResponseDisposition:(q)a;
 - (void) _onqueue_didReceiveResponse:(id)acompletion:(@?)b;
 - (void) setLocalSession:(id)a;
 - (void) setSuspendCount:(Q)a;
 - (id) initWithTask:(id)a;
 - (id) resourceTimeout;
 - (void) setCfConn:(id)a;
 - (void) setUploadData:(id)a;
 - (void) setUploadDataStream:(id)a;
 - (void) setDataTaskData:(id)a;
 - (void) setPendingResponseBytes:(id)a;
 - (^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii}) connKey;
 - (void) setConnKey:(^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii})a;
 - (void) _onqueue_resume;
 - (BOOL) pendingResponseDisposition_didFinish;
 - (void) setPendingResponseDisposition_didFinish:(BOOL)a;
 - (void) _task_onqueue_didFinish;
 - (void) _onqueue_cancel;
 - (id) pendingResponseBytes;
 - (void) _finishAllow;
 - (void) _task_onqueue_didReceiveDispatchData:(id)acompletionHandler:(@?)b;
 - (void) _finishBecomeStream:(id)a;
 - (void) _finishBecomeDownload:(id)a;
 - (BOOL) pendingResponseDisposition;
 - (id) dataTaskData;
 - (BOOL) didIssueDidFinish;
 - (void) setDidIssueDidFinish:(BOOL)a;
 - (@?) async_initialization;
 - (void) _onqueue_didFinishWithError:(id)a;
 - (id) canceledError;
 - (void) _onqueue_cancel_with_error:(id)a;
 - (Q) suspendCount;
 - (id) error:(id)acode:(q)b;
 - (void) startResourceTimer;
 - (void) setResourceTimeout:(id)a;
 - (id) timeoutError;
 - (void) _onqueue_didReceiveResponse:(id)aredirectRequest:(id)bwithCompletion:(@?)c;
 - (void) _onqueue_willCacheResponse:(id)awithCompletion:(@?)b;
 - (void) _onqueue_needNewBodyStream:(id)awithCompletion:(@?)b;
 - (void) _onqueue_didReceiveChallenge:(id)arequest:(id)bwithCompletion:(@?)c;
 - (void) _onqueue_didReceiveDispatchData:(id)acompletion:(@?)b;
 - (void) _onqueue_didSendBodyBytes:(q)atotalBytesSent:(q)btotalBytesExpectedToSend:(q)c;
 - (void) _onqueue_willSendRequestForEstablishedConnection:(id)awithCompletion:(@?)b;
 - (void) _onqueue_connectionWaitingWithReason:(q)a;
 - (void) _onqueue_conditionalRequirementsChanged:(BOOL)a;
 - (void) _onqueue_adjustPoolPriority;
 - (void) _onqueue_disavow;
 - (void) connection:(id)awasRedirected:(id)bnewRequest:(id)cresponseCallback:(@?)d;
 - (void) connection:(id)arequest:(id)bneedsNewBodyStreamCallback:(@?)c;
 - (void) connection:(id)adidReceiveResponse:(id)bcompletion:(@?)c;
 - (void) connection:(id)awillCacheResponse:(id)bresponseCallback:(@?)c;
 - (void) connectionWillFinishLoading:(id)a;
 - (void) connection:(id)adidFinishLoadingWithError:(id)b;
 - (void) connection:(id)adidReceiveConnectionCacheKey:(^{HTTPConnectionCacheKey=^^?^{__CFAllocator}iQ^{__CFString}ii^{__CFDictionary}Q^{__CFDictionary}^{NetworkProxy}^{__CFString}ii})b;
 - (void) connection:(id)achallenged:(id)bauthCallback:(@?)c;
 - (void) connection:(id)adidReceiveData:(id)bcompletion:(@?)c;
 - (void) connection:(id)asentBodyBytes:(id)btotalBytes:(id)cexpectedBytes:(id)d;
 - (void) connection:(id)a_willSendRequestForEstablishedConnection:(id)bcompletion:(@?)c;
 - (void) connection:(id)awaitingWithReason:(q)b;
 - (void) connection:(id)a_conditionalRequirementsChanged:(BOOL)b;
 - (void) _onqueue_adjustPriorityHint:(f)a;
 - (void) cancel_with_error:(id)a;
 - (id) nsurlError:(i)a;
 - (id) posixError:(i)a;
 - (id) uploadFile;
 - (id) uploadData;
 - (id) uploadDataStream;
 - (id) duetAccountedBundleID;
 - (void) setDuetAccountedBundleID:(id)a;
 - (BOOL) duetAccountingIsDiscretionary;
 - (void) setDuetAccountingIsDiscretionary:(BOOL)a;
 - (id) _configuration;
 - (void) set_configuration:(id)a;


@end
