
@protocol NDBackgroundSessionClient, NSURLSessionSubclass;
@interface __NSURLBackgroundSession : NSURLSession <NDBackgroundSessionClient, NSURLSessionSubclass> {

    unsigned long long _identSeed;
    <NDBackgroundSessionProtocol>* _remoteSession;
    NSXPCConnection* _xpcConn;
    NSMutableDictionary* _tasks;
    NSMutableArray* _taskIDsToFailOnReconnection;
    NSObject<OS_dispatch_queue>* _invalidateQueue;
    @? _invalidateCallback;
    NSString* _appWakeUUID;
    NSURL* _downloadDirectory;
    BOOL _isPrivileged;
    BOOL _isInvalid;
}

 - (void) dealloc;
 - (void) _onqueue_invokeInvalidateCallback;
 - (id) copyTasks;
 - (id) initWithConfiguration:(id)adelegate:(id)bdelegateQueue:(id)c;
 - (void) _onqueue_invalidateSession:(BOOL)awithQueue:(id)bcompletion:(@?)c;
 - (id) dataTaskForRequest:(id)acompletion:(@?)b;
 - (id) uploadTaskForRequest:(id)auploadFile:(id)bbodyData:(id)ccompletion:(@?)d;
 - (id) downloadTaskForRequest:(id)adownloadFilePath:(id)bresumeData:(id)ccompletion:(@?)d;
 - (id) _AVAssetDownloadTaskForURL:(id)adestinationURL:(id)boptions:(id)c;
 - (id) _streamTaskForHost:(id)aport:(long long)btls:(BOOL)ccompletionHandler:(@?)d;
 - (void) _onqueue_flushWithCompletionHandler:(@?)a;
 - (void) _onqueue_completeInvalidation:(BOOL)a;
 - (void) _onqueue_resetStorageWithCompletionHandler:(@?)a;
 - (void) _onqueue_getTasksWithCompletionHandler:(@?)a;
 - (id) backgroundDownloadsDirectory;
 - (id) cachesDirectory;
 - (void) setupXPCConnection;
 - (void) setupBackgroundSession;
 - (void) sendInvalidationRequest;
 - (void) cleanupConfig;
 - (void) wentToBackground:(id)a;
 - (void) cameIntoForeground:(id)a;
 - (void) recreateExistingTasks:(id)a;
 - (void) failDisconnectedTasks;
 - (void) _onqueue_retryDataTaskWithIdentifier:(unsigned long long)a;
 - (id) taskForIdentifier:(unsigned long long)a;
 - (id) disconnectedErrorWithURL:(id)a;
 - (id) _onqueue_dataTaskForRequest:(id)acompletion:(@?)b;
 - (void) performBlockOnQueueAndRethrowExceptions:(@?)a;
 - (void) validateSerializabilityForRequest:(id)acompletion:(id)b;
 - (id) _onqueue_dummyTaskForClass:(Class)awithError:(id)b;
 - (id) requestWithCookiesApplied:(id)a;
 - (id) placeholderErrorWithURL:(id)a;
 - (id) _onqueue_uploadTaskForRequest:(id)auploadFile:(id)bbodyData:(id)ccompletion:(@?)d;
 - (void) validateUploadFile:(id)a;
 - (id) _onqueue_downloadTaskForRequest:(id)aresumeData:(id)bcompletion:(@?)c;
 - (id) backgroundResumeDataFromClientResumeData:(id)a;
 - (id) _downloadTaskForResumeData:(id)a;
 - (id) _downloadTaskForRequest:(id)a;
 - (id) _onqueue_AVAssetDownloadTaskForURL:(id)adestinationURL:(id)boptions:(id)c;
 - (id) connectionLostErrorWithURL:(id)a;
 - (void) setCookiesFromResponse:(id)aforOriginalRequest:(id)b;
 - (id) appWakeUUID;
 - (void) setAppWakeUUID:(id)a;
 - (void) backgroundTaskDidResume:(unsigned long long)a;
 - (void) backgroundTaskDidSuspend:(unsigned long long)a;
 - (void) backgroundTask:(unsigned long long)adidReceiveChallenge:(id)breply:(@?)c;
 - (void) backgroundTask:(unsigned long long)awillPerformHTTPRedirection:(id)bwithNewRequest:(id)creply:(@?)d;
 - (void) backgroundTask:(unsigned long long)a_willSendRequestForEstablishedConnection:(id)breply:(@?)c;
 - (void) backgroundTaskHasConnectionWaiting:(unsigned long long)a;
 - (void) backgroundTask:(unsigned long long)ahasConnectionWaitingWithReason:(long long)b;
 - (void) backgroundTask:(unsigned long long)ahasConnectionWaitingWithError:(id)b;
 - (void) backgroundTask:(unsigned long long)adidReceiveResponse:(id)btimingData:(id)c;
 - (void) backgroundTask:(unsigned long long)adidReceiveResponse:(id)btimingData:(id)creply:(@?)d;
 - (void) backgroundTask:(unsigned long long)adidSendBodyData:(long long)btotalBytesSent:(long long)ctotalBytesExpectedToSend:(long long)d;
 - (void) backgroundTask:(unsigned long long)aneedNewBodyStream:(BOOL)bwithReply:(@?)c;
 - (void) backgroundTask:(unsigned long long)adidCompleteWithError:(id)btimingData:(id)creply:(@?)d;
 - (void) backgroundDataTask:(unsigned long long)adidReceiveData:(id)bwithReply:(@?)c;
 - (void) backgroundDataTaskDidBecomeDownloadTask:(unsigned long long)a;
 - (void) willRetryBackgroundDataTask:(unsigned long long)awithError:(id)btimingData:(id)c;
 - (void) backgroundDownloadTask:(unsigned long long)adidWriteData:(long long)btotalBytesWritten:(long long)ctotalBytesExpectedToWrite:(long long)d;
 - (void) backgroundDownloadTask:(unsigned long long)adidResumeAtOffset:(long long)bexpectedTotalBytes:(long long)c;
 - (void) backgroundDownloadTask:(unsigned long long)adidFinishDownloadingToURL:(id)breply:(@?)c;
 - (void) openFileAtPath:(id)amode:(int)bwithReply:(@?)c;
 - (void) backgroundAVAssetDownloadTaskDidUpdateProgress:(unsigned long long)atotalBytesWritten:(unsigned long long)btotalBytesExpectedToWrite:(unsigned long long)c;
 - (void) backgroundAVAssetDownloadTask:(unsigned long long)adidReceiveDownloadToken:(unsigned long long)b;
 - (void) backgroundSessionDidStartAppWake:(id)areply:(@?)b;
 - (void) backgroundSessionDidFinishAppWake:(id)areply:(@?)b;
 - (void) credStorage_getInitialCredentialDictionariesWithReply:(@?)a;
 - (void) credStorage_credentialsForProtectionSpace:(id)areply:(@?)b;
 - (void) credStorage_allCredentialsWithReply:(@?)a;
 - (void) credStorage_setCredential:(id)aforProtectionSpace:(id)b;
 - (void) credStorage_removeCredential:(id)aforProtectionSpace:(id)b;
 - (void) credStorage_defaultCredentialForProtectionSpace:(id)areply:(@?)b;
 - (void) credStorage_setDefaultCredential:(id)aforProtectionSpace:(id)b;
 - (id) clientResumeDataFromBackgroundResumeData:(id)a;
 - (void) _onqueue_disavowTask:(id)a;


@end
