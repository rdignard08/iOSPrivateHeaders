
@protocol NDBackgroundSessionClient, NSURLSessionSubclass;
@interface __NSURLBackgroundSession : NSURLSession <NDBackgroundSessionClient, NSURLSessionSubclass> {

    unsigned long long _identSeed;
    <NDBackgroundSessionProtocol>* _remoteSession;
    NSXPCConnection* _xpcConn;
    NSMutableDictionary* _tasks;
    NSMutableArray* _taskIDsToFailOnReconnection;
    NSObject<OS_dispatch_queue>* _invalidateQueue;
    @? _invalidateCallback;
    NSString* _appWakeUUID;
    NSURL* _downloadDirectory;
    BOOL _isPrivileged;
    BOOL _isInvalid;
}

 - (void) dealloc;
 - (void) _onqueue_invokeInvalidateCallback;
 - (id) copyTasks;
 - (id) initWithConfiguration:(id)a delegate:(id)b delegateQueue:(id)c ;
 - (void) _onqueue_invalidateSession:(BOOL)a withQueue:(id)b completion:(@?)c ;
 - (id) dataTaskForRequest:(id)a completion:(@?)b ;
 - (id) uploadTaskForRequest:(id)a uploadFile:(id)b bodyData:(id)c completion:(@?)d ;
 - (id) downloadTaskForRequest:(id)a downloadFilePath:(id)b resumeData:(id)c completion:(@?)d ;
 - (id) _AVAssetDownloadTaskForURL:(id)a destinationURL:(id)b options:(id)c ;
 - (id) _streamTaskForHost:(id)a port:(long long)b tls:(BOOL)c completionHandler:(@?)d ;
 - (void) _onqueue_flushWithCompletionHandler:(@?)a ;
 - (void) _onqueue_completeInvalidation:(BOOL)a ;
 - (void) _onqueue_resetStorageWithCompletionHandler:(@?)a ;
 - (void) _onqueue_getTasksWithCompletionHandler:(@?)a ;
 - (id) backgroundDownloadsDirectory;
 - (id) cachesDirectory;
 - (void) setupXPCConnection;
 - (void) setupBackgroundSession;
 - (void) sendInvalidationRequest;
 - (void) cleanupConfig;
 - (void) wentToBackground:(id)a ;
 - (void) cameIntoForeground:(id)a ;
 - (void) recreateExistingTasks:(id)a ;
 - (void) failDisconnectedTasks;
 - (void) _onqueue_retryDataTaskWithIdentifier:(unsigned long long)a ;
 - (id) taskForIdentifier:(unsigned long long)a ;
 - (id) disconnectedErrorWithURL:(id)a ;
 - (id) _onqueue_dataTaskForRequest:(id)a completion:(@?)b ;
 - (void) performBlockOnQueueAndRethrowExceptions:(@?)a ;
 - (void) validateSerializabilityForRequest:(id)a completion:(id)b ;
 - (id) _onqueue_dummyTaskForClass:(Class)a withError:(id)b ;
 - (id) requestWithCookiesApplied:(id)a ;
 - (id) placeholderErrorWithURL:(id)a ;
 - (id) _onqueue_uploadTaskForRequest:(id)a uploadFile:(id)b bodyData:(id)c completion:(@?)d ;
 - (void) validateUploadFile:(id)a ;
 - (id) _onqueue_downloadTaskForRequest:(id)a resumeData:(id)b completion:(@?)c ;
 - (id) backgroundResumeDataFromClientResumeData:(id)a ;
 - (id) _downloadTaskForResumeData:(id)a ;
 - (id) _downloadTaskForRequest:(id)a ;
 - (id) _onqueue_AVAssetDownloadTaskForURL:(id)a destinationURL:(id)b options:(id)c ;
 - (id) connectionLostErrorWithURL:(id)a ;
 - (void) setCookiesFromResponse:(id)a forOriginalRequest:(id)b ;
 - (id) appWakeUUID;
 - (void) setAppWakeUUID:(id)a ;
 - (void) backgroundTaskDidResume:(unsigned long long)a ;
 - (void) backgroundTaskDidSuspend:(unsigned long long)a ;
 - (void) backgroundTask:(unsigned long long)a didReceiveChallenge:(id)b reply:(@?)c ;
 - (void) backgroundTask:(unsigned long long)a willPerformHTTPRedirection:(id)b withNewRequest:(id)c reply:(@?)d ;
 - (void) backgroundTask:(unsigned long long)a _willSendRequestForEstablishedConnection:(id)b reply:(@?)c ;
 - (void) backgroundTaskHasConnectionWaiting:(unsigned long long)a ;
 - (void) backgroundTask:(unsigned long long)a hasConnectionWaitingWithReason:(long long)b ;
 - (void) backgroundTask:(unsigned long long)a hasConnectionWaitingWithError:(id)b ;
 - (void) backgroundTask:(unsigned long long)a didReceiveResponse:(id)b timingData:(id)c ;
 - (void) backgroundTask:(unsigned long long)a didReceiveResponse:(id)b timingData:(id)c reply:(@?)d ;
 - (void) backgroundTask:(unsigned long long)a didSendBodyData:(long long)b totalBytesSent:(long long)c totalBytesExpectedToSend:(long long)d ;
 - (void) backgroundTask:(unsigned long long)a needNewBodyStream:(BOOL)b withReply:(@?)c ;
 - (void) backgroundTask:(unsigned long long)a didCompleteWithError:(id)b timingData:(id)c reply:(@?)d ;
 - (void) backgroundDataTask:(unsigned long long)a didReceiveData:(id)b withReply:(@?)c ;
 - (void) backgroundDataTaskDidBecomeDownloadTask:(unsigned long long)a ;
 - (void) willRetryBackgroundDataTask:(unsigned long long)a withError:(id)b timingData:(id)c ;
 - (void) backgroundDownloadTask:(unsigned long long)a didWriteData:(long long)b totalBytesWritten:(long long)c totalBytesExpectedToWrite:(long long)d ;
 - (void) backgroundDownloadTask:(unsigned long long)a didResumeAtOffset:(long long)b expectedTotalBytes:(long long)c ;
 - (void) backgroundDownloadTask:(unsigned long long)a didFinishDownloadingToURL:(id)b reply:(@?)c ;
 - (void) openFileAtPath:(id)a mode:(int)b withReply:(@?)c ;
 - (void) backgroundAVAssetDownloadTaskDidUpdateProgress:(unsigned long long)a totalBytesWritten:(unsigned long long)b totalBytesExpectedToWrite:(unsigned long long)c ;
 - (void) backgroundAVAssetDownloadTask:(unsigned long long)a didReceiveDownloadToken:(unsigned long long)b ;
 - (void) backgroundSessionDidStartAppWake:(id)a reply:(@?)b ;
 - (void) backgroundSessionDidFinishAppWake:(id)a reply:(@?)b ;
 - (void) credStorage_getInitialCredentialDictionariesWithReply:(@?)a ;
 - (void) credStorage_credentialsForProtectionSpace:(id)a reply:(@?)b ;
 - (void) credStorage_allCredentialsWithReply:(@?)a ;
 - (void) credStorage_setCredential:(id)a forProtectionSpace:(id)b ;
 - (void) credStorage_removeCredential:(id)a forProtectionSpace:(id)b ;
 - (void) credStorage_defaultCredentialForProtectionSpace:(id)a reply:(@?)b ;
 - (void) credStorage_setDefaultCredential:(id)a forProtectionSpace:(id)b ;
 - (id) clientResumeDataFromBackgroundResumeData:(id)a ;
 - (void) _onqueue_disavowTask:(id)a ;


@end
